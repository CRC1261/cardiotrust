<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="91437"><g><title>main`&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (14 samples, 0.02%)</title><rect x="0.0055%" y="517" width="0.0153%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="14"/><text x="0.2555%" y="527.50"></text></g><g><title>main`bevy_core_pipeline::tonemapping::setup_tonemapping_lut_image (18 samples, 0.02%)</title><rect x="0.0241%" y="469" width="0.0197%" height="15" fill="rgb(217,0,24)" fg:x="22" fg:w="18"/><text x="0.2741%" y="479.50"></text></g><g><title>main`bevy_render::texture::image::Image::from_buffer (18 samples, 0.02%)</title><rect x="0.0241%" y="453" width="0.0197%" height="15" fill="rgb(221,193,54)" fg:x="22" fg:w="18"/><text x="0.2741%" y="463.50"></text></g><g><title>main`&lt;ruzstd::streaming_decoder::StreamingDecoder&lt;READ,DEC&gt; as std::io::Read&gt;::read (12 samples, 0.01%)</title><rect x="0.0306%" y="437" width="0.0131%" height="15" fill="rgb(248,212,6)" fg:x="28" fg:w="12"/><text x="0.2806%" y="447.50"></text></g><g><title>main`&lt;bevy_core_pipeline::tonemapping::TonemappingPlugin as bevy_app::plugin::Plugin&gt;::build (19 samples, 0.02%)</title><rect x="0.0241%" y="485" width="0.0208%" height="15" fill="rgb(208,68,35)" fg:x="22" fg:w="19"/><text x="0.2741%" y="495.50"></text></g><g><title>main`&lt;bevy_core_pipeline::CorePipelinePlugin as bevy_app::plugin::Plugin&gt;::build (22 samples, 0.02%)</title><rect x="0.0219%" y="517" width="0.0241%" height="15" fill="rgb(232,128,0)" fg:x="20" fg:w="22"/><text x="0.2719%" y="527.50"></text></g><g><title>main`bevy_app::app::App::add_boxed_plugin (22 samples, 0.02%)</title><rect x="0.0219%" y="501" width="0.0241%" height="15" fill="rgb(207,160,47)" fg:x="20" fg:w="22"/><text x="0.2719%" y="511.50"></text></g><g><title>main`bevy_app::app::App::add_boxed_plugin (72 samples, 0.08%)</title><rect x="0.0022%" y="533" width="0.0787%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="72"/><text x="0.2522%" y="543.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (10 samples, 0.01%)</title><rect x="0.1039%" y="357" width="0.0109%" height="15" fill="rgb(218,30,26)" fg:x="95" fg:w="10"/><text x="0.3539%" y="367.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (10 samples, 0.01%)</title><rect x="0.1039%" y="341" width="0.0109%" height="15" fill="rgb(220,122,19)" fg:x="95" fg:w="10"/><text x="0.3539%" y="351.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (10 samples, 0.01%)</title><rect x="0.1039%" y="325" width="0.0109%" height="15" fill="rgb(250,228,42)" fg:x="95" fg:w="10"/><text x="0.3539%" y="335.50"></text></g><g><title>AppKit`NSControlTrackMouse (10 samples, 0.01%)</title><rect x="0.1039%" y="309" width="0.0109%" height="15" fill="rgb(240,193,28)" fg:x="95" fg:w="10"/><text x="0.3539%" y="319.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (10 samples, 0.01%)</title><rect x="0.1039%" y="293" width="0.0109%" height="15" fill="rgb(216,20,37)" fg:x="95" fg:w="10"/><text x="0.3539%" y="303.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (12 samples, 0.01%)</title><rect x="0.1039%" y="405" width="0.0131%" height="15" fill="rgb(206,188,39)" fg:x="95" fg:w="12"/><text x="0.3539%" y="415.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (12 samples, 0.01%)</title><rect x="0.1039%" y="389" width="0.0131%" height="15" fill="rgb(217,207,13)" fg:x="95" fg:w="12"/><text x="0.3539%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (12 samples, 0.01%)</title><rect x="0.1039%" y="373" width="0.0131%" height="15" fill="rgb(231,73,38)" fg:x="95" fg:w="12"/><text x="0.3539%" y="383.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (16 samples, 0.02%)</title><rect x="0.1225%" y="325" width="0.0175%" height="15" fill="rgb(225,20,46)" fg:x="112" fg:w="16"/><text x="0.3725%" y="335.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _mouseMoved:] (24 samples, 0.03%)</title><rect x="0.1203%" y="341" width="0.0262%" height="15" fill="rgb(210,31,41)" fg:x="110" fg:w="24"/><text x="0.3703%" y="351.50"></text></g><g><title>AppKit`_routeMouseMovedEvent (28 samples, 0.03%)</title><rect x="0.1203%" y="357" width="0.0306%" height="15" fill="rgb(221,200,47)" fg:x="110" fg:w="28"/><text x="0.3703%" y="367.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (29 samples, 0.03%)</title><rect x="0.1203%" y="373" width="0.0317%" height="15" fill="rgb(226,26,5)" fg:x="110" fg:w="29"/><text x="0.3703%" y="383.50"></text></g><g><title>AppKit`routeMouseMovedEvent (33 samples, 0.04%)</title><rect x="0.1181%" y="405" width="0.0361%" height="15" fill="rgb(249,33,26)" fg:x="108" fg:w="33"/><text x="0.3681%" y="415.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (32 samples, 0.03%)</title><rect x="0.1192%" y="389" width="0.0350%" height="15" fill="rgb(235,183,28)" fg:x="109" fg:w="32"/><text x="0.3692%" y="399.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (59 samples, 0.06%)</title><rect x="0.0930%" y="453" width="0.0645%" height="15" fill="rgb(221,5,38)" fg:x="85" fg:w="59"/><text x="0.3430%" y="463.50"></text></g><g><title>main`winit::platform_impl::platform::app::WinitApplication::send_event (57 samples, 0.06%)</title><rect x="0.0951%" y="437" width="0.0623%" height="15" fill="rgb(247,18,42)" fg:x="87" fg:w="57"/><text x="0.3451%" y="447.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (57 samples, 0.06%)</title><rect x="0.0951%" y="421" width="0.0623%" height="15" fill="rgb(241,131,45)" fg:x="87" fg:w="57"/><text x="0.3451%" y="431.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (10 samples, 0.01%)</title><rect x="0.1706%" y="69" width="0.0109%" height="15" fill="rgb(249,31,29)" fg:x="156" fg:w="10"/><text x="0.4206%" y="79.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (10 samples, 0.01%)</title><rect x="0.1706%" y="53" width="0.0109%" height="15" fill="rgb(225,111,53)" fg:x="156" fg:w="10"/><text x="0.4206%" y="63.50"></text></g><g><title>main`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (21 samples, 0.02%)</title><rect x="0.1706%" y="165" width="0.0230%" height="15" fill="rgb(238,160,17)" fg:x="156" fg:w="21"/><text x="0.4206%" y="175.50"></text></g><g><title>main`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (21 samples, 0.02%)</title><rect x="0.1706%" y="149" width="0.0230%" height="15" fill="rgb(214,148,48)" fg:x="156" fg:w="21"/><text x="0.4206%" y="159.50"></text></g><g><title>main`bevy_winit::winit_runner::_{{closure}} (21 samples, 0.02%)</title><rect x="0.1706%" y="133" width="0.0230%" height="15" fill="rgb(232,36,49)" fg:x="156" fg:w="21"/><text x="0.4206%" y="143.50"></text></g><g><title>main`bevy_winit::system::create_windows (21 samples, 0.02%)</title><rect x="0.1706%" y="117" width="0.0230%" height="15" fill="rgb(209,103,24)" fg:x="156" fg:w="21"/><text x="0.4206%" y="127.50"></text></g><g><title>main`bevy_winit::winit_windows::WinitWindows::create_window (21 samples, 0.02%)</title><rect x="0.1706%" y="101" width="0.0230%" height="15" fill="rgb(229,88,8)" fg:x="156" fg:w="21"/><text x="0.4206%" y="111.50"></text></g><g><title>main`winit::platform_impl::platform::window::WinitWindow::new (21 samples, 0.02%)</title><rect x="0.1706%" y="85" width="0.0230%" height="15" fill="rgb(213,181,19)" fg:x="156" fg:w="21"/><text x="0.4206%" y="95.50"></text></g><g><title>main`winit::platform_impl::platform::util::async::toggle_full_screen_sync (10 samples, 0.01%)</title><rect x="0.1826%" y="69" width="0.0109%" height="15" fill="rgb(254,191,54)" fg:x="167" fg:w="10"/><text x="0.4326%" y="79.50"></text></g><g><title>AppKit`-[_NSFullScreenSpace(Transitions) startTransition:] (10 samples, 0.01%)</title><rect x="0.1826%" y="53" width="0.0109%" height="15" fill="rgb(241,83,37)" fg:x="167" fg:w="10"/><text x="0.4326%" y="63.50"></text></g><g><title>AppKit`-[_NSEnterFullScreenTransitionController start] (10 samples, 0.01%)</title><rect x="0.1826%" y="37" width="0.0109%" height="15" fill="rgb(233,36,39)" fg:x="167" fg:w="10"/><text x="0.4326%" y="47.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (24 samples, 0.03%)</title><rect x="0.1695%" y="421" width="0.0262%" height="15" fill="rgb(226,3,54)" fg:x="155" fg:w="24"/><text x="0.4195%" y="431.50"></text></g><g><title>AE`aeProcessAppleEvent (24 samples, 0.03%)</title><rect x="0.1695%" y="405" width="0.0262%" height="15" fill="rgb(245,192,40)" fg:x="155" fg:w="24"/><text x="0.4195%" y="415.50"></text></g><g><title>AE`0x00000001917d06bc (24 samples, 0.03%)</title><rect x="0.1695%" y="389" width="0.0262%" height="15" fill="rgb(238,167,29)" fg:x="155" fg:w="24"/><text x="0.4195%" y="399.50"></text></g><g><title>AE`0x00000001917d0768 (24 samples, 0.03%)</title><rect x="0.1695%" y="373" width="0.0262%" height="15" fill="rgb(232,182,51)" fg:x="155" fg:w="24"/><text x="0.4195%" y="383.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (24 samples, 0.03%)</title><rect x="0.1695%" y="357" width="0.0262%" height="15" fill="rgb(231,60,39)" fg:x="155" fg:w="24"/><text x="0.4195%" y="367.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (24 samples, 0.03%)</title><rect x="0.1695%" y="341" width="0.0262%" height="15" fill="rgb(208,69,12)" fg:x="155" fg:w="24"/><text x="0.4195%" y="351.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (24 samples, 0.03%)</title><rect x="0.1695%" y="325" width="0.0262%" height="15" fill="rgb(235,93,37)" fg:x="155" fg:w="24"/><text x="0.4195%" y="335.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (24 samples, 0.03%)</title><rect x="0.1695%" y="309" width="0.0262%" height="15" fill="rgb(213,116,39)" fg:x="155" fg:w="24"/><text x="0.4195%" y="319.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (24 samples, 0.03%)</title><rect x="0.1695%" y="293" width="0.0262%" height="15" fill="rgb(222,207,29)" fg:x="155" fg:w="24"/><text x="0.4195%" y="303.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (24 samples, 0.03%)</title><rect x="0.1695%" y="277" width="0.0262%" height="15" fill="rgb(206,96,30)" fg:x="155" fg:w="24"/><text x="0.4195%" y="287.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (24 samples, 0.03%)</title><rect x="0.1695%" y="261" width="0.0262%" height="15" fill="rgb(218,138,4)" fg:x="155" fg:w="24"/><text x="0.4195%" y="271.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (24 samples, 0.03%)</title><rect x="0.1695%" y="245" width="0.0262%" height="15" fill="rgb(250,191,14)" fg:x="155" fg:w="24"/><text x="0.4195%" y="255.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (24 samples, 0.03%)</title><rect x="0.1695%" y="229" width="0.0262%" height="15" fill="rgb(239,60,40)" fg:x="155" fg:w="24"/><text x="0.4195%" y="239.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (24 samples, 0.03%)</title><rect x="0.1695%" y="213" width="0.0262%" height="15" fill="rgb(206,27,48)" fg:x="155" fg:w="24"/><text x="0.4195%" y="223.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (24 samples, 0.03%)</title><rect x="0.1695%" y="197" width="0.0262%" height="15" fill="rgb(225,35,8)" fg:x="155" fg:w="24"/><text x="0.4195%" y="207.50"></text></g><g><title>main`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (24 samples, 0.03%)</title><rect x="0.1695%" y="181" width="0.0262%" height="15" fill="rgb(250,213,24)" fg:x="155" fg:w="24"/><text x="0.4195%" y="191.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (10 samples, 0.01%)</title><rect x="0.2067%" y="277" width="0.0109%" height="15" fill="rgb(247,123,22)" fg:x="189" fg:w="10"/><text x="0.4567%" y="287.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (10 samples, 0.01%)</title><rect x="0.2067%" y="261" width="0.0109%" height="15" fill="rgb(231,138,38)" fg:x="189" fg:w="10"/><text x="0.4567%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (10 samples, 0.01%)</title><rect x="0.2067%" y="245" width="0.0109%" height="15" fill="rgb(231,145,46)" fg:x="189" fg:w="10"/><text x="0.4567%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (10 samples, 0.01%)</title><rect x="0.2067%" y="229" width="0.0109%" height="15" fill="rgb(251,118,11)" fg:x="189" fg:w="10"/><text x="0.4567%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.01%)</title><rect x="0.2067%" y="213" width="0.0109%" height="15" fill="rgb(217,147,25)" fg:x="189" fg:w="10"/><text x="0.4567%" y="223.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (22 samples, 0.02%)</title><rect x="0.2012%" y="293" width="0.0241%" height="15" fill="rgb(247,81,37)" fg:x="184" fg:w="22"/><text x="0.4512%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (24 samples, 0.03%)</title><rect x="0.2001%" y="357" width="0.0262%" height="15" fill="rgb(209,12,38)" fg:x="183" fg:w="24"/><text x="0.4501%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (23 samples, 0.03%)</title><rect x="0.2012%" y="341" width="0.0252%" height="15" fill="rgb(227,1,9)" fg:x="184" fg:w="23"/><text x="0.4512%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (23 samples, 0.03%)</title><rect x="0.2012%" y="325" width="0.0252%" height="15" fill="rgb(248,47,43)" fg:x="184" fg:w="23"/><text x="0.4512%" y="335.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (23 samples, 0.03%)</title><rect x="0.2012%" y="309" width="0.0252%" height="15" fill="rgb(221,10,30)" fg:x="184" fg:w="23"/><text x="0.4512%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (24 samples, 0.03%)</title><rect x="0.2286%" y="293" width="0.0262%" height="15" fill="rgb(210,229,1)" fg:x="209" fg:w="24"/><text x="0.4786%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (24 samples, 0.03%)</title><rect x="0.2286%" y="277" width="0.0262%" height="15" fill="rgb(222,148,37)" fg:x="209" fg:w="24"/><text x="0.4786%" y="287.50"></text></g><g><title>SkyLight`invocation function for block in CGSDatagramReadStream::mainQueueWakeup (19 samples, 0.02%)</title><rect x="0.2340%" y="261" width="0.0208%" height="15" fill="rgb(234,67,33)" fg:x="214" fg:w="19"/><text x="0.4840%" y="271.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::dispatchMainQueueDatagrams (19 samples, 0.02%)</title><rect x="0.2340%" y="245" width="0.0208%" height="15" fill="rgb(247,98,35)" fg:x="214" fg:w="19"/><text x="0.4840%" y="255.50"></text></g><g><title>SkyLight`(anonymous namespace)::notify_datagram_handler (19 samples, 0.02%)</title><rect x="0.2340%" y="229" width="0.0208%" height="15" fill="rgb(247,138,52)" fg:x="214" fg:w="19"/><text x="0.4840%" y="239.50"></text></g><g><title>SkyLight`CGSPostLocalNotification (17 samples, 0.02%)</title><rect x="0.2362%" y="213" width="0.0186%" height="15" fill="rgb(213,79,30)" fg:x="216" fg:w="17"/><text x="0.4862%" y="223.50"></text></g><g><title>SkyLight`post_coordinated_distributed_notification(CGSNotificationType, void*, unsigned int, void*) (17 samples, 0.02%)</title><rect x="0.2362%" y="197" width="0.0186%" height="15" fill="rgb(246,177,23)" fg:x="216" fg:w="17"/><text x="0.4862%" y="207.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (17 samples, 0.02%)</title><rect x="0.2362%" y="181" width="0.0186%" height="15" fill="rgb(230,62,27)" fg:x="216" fg:w="17"/><text x="0.4862%" y="191.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (17 samples, 0.02%)</title><rect x="0.2362%" y="165" width="0.0186%" height="15" fill="rgb(216,154,8)" fg:x="216" fg:w="17"/><text x="0.4862%" y="175.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (17 samples, 0.02%)</title><rect x="0.2362%" y="149" width="0.0186%" height="15" fill="rgb(244,35,45)" fg:x="216" fg:w="17"/><text x="0.4862%" y="159.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (17 samples, 0.02%)</title><rect x="0.2362%" y="133" width="0.0186%" height="15" fill="rgb(251,115,12)" fg:x="216" fg:w="17"/><text x="0.4862%" y="143.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (17 samples, 0.02%)</title><rect x="0.2362%" y="117" width="0.0186%" height="15" fill="rgb(240,54,50)" fg:x="216" fg:w="17"/><text x="0.4862%" y="127.50"></text></g><g><title>AppKit`__57+[NSCGSSpace addMenuBarRevealChangedNotificationHandler:]_block_invoke (17 samples, 0.02%)</title><rect x="0.2362%" y="101" width="0.0186%" height="15" fill="rgb(233,84,52)" fg:x="216" fg:w="17"/><text x="0.4862%" y="111.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (14 samples, 0.02%)</title><rect x="0.2395%" y="85" width="0.0153%" height="15" fill="rgb(207,117,47)" fg:x="219" fg:w="14"/><text x="0.4895%" y="95.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (25 samples, 0.03%)</title><rect x="0.2286%" y="341" width="0.0273%" height="15" fill="rgb(249,43,39)" fg:x="209" fg:w="25"/><text x="0.4786%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (25 samples, 0.03%)</title><rect x="0.2286%" y="325" width="0.0273%" height="15" fill="rgb(209,38,44)" fg:x="209" fg:w="25"/><text x="0.4786%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (25 samples, 0.03%)</title><rect x="0.2286%" y="309" width="0.0273%" height="15" fill="rgb(236,212,23)" fg:x="209" fg:w="25"/><text x="0.4786%" y="319.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (12 samples, 0.01%)</title><rect x="0.2658%" y="277" width="0.0131%" height="15" fill="rgb(242,79,21)" fg:x="243" fg:w="12"/><text x="0.5158%" y="287.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (18 samples, 0.02%)</title><rect x="0.2658%" y="293" width="0.0197%" height="15" fill="rgb(211,96,35)" fg:x="243" fg:w="18"/><text x="0.5158%" y="303.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (14 samples, 0.02%)</title><rect x="0.2854%" y="293" width="0.0153%" height="15" fill="rgb(253,215,40)" fg:x="261" fg:w="14"/><text x="0.5354%" y="303.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (12 samples, 0.01%)</title><rect x="0.2876%" y="277" width="0.0131%" height="15" fill="rgb(211,81,21)" fg:x="263" fg:w="12"/><text x="0.5376%" y="287.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (33 samples, 0.04%)</title><rect x="0.2658%" y="309" width="0.0361%" height="15" fill="rgb(208,190,38)" fg:x="243" fg:w="33"/><text x="0.5158%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.01%)</title><rect x="0.3303%" y="197" width="0.0109%" height="15" fill="rgb(235,213,38)" fg:x="302" fg:w="10"/><text x="0.5803%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (13 samples, 0.01%)</title><rect x="0.3751%" y="181" width="0.0142%" height="15" fill="rgb(237,122,38)" fg:x="343" fg:w="13"/><text x="0.6251%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (13 samples, 0.01%)</title><rect x="0.3751%" y="165" width="0.0142%" height="15" fill="rgb(244,218,35)" fg:x="343" fg:w="13"/><text x="0.6251%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (11 samples, 0.01%)</title><rect x="0.3773%" y="149" width="0.0120%" height="15" fill="rgb(240,68,47)" fg:x="345" fg:w="11"/><text x="0.6273%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (12 samples, 0.01%)</title><rect x="0.3926%" y="165" width="0.0131%" height="15" fill="rgb(210,16,53)" fg:x="359" fg:w="12"/><text x="0.6426%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (13 samples, 0.01%)</title><rect x="0.3926%" y="181" width="0.0142%" height="15" fill="rgb(235,124,12)" fg:x="359" fg:w="13"/><text x="0.6426%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (12 samples, 0.01%)</title><rect x="0.4068%" y="181" width="0.0131%" height="15" fill="rgb(224,169,11)" fg:x="372" fg:w="12"/><text x="0.6568%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (12 samples, 0.01%)</title><rect x="0.4068%" y="165" width="0.0131%" height="15" fill="rgb(250,166,2)" fg:x="372" fg:w="12"/><text x="0.6568%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (47 samples, 0.05%)</title><rect x="0.4364%" y="149" width="0.0514%" height="15" fill="rgb(242,216,29)" fg:x="399" fg:w="47"/><text x="0.6864%" y="159.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (53 samples, 0.06%)</title><rect x="0.4342%" y="181" width="0.0580%" height="15" fill="rgb(230,116,27)" fg:x="397" fg:w="53"/><text x="0.6842%" y="191.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (51 samples, 0.06%)</title><rect x="0.4364%" y="165" width="0.0558%" height="15" fill="rgb(228,99,48)" fg:x="399" fg:w="51"/><text x="0.6864%" y="175.50"></text></g><g><title>main`&lt;async_executor::Ticker as core::ops::drop::Drop&gt;::drop (24 samples, 0.03%)</title><rect x="0.5151%" y="165" width="0.0262%" height="15" fill="rgb(253,11,6)" fg:x="471" fg:w="24"/><text x="0.7651%" y="175.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.05%)</title><rect x="0.5676%" y="149" width="0.0481%" height="15" fill="rgb(247,143,39)" fg:x="519" fg:w="44"/><text x="0.8176%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (44 samples, 0.05%)</title><rect x="0.5676%" y="133" width="0.0481%" height="15" fill="rgb(236,97,10)" fg:x="519" fg:w="44"/><text x="0.8176%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (44 samples, 0.05%)</title><rect x="0.5676%" y="117" width="0.0481%" height="15" fill="rgb(233,208,19)" fg:x="519" fg:w="44"/><text x="0.8176%" y="127.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.02%)</title><rect x="0.6726%" y="117" width="0.0164%" height="15" fill="rgb(216,164,2)" fg:x="615" fg:w="15"/><text x="0.9226%" y="127.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (11 samples, 0.01%)</title><rect x="0.6999%" y="53" width="0.0120%" height="15" fill="rgb(220,129,5)" fg:x="640" fg:w="11"/><text x="0.9499%" y="63.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (28 samples, 0.03%)</title><rect x="0.6945%" y="69" width="0.0306%" height="15" fill="rgb(242,17,10)" fg:x="635" fg:w="28"/><text x="0.9445%" y="79.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (32 samples, 0.03%)</title><rect x="0.6934%" y="85" width="0.0350%" height="15" fill="rgb(242,107,0)" fg:x="634" fg:w="32"/><text x="0.9434%" y="95.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (45 samples, 0.05%)</title><rect x="0.6934%" y="101" width="0.0492%" height="15" fill="rgb(251,28,31)" fg:x="634" fg:w="45"/><text x="0.9434%" y="111.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (100 samples, 0.11%)</title><rect x="0.6365%" y="133" width="0.1094%" height="15" fill="rgb(233,223,10)" fg:x="582" fg:w="100"/><text x="0.8865%" y="143.50"></text></g><g><title>main`wgpu::Surface::get_current_texture (51 samples, 0.06%)</title><rect x="0.6901%" y="117" width="0.0558%" height="15" fill="rgb(215,21,27)" fg:x="631" fg:w="51"/><text x="0.9401%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (41 samples, 0.04%)</title><rect x="0.7776%" y="53" width="0.0448%" height="15" fill="rgb(232,23,21)" fg:x="711" fg:w="41"/><text x="1.0276%" y="63.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (51 samples, 0.06%)</title><rect x="0.7710%" y="85" width="0.0558%" height="15" fill="rgb(244,5,23)" fg:x="705" fg:w="51"/><text x="1.0210%" y="95.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (45 samples, 0.05%)</title><rect x="0.7776%" y="69" width="0.0492%" height="15" fill="rgb(226,81,46)" fg:x="711" fg:w="45"/><text x="1.0276%" y="79.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (75 samples, 0.08%)</title><rect x="0.7459%" y="133" width="0.0820%" height="15" fill="rgb(247,70,30)" fg:x="682" fg:w="75"/><text x="0.9959%" y="143.50"></text></g><g><title>main`event_listener::Event::notify_additional (72 samples, 0.08%)</title><rect x="0.7491%" y="117" width="0.0787%" height="15" fill="rgb(212,68,19)" fg:x="685" fg:w="72"/><text x="0.9991%" y="127.50"></text></g><g><title>main`event_listener::List::notify_additional (58 samples, 0.06%)</title><rect x="0.7645%" y="101" width="0.0634%" height="15" fill="rgb(240,187,13)" fg:x="699" fg:w="58"/><text x="1.0145%" y="111.50"></text></g><g><title>main`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (198 samples, 0.22%)</title><rect x="0.6179%" y="149" width="0.2165%" height="15" fill="rgb(223,113,26)" fg:x="565" fg:w="198"/><text x="0.8679%" y="159.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (264 samples, 0.29%)</title><rect x="0.5490%" y="165" width="0.2887%" height="15" fill="rgb(206,192,2)" fg:x="502" fg:w="264"/><text x="0.7990%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.01%)</title><rect x="0.9438%" y="133" width="0.0109%" height="15" fill="rgb(241,108,4)" fg:x="863" fg:w="10"/><text x="1.1938%" y="143.50"></text></g><g><title>main`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.11%)</title><rect x="0.8520%" y="149" width="0.1105%" height="15" fill="rgb(247,173,49)" fg:x="779" fg:w="101"/><text x="1.1020%" y="159.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (123 samples, 0.13%)</title><rect x="0.8377%" y="165" width="0.1345%" height="15" fill="rgb(224,114,35)" fg:x="766" fg:w="123"/><text x="1.0877%" y="175.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (437 samples, 0.48%)</title><rect x="0.4998%" y="181" width="0.4779%" height="15" fill="rgb(245,159,27)" fg:x="457" fg:w="437"/><text x="0.7498%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (449 samples, 0.49%)</title><rect x="1.0083%" y="165" width="0.4910%" height="15" fill="rgb(245,172,44)" fg:x="922" fg:w="449"/><text x="1.2583%" y="175.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (1,057 samples, 1.16%)</title><rect x="0.3511%" y="197" width="1.1560%" height="15" fill="rgb(236,23,11)" fg:x="321" fg:w="1057"/><text x="0.6011%" y="207.50"></text></g><g><title>main`parking::Parker::park (469 samples, 0.51%)</title><rect x="0.9941%" y="181" width="0.5129%" height="15" fill="rgb(205,117,38)" fg:x="909" fg:w="469"/><text x="1.2441%" y="191.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (44 samples, 0.05%)</title><rect x="1.5136%" y="165" width="0.0481%" height="15" fill="rgb(237,72,25)" fg:x="1384" fg:w="44"/><text x="1.7636%" y="175.50"></text></g><g><title>main`parking::Parker::park (18 samples, 0.02%)</title><rect x="1.5420%" y="149" width="0.0197%" height="15" fill="rgb(244,70,9)" fg:x="1410" fg:w="18"/><text x="1.7920%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (18 samples, 0.02%)</title><rect x="1.5420%" y="133" width="0.0197%" height="15" fill="rgb(217,125,39)" fg:x="1410" fg:w="18"/><text x="1.7920%" y="143.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (52 samples, 0.06%)</title><rect x="1.5070%" y="197" width="0.0569%" height="15" fill="rgb(235,36,10)" fg:x="1378" fg:w="52"/><text x="1.7570%" y="207.50"></text></g><g><title>main`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (51 samples, 0.06%)</title><rect x="1.5081%" y="181" width="0.0558%" height="15" fill="rgb(251,123,47)" fg:x="1379" fg:w="51"/><text x="1.7581%" y="191.50"></text></g><g><title>main`bevy_ecs::schedule::schedule::Schedules::insert (12 samples, 0.01%)</title><rect x="1.5672%" y="197" width="0.0131%" height="15" fill="rgb(221,13,13)" fg:x="1433" fg:w="12"/><text x="1.8172%" y="207.50"></text></g><g><title>main`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (1,153 samples, 1.26%)</title><rect x="0.3248%" y="213" width="1.2610%" height="15" fill="rgb(238,131,9)" fg:x="297" fg:w="1153"/><text x="0.5748%" y="223.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (1,160 samples, 1.27%)</title><rect x="0.3183%" y="229" width="1.2686%" height="15" fill="rgb(211,50,8)" fg:x="291" fg:w="1160"/><text x="0.5683%" y="239.50"></text></g><g><title>main`bevy_ecs::world::World::schedule_scope (1,167 samples, 1.28%)</title><rect x="0.3128%" y="245" width="1.2763%" height="15" fill="rgb(245,182,24)" fg:x="286" fg:w="1167"/><text x="0.5628%" y="255.50"></text></g><g><title>main`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="1.6372%" y="165" width="0.0306%" height="15" fill="rgb(242,14,37)" fg:x="1497" fg:w="28"/><text x="1.8872%" y="175.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (33 samples, 0.04%)</title><rect x="1.6328%" y="197" width="0.0361%" height="15" fill="rgb(246,228,12)" fg:x="1493" fg:w="33"/><text x="1.8828%" y="207.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (33 samples, 0.04%)</title><rect x="1.6328%" y="181" width="0.0361%" height="15" fill="rgb(213,55,15)" fg:x="1493" fg:w="33"/><text x="1.8828%" y="191.50"></text></g><g><title>main`parking::Parker::park (20 samples, 0.02%)</title><rect x="1.6689%" y="197" width="0.0219%" height="15" fill="rgb(209,9,3)" fg:x="1526" fg:w="20"/><text x="1.9189%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (19 samples, 0.02%)</title><rect x="1.6700%" y="181" width="0.0208%" height="15" fill="rgb(230,59,30)" fg:x="1527" fg:w="19"/><text x="1.9200%" y="191.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (62 samples, 0.07%)</title><rect x="1.6241%" y="213" width="0.0678%" height="15" fill="rgb(209,121,21)" fg:x="1485" fg:w="62"/><text x="1.8741%" y="223.50"></text></g><g><title>main`bevy_render::initialize_render_app::_{{closure}} (68 samples, 0.07%)</title><rect x="1.6219%" y="229" width="0.0744%" height="15" fill="rgb(220,109,13)" fg:x="1483" fg:w="68"/><text x="1.8719%" y="239.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (15 samples, 0.02%)</title><rect x="1.7148%" y="213" width="0.0164%" height="15" fill="rgb(232,18,1)" fg:x="1568" fg:w="15"/><text x="1.9648%" y="223.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (44 samples, 0.05%)</title><rect x="1.6962%" y="229" width="0.0481%" height="15" fill="rgb(215,41,42)" fg:x="1551" fg:w="44"/><text x="1.9462%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (20 samples, 0.02%)</title><rect x="1.7455%" y="213" width="0.0219%" height="15" fill="rgb(224,123,36)" fg:x="1596" fg:w="20"/><text x="1.9955%" y="223.50"></text></g><g><title>main`bevy_winit::winit_runner::_{{closure}} (1,335 samples, 1.46%)</title><rect x="0.3084%" y="261" width="1.4600%" height="15" fill="rgb(240,125,3)" fg:x="282" fg:w="1335"/><text x="0.5584%" y="271.50"></text></g><g><title>main`bevy_render::pipelined_rendering::update_rendering (164 samples, 0.18%)</title><rect x="1.5891%" y="245" width="0.1794%" height="15" fill="rgb(205,98,50)" fg:x="1453" fg:w="164"/><text x="1.8391%" y="255.50"></text></g><g><title>main`parking::Parker::park (22 samples, 0.02%)</title><rect x="1.7444%" y="229" width="0.0241%" height="15" fill="rgb(205,185,37)" fg:x="1595" fg:w="22"/><text x="1.9944%" y="239.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (1,375 samples, 1.50%)</title><rect x="0.2658%" y="325" width="1.5038%" height="15" fill="rgb(238,207,15)" fg:x="243" fg:w="1375"/><text x="0.5158%" y="335.50"></text></g><g><title>main`winit::platform_impl::platform::observer::control_flow_end_handler (1,341 samples, 1.47%)</title><rect x="0.3029%" y="309" width="1.4666%" height="15" fill="rgb(213,199,42)" fg:x="277" fg:w="1341"/><text x="0.5529%" y="319.50"></text></g><g><title>main`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (1,337 samples, 1.46%)</title><rect x="0.3073%" y="293" width="1.4622%" height="15" fill="rgb(235,201,11)" fg:x="281" fg:w="1337"/><text x="0.5573%" y="303.50"></text></g><g><title>main`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (1,337 samples, 1.46%)</title><rect x="0.3073%" y="277" width="1.4622%" height="15" fill="rgb(207,46,11)" fg:x="281" fg:w="1337"/><text x="0.5573%" y="287.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (1,385 samples, 1.51%)</title><rect x="0.2614%" y="341" width="1.5147%" height="15" fill="rgb(241,35,35)" fg:x="239" fg:w="1385"/><text x="0.5114%" y="351.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (15 samples, 0.02%)</title><rect x="2.1960%" y="309" width="0.0164%" height="15" fill="rgb(243,32,47)" fg:x="2008" fg:w="15"/><text x="2.4460%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (12 samples, 0.01%)</title><rect x="2.1993%" y="293" width="0.0131%" height="15" fill="rgb(247,202,23)" fg:x="2011" fg:w="12"/><text x="2.4493%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (403 samples, 0.44%)</title><rect x="1.7805%" y="325" width="0.4407%" height="15" fill="rgb(219,102,11)" fg:x="1628" fg:w="403"/><text x="2.0305%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (410 samples, 0.45%)</title><rect x="1.7761%" y="341" width="0.4484%" height="15" fill="rgb(243,110,44)" fg:x="1624" fg:w="410"/><text x="2.0261%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (1,848 samples, 2.02%)</title><rect x="0.2264%" y="357" width="2.0211%" height="15" fill="rgb(222,74,54)" fg:x="207" fg:w="1848"/><text x="0.4764%" y="367.50">C..</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (1,875 samples, 2.05%)</title><rect x="0.1980%" y="373" width="2.0506%" height="15" fill="rgb(216,99,12)" fg:x="181" fg:w="1875"/><text x="0.4480%" y="383.50">C..</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (1,885 samples, 2.06%)</title><rect x="0.1980%" y="389" width="2.0615%" height="15" fill="rgb(226,22,26)" fg:x="181" fg:w="1885"/><text x="0.4480%" y="399.50">H..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (1,889 samples, 2.07%)</title><rect x="0.1958%" y="421" width="2.0659%" height="15" fill="rgb(217,163,10)" fg:x="179" fg:w="1889"/><text x="0.4458%" y="431.50">H..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (1,889 samples, 2.07%)</title><rect x="0.1958%" y="405" width="2.0659%" height="15" fill="rgb(213,25,53)" fg:x="179" fg:w="1889"/><text x="0.4458%" y="415.50">H..</text></g><g><title>AppKit`_DPSNextEvent (1,914 samples, 2.09%)</title><rect x="0.1695%" y="437" width="2.0932%" height="15" fill="rgb(252,105,26)" fg:x="155" fg:w="1914"/><text x="0.4195%" y="447.50">A..</text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _updateAutoShowVisibility:immediateChanges:] (12 samples, 0.01%)</title><rect x="2.2660%" y="357" width="0.0131%" height="15" fill="rgb(220,39,43)" fg:x="2072" fg:w="12"/><text x="2.5160%" y="367.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance forEachMenuBarDo:] (15 samples, 0.02%)</title><rect x="2.2660%" y="373" width="0.0164%" height="15" fill="rgb(229,68,48)" fg:x="2072" fg:w="15"/><text x="2.5160%" y="383.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _autoShowHideObserverWithEvent:] (19 samples, 0.02%)</title><rect x="2.2649%" y="389" width="0.0208%" height="15" fill="rgb(252,8,32)" fg:x="2071" fg:w="19"/><text x="2.5149%" y="399.50"></text></g><g><title>AppKit`__57-[NSMenuBarTrackingSession _addLocalEventMonitorIfNeeded]_block_invoke (25 samples, 0.03%)</title><rect x="2.2649%" y="421" width="0.0273%" height="15" fill="rgb(223,20,43)" fg:x="2071" fg:w="25"/><text x="2.5149%" y="431.50"></text></g><g><title>AppKit`-[NSMenuBarTrackingSession handleEvent:] (25 samples, 0.03%)</title><rect x="2.2649%" y="405" width="0.0273%" height="15" fill="rgb(229,81,49)" fg:x="2071" fg:w="25"/><text x="2.5149%" y="415.50"></text></g><g><title>AppKit`_NSSendEventToDequeuingObservers (26 samples, 0.03%)</title><rect x="2.2649%" y="437" width="0.0284%" height="15" fill="rgb(236,28,36)" fg:x="2071" fg:w="26"/><text x="2.5149%" y="447.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (1,953 samples, 2.14%)</title><rect x="0.1586%" y="453" width="2.1359%" height="15" fill="rgb(249,185,26)" fg:x="145" fg:w="1953"/><text x="0.4086%" y="463.50">A..</text></g><g><title>AppKit`-[NSApplication run] (2,017 samples, 2.21%)</title><rect x="0.0930%" y="469" width="2.2059%" height="15" fill="rgb(249,174,33)" fg:x="85" fg:w="2017"/><text x="0.3430%" y="479.50">A..</text></g><g><title>dyld`start (2,102 samples, 2.30%)</title><rect x="0.0011%" y="597" width="2.2989%" height="15" fill="rgb(233,201,37)" fg:x="1" fg:w="2102"/><text x="0.2511%" y="607.50">d..</text></g><g><title>main`main (2,101 samples, 2.30%)</title><rect x="0.0022%" y="581" width="2.2978%" height="15" fill="rgb(221,78,26)" fg:x="2" fg:w="2101"/><text x="0.2522%" y="591.50">m..</text></g><g><title>main`std::sys_common::backtrace::__rust_begin_short_backtrace (2,101 samples, 2.30%)</title><rect x="0.0022%" y="565" width="2.2978%" height="15" fill="rgb(250,127,30)" fg:x="2" fg:w="2101"/><text x="0.2522%" y="575.50">m..</text></g><g><title>main`main::main (2,101 samples, 2.30%)</title><rect x="0.0022%" y="549" width="2.2978%" height="15" fill="rgb(230,49,44)" fg:x="2" fg:w="2101"/><text x="0.2522%" y="559.50">m..</text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (2,028 samples, 2.22%)</title><rect x="0.0820%" y="533" width="2.2179%" height="15" fill="rgb(229,67,23)" fg:x="75" fg:w="2028"/><text x="0.3320%" y="543.50">m..</text></g><g><title>main`bevy_winit::winit_runner (2,028 samples, 2.22%)</title><rect x="0.0820%" y="517" width="2.2179%" height="15" fill="rgb(249,83,47)" fg:x="75" fg:w="2028"/><text x="0.3320%" y="527.50">m..</text></g><g><title>main`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (2,021 samples, 2.21%)</title><rect x="0.0897%" y="501" width="2.2103%" height="15" fill="rgb(215,43,3)" fg:x="82" fg:w="2021"/><text x="0.3397%" y="511.50">m..</text></g><g><title>main`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (2,018 samples, 2.21%)</title><rect x="0.0930%" y="485" width="2.2070%" height="15" fill="rgb(238,154,13)" fg:x="85" fg:w="2018"/><text x="0.3430%" y="495.50">m..</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (387 samples, 0.42%)</title><rect x="2.3317%" y="581" width="0.4232%" height="15" fill="rgb(219,56,2)" fg:x="2132" fg:w="387"/><text x="2.5817%" y="591.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (16 samples, 0.02%)</title><rect x="2.7844%" y="469" width="0.0175%" height="15" fill="rgb(233,0,4)" fg:x="2546" fg:w="16"/><text x="3.0344%" y="479.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (23 samples, 0.03%)</title><rect x="2.7801%" y="485" width="0.0252%" height="15" fill="rgb(235,30,7)" fg:x="2542" fg:w="23"/><text x="3.0301%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (28 samples, 0.03%)</title><rect x="2.7768%" y="501" width="0.0306%" height="15" fill="rgb(250,79,13)" fg:x="2539" fg:w="28"/><text x="3.0268%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (25 samples, 0.03%)</title><rect x="2.8293%" y="261" width="0.0273%" height="15" fill="rgb(211,146,34)" fg:x="2587" fg:w="25"/><text x="3.0793%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (25 samples, 0.03%)</title><rect x="2.8293%" y="245" width="0.0273%" height="15" fill="rgb(228,22,38)" fg:x="2587" fg:w="25"/><text x="3.0793%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (25 samples, 0.03%)</title><rect x="2.8293%" y="229" width="0.0273%" height="15" fill="rgb(235,168,5)" fg:x="2587" fg:w="25"/><text x="3.0793%" y="239.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (27 samples, 0.03%)</title><rect x="2.8282%" y="277" width="0.0295%" height="15" fill="rgb(221,155,16)" fg:x="2586" fg:w="27"/><text x="3.0782%" y="287.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (32 samples, 0.03%)</title><rect x="2.8271%" y="293" width="0.0350%" height="15" fill="rgb(215,215,53)" fg:x="2585" fg:w="32"/><text x="3.0771%" y="303.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (38 samples, 0.04%)</title><rect x="2.8249%" y="309" width="0.0416%" height="15" fill="rgb(223,4,10)" fg:x="2583" fg:w="38"/><text x="3.0749%" y="319.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (43 samples, 0.05%)</title><rect x="2.8227%" y="341" width="0.0470%" height="15" fill="rgb(234,103,6)" fg:x="2581" fg:w="43"/><text x="3.0727%" y="351.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (43 samples, 0.05%)</title><rect x="2.8227%" y="325" width="0.0470%" height="15" fill="rgb(227,97,0)" fg:x="2581" fg:w="43"/><text x="3.0727%" y="335.50"></text></g><g><title>Metal`MTLDispatchListApply (45 samples, 0.05%)</title><rect x="2.8227%" y="357" width="0.0492%" height="15" fill="rgb(234,150,53)" fg:x="2581" fg:w="45"/><text x="3.0727%" y="367.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (48 samples, 0.05%)</title><rect x="2.8205%" y="373" width="0.0525%" height="15" fill="rgb(228,201,54)" fg:x="2579" fg:w="48"/><text x="3.0705%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (14 samples, 0.02%)</title><rect x="2.8894%" y="293" width="0.0153%" height="15" fill="rgb(222,22,37)" fg:x="2642" fg:w="14"/><text x="3.1394%" y="303.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseCurrentResources (25 samples, 0.03%)</title><rect x="2.8796%" y="309" width="0.0273%" height="15" fill="rgb(237,53,32)" fg:x="2633" fg:w="25"/><text x="3.1296%" y="319.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (50 samples, 0.05%)</title><rect x="2.8785%" y="325" width="0.0547%" height="15" fill="rgb(233,25,53)" fg:x="2632" fg:w="50"/><text x="3.1285%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (22 samples, 0.02%)</title><rect x="2.9091%" y="309" width="0.0241%" height="15" fill="rgb(210,40,34)" fg:x="2660" fg:w="22"/><text x="3.1591%" y="319.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (55 samples, 0.06%)</title><rect x="2.8785%" y="341" width="0.0602%" height="15" fill="rgb(241,220,44)" fg:x="2632" fg:w="55"/><text x="3.1285%" y="351.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageFree (11 samples, 0.01%)</title><rect x="2.9386%" y="341" width="0.0120%" height="15" fill="rgb(235,28,35)" fg:x="2687" fg:w="11"/><text x="3.1886%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (71 samples, 0.08%)</title><rect x="2.8785%" y="357" width="0.0776%" height="15" fill="rgb(210,56,17)" fg:x="2632" fg:w="71"/><text x="3.1285%" y="367.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (82 samples, 0.09%)</title><rect x="2.8730%" y="373" width="0.0897%" height="15" fill="rgb(224,130,29)" fg:x="2627" fg:w="82"/><text x="3.1230%" y="383.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (23 samples, 0.03%)</title><rect x="2.9649%" y="373" width="0.0252%" height="15" fill="rgb(235,212,8)" fg:x="2711" fg:w="23"/><text x="3.2149%" y="383.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (163 samples, 0.18%)</title><rect x="2.8129%" y="389" width="0.1783%" height="15" fill="rgb(223,33,50)" fg:x="2572" fg:w="163"/><text x="3.0629%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (173 samples, 0.19%)</title><rect x="2.8107%" y="421" width="0.1892%" height="15" fill="rgb(219,149,13)" fg:x="2570" fg:w="173"/><text x="3.0607%" y="431.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (173 samples, 0.19%)</title><rect x="2.8107%" y="405" width="0.1892%" height="15" fill="rgb(250,156,29)" fg:x="2570" fg:w="173"/><text x="3.0607%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (179 samples, 0.20%)</title><rect x="2.8074%" y="501" width="0.1958%" height="15" fill="rgb(216,193,19)" fg:x="2567" fg:w="179"/><text x="3.0574%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (178 samples, 0.19%)</title><rect x="2.8085%" y="485" width="0.1947%" height="15" fill="rgb(216,135,14)" fg:x="2568" fg:w="178"/><text x="3.0585%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (178 samples, 0.19%)</title><rect x="2.8085%" y="469" width="0.1947%" height="15" fill="rgb(241,47,5)" fg:x="2568" fg:w="178"/><text x="3.0585%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (177 samples, 0.19%)</title><rect x="2.8096%" y="453" width="0.1936%" height="15" fill="rgb(233,42,35)" fg:x="2569" fg:w="177"/><text x="3.0596%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (176 samples, 0.19%)</title><rect x="2.8107%" y="437" width="0.1925%" height="15" fill="rgb(231,13,6)" fg:x="2570" fg:w="176"/><text x="3.0607%" y="447.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer fillCommandBufferArgs:commandQueue:] (10 samples, 0.01%)</title><rect x="3.0228%" y="389" width="0.0109%" height="15" fill="rgb(207,181,40)" fg:x="2764" fg:w="10"/><text x="3.2728%" y="399.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (763 samples, 0.83%)</title><rect x="3.0338%" y="389" width="0.8345%" height="15" fill="rgb(254,173,49)" fg:x="2774" fg:w="763"/><text x="3.2838%" y="399.50"></text></g><g><title>IOKit`IOConnectCallMethod (762 samples, 0.83%)</title><rect x="3.0349%" y="373" width="0.8334%" height="15" fill="rgb(221,1,38)" fg:x="2775" fg:w="762"/><text x="3.2849%" y="383.50"></text></g><g><title>IOKit`io_connect_method (761 samples, 0.83%)</title><rect x="3.0360%" y="357" width="0.8323%" height="15" fill="rgb(206,124,46)" fg:x="2776" fg:w="761"/><text x="3.2860%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (760 samples, 0.83%)</title><rect x="3.0371%" y="341" width="0.8312%" height="15" fill="rgb(249,21,11)" fg:x="2777" fg:w="760"/><text x="3.2871%" y="351.50"></text></g><g><title>IOKit`iokit_user_client_trap (52 samples, 0.06%)</title><rect x="3.8682%" y="389" width="0.0569%" height="15" fill="rgb(222,201,40)" fg:x="3537" fg:w="52"/><text x="4.1182%" y="399.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (827 samples, 0.90%)</title><rect x="3.0228%" y="405" width="0.9044%" height="15" fill="rgb(235,61,29)" fg:x="2764" fg:w="827"/><text x="3.2728%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (829 samples, 0.91%)</title><rect x="3.0218%" y="421" width="0.9066%" height="15" fill="rgb(219,207,3)" fg:x="2763" fg:w="829"/><text x="3.2718%" y="431.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (848 samples, 0.93%)</title><rect x="3.0097%" y="437" width="0.9274%" height="15" fill="rgb(222,56,46)" fg:x="2752" fg:w="848"/><text x="3.2597%" y="447.50"></text></g><g><title>QuartzCore`invoke_collectable_callback(void*) (11 samples, 0.01%)</title><rect x="3.9426%" y="389" width="0.0120%" height="15" fill="rgb(239,76,54)" fg:x="3605" fg:w="11"/><text x="4.1926%" y="399.50"></text></g><g><title>QuartzCore`_XImageQueueCollectable (14 samples, 0.02%)</title><rect x="3.9404%" y="405" width="0.0153%" height="15" fill="rgb(231,124,27)" fg:x="3603" fg:w="14"/><text x="4.1904%" y="415.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (10 samples, 0.01%)</title><rect x="3.9579%" y="373" width="0.0109%" height="15" fill="rgb(249,195,6)" fg:x="3619" fg:w="10"/><text x="4.2079%" y="383.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (16 samples, 0.02%)</title><rect x="3.9557%" y="405" width="0.0175%" height="15" fill="rgb(237,174,47)" fg:x="3617" fg:w="16"/><text x="4.2057%" y="415.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (16 samples, 0.02%)</title><rect x="3.9557%" y="389" width="0.0175%" height="15" fill="rgb(206,201,31)" fg:x="3617" fg:w="16"/><text x="4.2057%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (18 samples, 0.02%)</title><rect x="3.9765%" y="389" width="0.0197%" height="15" fill="rgb(231,57,52)" fg:x="3636" fg:w="18"/><text x="4.2265%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (18 samples, 0.02%)</title><rect x="3.9765%" y="373" width="0.0197%" height="15" fill="rgb(248,177,22)" fg:x="3636" fg:w="18"/><text x="4.2265%" y="383.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (22 samples, 0.02%)</title><rect x="3.9732%" y="405" width="0.0241%" height="15" fill="rgb(215,211,37)" fg:x="3633" fg:w="22"/><text x="4.2232%" y="415.50"></text></g><g><title>QuartzCore`CARenderClient_server (53 samples, 0.06%)</title><rect x="3.9404%" y="421" width="0.0580%" height="15" fill="rgb(241,128,51)" fg:x="3603" fg:w="53"/><text x="4.1904%" y="431.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (78 samples, 0.09%)</title><rect x="3.9404%" y="437" width="0.0853%" height="15" fill="rgb(227,165,31)" fg:x="3603" fg:w="78"/><text x="4.1904%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (25 samples, 0.03%)</title><rect x="3.9984%" y="421" width="0.0273%" height="15" fill="rgb(228,167,24)" fg:x="3656" fg:w="25"/><text x="4.2484%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (25 samples, 0.03%)</title><rect x="3.9984%" y="405" width="0.0273%" height="15" fill="rgb(228,143,12)" fg:x="3656" fg:w="25"/><text x="4.2484%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (23 samples, 0.03%)</title><rect x="4.0006%" y="389" width="0.0252%" height="15" fill="rgb(249,149,8)" fg:x="3658" fg:w="23"/><text x="4.2506%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (940 samples, 1.03%)</title><rect x="3.0043%" y="501" width="1.0280%" height="15" fill="rgb(243,35,44)" fg:x="2747" fg:w="940"/><text x="3.2543%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (938 samples, 1.03%)</title><rect x="3.0064%" y="485" width="1.0258%" height="15" fill="rgb(246,89,9)" fg:x="2749" fg:w="938"/><text x="3.2564%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (937 samples, 1.02%)</title><rect x="3.0075%" y="469" width="1.0247%" height="15" fill="rgb(233,213,13)" fg:x="2750" fg:w="937"/><text x="3.2575%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (937 samples, 1.02%)</title><rect x="3.0075%" y="453" width="1.0247%" height="15" fill="rgb(233,141,41)" fg:x="2750" fg:w="937"/><text x="3.2575%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1,152 samples, 1.26%)</title><rect x="2.7735%" y="517" width="1.2599%" height="15" fill="rgb(239,167,4)" fg:x="2536" fg:w="1152"/><text x="3.0235%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1,159 samples, 1.27%)</title><rect x="2.7713%" y="533" width="1.2675%" height="15" fill="rgb(209,217,16)" fg:x="2534" fg:w="1159"/><text x="3.0213%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (1,163 samples, 1.27%)</title><rect x="2.7691%" y="549" width="1.2719%" height="15" fill="rgb(219,88,35)" fg:x="2532" fg:w="1163"/><text x="3.0191%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1,176 samples, 1.29%)</title><rect x="2.7571%" y="565" width="1.2861%" height="15" fill="rgb(220,193,23)" fg:x="2521" fg:w="1176"/><text x="3.0071%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (1,588 samples, 1.74%)</title><rect x="2.3076%" y="597" width="1.7367%" height="15" fill="rgb(230,90,52)" fg:x="2110" fg:w="1588"/><text x="2.5576%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (1,179 samples, 1.29%)</title><rect x="2.7549%" y="581" width="1.2894%" height="15" fill="rgb(252,106,19)" fg:x="2519" fg:w="1179"/><text x="3.0049%" y="591.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (11 samples, 0.01%)</title><rect x="4.0826%" y="373" width="0.0120%" height="15" fill="rgb(206,74,20)" fg:x="3733" fg:w="11"/><text x="4.3326%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.01%)</title><rect x="4.0826%" y="357" width="0.0120%" height="15" fill="rgb(230,138,44)" fg:x="3733" fg:w="11"/><text x="4.3326%" y="367.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (12 samples, 0.01%)</title><rect x="4.0826%" y="389" width="0.0131%" height="15" fill="rgb(235,182,43)" fg:x="3733" fg:w="12"/><text x="4.3326%" y="399.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (12 samples, 0.01%)</title><rect x="4.0968%" y="373" width="0.0131%" height="15" fill="rgb(242,16,51)" fg:x="3746" fg:w="12"/><text x="4.3468%" y="383.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (14 samples, 0.02%)</title><rect x="4.0957%" y="389" width="0.0153%" height="15" fill="rgb(248,9,4)" fg:x="3745" fg:w="14"/><text x="4.3457%" y="399.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (67 samples, 0.07%)</title><rect x="4.0826%" y="405" width="0.0733%" height="15" fill="rgb(210,31,22)" fg:x="3733" fg:w="67"/><text x="4.3326%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (41 samples, 0.04%)</title><rect x="4.1110%" y="389" width="0.0448%" height="15" fill="rgb(239,54,39)" fg:x="3759" fg:w="41"/><text x="4.3610%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (41 samples, 0.04%)</title><rect x="4.1110%" y="373" width="0.0448%" height="15" fill="rgb(230,99,41)" fg:x="3759" fg:w="41"/><text x="4.3610%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (40 samples, 0.04%)</title><rect x="4.1121%" y="357" width="0.0437%" height="15" fill="rgb(253,106,12)" fg:x="3760" fg:w="40"/><text x="4.3621%" y="367.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (80 samples, 0.09%)</title><rect x="4.0695%" y="437" width="0.0875%" height="15" fill="rgb(213,46,41)" fg:x="3721" fg:w="80"/><text x="4.3195%" y="447.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (79 samples, 0.09%)</title><rect x="4.0706%" y="421" width="0.0864%" height="15" fill="rgb(215,133,35)" fg:x="3722" fg:w="79"/><text x="4.3206%" y="431.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (102 samples, 0.11%)</title><rect x="4.0476%" y="517" width="0.1116%" height="15" fill="rgb(213,28,5)" fg:x="3701" fg:w="102"/><text x="4.2976%" y="527.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (102 samples, 0.11%)</title><rect x="4.0476%" y="501" width="0.1116%" height="15" fill="rgb(215,77,49)" fg:x="3701" fg:w="102"/><text x="4.2976%" y="511.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (102 samples, 0.11%)</title><rect x="4.0476%" y="485" width="0.1116%" height="15" fill="rgb(248,100,22)" fg:x="3701" fg:w="102"/><text x="4.2976%" y="495.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (93 samples, 0.10%)</title><rect x="4.0574%" y="469" width="0.1017%" height="15" fill="rgb(208,67,9)" fg:x="3710" fg:w="93"/><text x="4.3074%" y="479.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (93 samples, 0.10%)</title><rect x="4.0574%" y="453" width="0.1017%" height="15" fill="rgb(219,133,21)" fg:x="3710" fg:w="93"/><text x="4.3074%" y="463.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (17 samples, 0.02%)</title><rect x="4.1591%" y="517" width="0.0186%" height="15" fill="rgb(246,46,29)" fg:x="3803" fg:w="17"/><text x="4.4091%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (17 samples, 0.02%)</title><rect x="4.1591%" y="501" width="0.0186%" height="15" fill="rgb(246,185,52)" fg:x="3803" fg:w="17"/><text x="4.4091%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (17 samples, 0.02%)</title><rect x="4.1591%" y="485" width="0.0186%" height="15" fill="rgb(252,136,11)" fg:x="3803" fg:w="17"/><text x="4.4091%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (17 samples, 0.02%)</title><rect x="4.1591%" y="469" width="0.0186%" height="15" fill="rgb(219,138,53)" fg:x="3803" fg:w="17"/><text x="4.4091%" y="479.50"></text></g><g><title>AppKit`_NSEventThread (124 samples, 0.14%)</title><rect x="4.0454%" y="565" width="0.1356%" height="15" fill="rgb(211,51,23)" fg:x="3699" fg:w="124"/><text x="4.2954%" y="575.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (124 samples, 0.14%)</title><rect x="4.0454%" y="549" width="0.1356%" height="15" fill="rgb(247,221,28)" fg:x="3699" fg:w="124"/><text x="4.2954%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (123 samples, 0.13%)</title><rect x="4.0465%" y="533" width="0.1345%" height="15" fill="rgb(251,222,45)" fg:x="3700" fg:w="123"/><text x="4.2965%" y="543.50"></text></g><g><title>main`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="4.3319%" y="453" width="0.0120%" height="15" fill="rgb(217,162,53)" fg:x="3961" fg:w="11"/><text x="4.5819%" y="463.50"></text></g><g><title>main`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_render_callback::_{{closure}} (230 samples, 0.25%)</title><rect x="4.2138%" y="469" width="0.2515%" height="15" fill="rgb(229,93,14)" fg:x="3853" fg:w="230"/><text x="4.4638%" y="479.50"></text></g><g><title>main`rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (108 samples, 0.12%)</title><rect x="4.3473%" y="453" width="0.1181%" height="15" fill="rgb(209,67,49)" fg:x="3975" fg:w="108"/><text x="4.5973%" y="463.50"></text></g><g><title>main`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="4.4107%" y="437" width="0.0547%" height="15" fill="rgb(213,87,29)" fg:x="4033" fg:w="50"/><text x="4.6607%" y="447.50"></text></g><g><title>CoreAudio`0x0000000106bf2660 (250 samples, 0.27%)</title><rect x="4.2084%" y="485" width="0.2734%" height="15" fill="rgb(205,151,52)" fg:x="3848" fg:w="250"/><text x="4.4584%" y="495.50"></text></g><g><title>main`rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (14 samples, 0.02%)</title><rect x="4.4665%" y="469" width="0.0153%" height="15" fill="rgb(253,215,39)" fg:x="4084" fg:w="14"/><text x="4.7165%" y="479.50"></text></g><g><title>CoreAudio`0x0000000106cf122c (258 samples, 0.28%)</title><rect x="4.2062%" y="501" width="0.2822%" height="15" fill="rgb(221,220,41)" fg:x="3846" fg:w="258"/><text x="4.4562%" y="511.50"></text></g><g><title>CoreAudio`0x0000000106bf668c (270 samples, 0.30%)</title><rect x="4.1952%" y="517" width="0.2953%" height="15" fill="rgb(218,133,21)" fg:x="3836" fg:w="270"/><text x="4.4452%" y="527.50"></text></g><g><title>CoreAudio`HALB_MachPort::SendSimpleMessageWithSimpleReply (86 samples, 0.09%)</title><rect x="4.4960%" y="517" width="0.0941%" height="15" fill="rgb(221,193,43)" fg:x="4111" fg:w="86"/><text x="4.7460%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (86 samples, 0.09%)</title><rect x="4.4960%" y="501" width="0.0941%" height="15" fill="rgb(240,128,52)" fg:x="4111" fg:w="86"/><text x="4.7460%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (83 samples, 0.09%)</title><rect x="4.4993%" y="485" width="0.0908%" height="15" fill="rgb(253,114,12)" fg:x="4114" fg:w="83"/><text x="4.7493%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (80 samples, 0.09%)</title><rect x="4.5026%" y="469" width="0.0875%" height="15" fill="rgb(215,223,47)" fg:x="4117" fg:w="80"/><text x="4.7526%" y="479.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::IOWorkLoop (378 samples, 0.41%)</title><rect x="4.1832%" y="533" width="0.4134%" height="15" fill="rgb(248,225,23)" fg:x="3825" fg:w="378"/><text x="4.4332%" y="543.50"></text></g><g><title>CoreAudio`HALC_IOThread::Entry (386 samples, 0.42%)</title><rect x="4.1810%" y="565" width="0.4221%" height="15" fill="rgb(250,108,0)" fg:x="3823" fg:w="386"/><text x="4.4310%" y="575.50"></text></g><g><title>CoreAudio`invocation function for block in HALC_ProxyIOContext::HALC_ProxyIOContext (386 samples, 0.42%)</title><rect x="4.1810%" y="549" width="0.4221%" height="15" fill="rgb(228,208,7)" fg:x="3823" fg:w="386"/><text x="4.4310%" y="559.50"></text></g><g><title>main`alloc::vec::Vec&lt;T,A&gt;::remove (24 samples, 0.03%)</title><rect x="4.6043%" y="533" width="0.0262%" height="15" fill="rgb(244,45,10)" fg:x="4210" fg:w="24"/><text x="4.8543%" y="543.50"></text></g><g><title>main`&lt;&amp;T as core::fmt::Debug&gt;::fmt (24 samples, 0.03%)</title><rect x="4.6043%" y="517" width="0.0262%" height="15" fill="rgb(207,125,25)" fg:x="4210" fg:w="24"/><text x="4.8543%" y="527.50"></text></g><g><title>main`gilrs::ff::server::run (24 samples, 0.03%)</title><rect x="4.6043%" y="501" width="0.0262%" height="15" fill="rgb(210,195,18)" fg:x="4210" fg:w="24"/><text x="4.8543%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (17 samples, 0.02%)</title><rect x="4.6119%" y="485" width="0.0186%" height="15" fill="rgb(249,80,12)" fg:x="4217" fg:w="17"/><text x="4.8619%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (19 samples, 0.02%)</title><rect x="4.6568%" y="517" width="0.0208%" height="15" fill="rgb(221,65,9)" fg:x="4258" fg:w="19"/><text x="4.9068%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (13 samples, 0.01%)</title><rect x="4.6775%" y="517" width="0.0142%" height="15" fill="rgb(235,49,36)" fg:x="4277" fg:w="13"/><text x="4.9275%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (31 samples, 0.03%)</title><rect x="4.9116%" y="501" width="0.0339%" height="15" fill="rgb(225,32,20)" fg:x="4491" fg:w="31"/><text x="5.1616%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (31 samples, 0.03%)</title><rect x="4.9116%" y="485" width="0.0339%" height="15" fill="rgb(215,141,46)" fg:x="4491" fg:w="31"/><text x="5.1616%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_rwlock_lock_slow (42 samples, 0.05%)</title><rect x="4.9455%" y="501" width="0.0459%" height="15" fill="rgb(250,160,47)" fg:x="4522" fg:w="42"/><text x="5.1955%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_rw_rdlock (42 samples, 0.05%)</title><rect x="4.9455%" y="485" width="0.0459%" height="15" fill="rgb(216,222,40)" fg:x="4522" fg:w="42"/><text x="5.1955%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (11 samples, 0.01%)</title><rect x="5.0308%" y="469" width="0.0120%" height="15" fill="rgb(234,217,39)" fg:x="4600" fg:w="11"/><text x="5.2808%" y="479.50"></text></g><g><title>main`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (42 samples, 0.05%)</title><rect x="5.0034%" y="485" width="0.0459%" height="15" fill="rgb(207,178,40)" fg:x="4575" fg:w="42"/><text x="5.2534%" y="495.50"></text></g><g><title>main`&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (46 samples, 0.05%)</title><rect x="5.0034%" y="501" width="0.0503%" height="15" fill="rgb(221,136,13)" fg:x="4575" fg:w="46"/><text x="5.2534%" y="511.50"></text></g><g><title>main`async_executor::State::notify (39 samples, 0.04%)</title><rect x="5.0680%" y="501" width="0.0427%" height="15" fill="rgb(249,199,10)" fg:x="4634" fg:w="39"/><text x="5.3180%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (183 samples, 0.20%)</title><rect x="5.1566%" y="469" width="0.2001%" height="15" fill="rgb(249,222,13)" fg:x="4715" fg:w="183"/><text x="5.4066%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (187 samples, 0.20%)</title><rect x="5.1533%" y="485" width="0.2045%" height="15" fill="rgb(244,185,38)" fg:x="4712" fg:w="187"/><text x="5.4033%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (144 samples, 0.16%)</title><rect x="5.3578%" y="485" width="0.1575%" height="15" fill="rgb(236,202,9)" fg:x="4899" fg:w="144"/><text x="5.6078%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (144 samples, 0.16%)</title><rect x="5.3578%" y="469" width="0.1575%" height="15" fill="rgb(250,229,37)" fg:x="4899" fg:w="144"/><text x="5.6078%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (16 samples, 0.02%)</title><rect x="5.5153%" y="485" width="0.0175%" height="15" fill="rgb(206,174,23)" fg:x="5043" fg:w="16"/><text x="5.7653%" y="495.50"></text></g><g><title>main`async_executor::Ticker::sleep (399 samples, 0.44%)</title><rect x="5.1106%" y="501" width="0.4364%" height="15" fill="rgb(211,33,43)" fg:x="4673" fg:w="399"/><text x="5.3606%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (13 samples, 0.01%)</title><rect x="5.5328%" y="485" width="0.0142%" height="15" fill="rgb(245,58,50)" fg:x="5059" fg:w="13"/><text x="5.7828%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (16 samples, 0.02%)</title><rect x="5.5831%" y="469" width="0.0175%" height="15" fill="rgb(244,68,36)" fg:x="5105" fg:w="16"/><text x="5.8331%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (19 samples, 0.02%)</title><rect x="5.5809%" y="485" width="0.0208%" height="15" fill="rgb(232,229,15)" fg:x="5103" fg:w="19"/><text x="5.8309%" y="495.50"></text></g><g><title>main`async_executor::Ticker::wake (52 samples, 0.06%)</title><rect x="5.5470%" y="501" width="0.0569%" height="15" fill="rgb(254,30,23)" fg:x="5072" fg:w="52"/><text x="5.7970%" y="511.50"></text></g><g><title>main`async_executor::steal (86 samples, 0.09%)</title><rect x="5.6039%" y="501" width="0.0941%" height="15" fill="rgb(235,160,14)" fg:x="5124" fg:w="86"/><text x="5.8539%" y="511.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (39 samples, 0.04%)</title><rect x="5.6553%" y="485" width="0.0427%" height="15" fill="rgb(212,155,44)" fg:x="5171" fg:w="39"/><text x="5.9053%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (20 samples, 0.02%)</title><rect x="6.0774%" y="485" width="0.0219%" height="15" fill="rgb(226,2,50)" fg:x="5557" fg:w="20"/><text x="6.3274%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (272 samples, 0.30%)</title><rect x="6.0993%" y="485" width="0.2975%" height="15" fill="rgb(234,177,6)" fg:x="5577" fg:w="272"/><text x="6.3493%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (270 samples, 0.30%)</title><rect x="6.1015%" y="469" width="0.2953%" height="15" fill="rgb(217,24,9)" fg:x="5579" fg:w="270"/><text x="6.3515%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (27 samples, 0.03%)</title><rect x="6.3978%" y="485" width="0.0295%" height="15" fill="rgb(220,13,46)" fg:x="5850" fg:w="27"/><text x="6.6478%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (707 samples, 0.77%)</title><rect x="6.4919%" y="453" width="0.7732%" height="15" fill="rgb(239,221,27)" fg:x="5936" fg:w="707"/><text x="6.7419%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (720 samples, 0.79%)</title><rect x="6.4810%" y="469" width="0.7874%" height="15" fill="rgb(222,198,25)" fg:x="5926" fg:w="720"/><text x="6.7310%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (51 samples, 0.06%)</title><rect x="7.2684%" y="469" width="0.0558%" height="15" fill="rgb(211,99,13)" fg:x="6646" fg:w="51"/><text x="7.5184%" y="479.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (823 samples, 0.90%)</title><rect x="6.4296%" y="485" width="0.9001%" height="15" fill="rgb(232,111,31)" fg:x="5879" fg:w="823"/><text x="6.6796%" y="495.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (27 samples, 0.03%)</title><rect x="7.3340%" y="485" width="0.0295%" height="15" fill="rgb(245,82,37)" fg:x="6706" fg:w="27"/><text x="7.5840%" y="495.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (117 samples, 0.13%)</title><rect x="7.3635%" y="485" width="0.1280%" height="15" fill="rgb(227,149,46)" fg:x="6733" fg:w="117"/><text x="7.6135%" y="495.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (64 samples, 0.07%)</title><rect x="7.4915%" y="485" width="0.0700%" height="15" fill="rgb(218,36,50)" fg:x="6850" fg:w="64"/><text x="7.7415%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.02%)</title><rect x="7.8229%" y="469" width="0.0241%" height="15" fill="rgb(226,80,48)" fg:x="7153" fg:w="22"/><text x="8.0729%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.02%)</title><rect x="8.0000%" y="453" width="0.0208%" height="15" fill="rgb(238,224,15)" fg:x="7315" fg:w="19"/><text x="8.2500%" y="463.50"></text></g><g><title>main`&lt;bevy_render::extract_param::Extract&lt;P&gt; as bevy_ecs::system::system_param::SystemParam&gt;::get_param (11 samples, 0.01%)</title><rect x="8.0296%" y="453" width="0.0120%" height="15" fill="rgb(241,136,10)" fg:x="7342" fg:w="11"/><text x="8.2796%" y="463.50"></text></g><g><title>main`&lt;wgpu::backend::direct::QueueWriteBuffer as wgpu::context::QueueWriteBuffer&gt;::slice_mut (13 samples, 0.01%)</title><rect x="8.0460%" y="453" width="0.0142%" height="15" fill="rgb(208,32,45)" fg:x="7357" fg:w="13"/><text x="8.2960%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (19 samples, 0.02%)</title><rect x="8.0853%" y="421" width="0.0208%" height="15" fill="rgb(207,135,9)" fg:x="7393" fg:w="19"/><text x="8.3353%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.02%)</title><rect x="8.0853%" y="405" width="0.0208%" height="15" fill="rgb(206,86,44)" fg:x="7393" fg:w="19"/><text x="8.3353%" y="415.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="8.0843%" y="437" width="0.0273%" height="15" fill="rgb(245,177,15)" fg:x="7392" fg:w="25"/><text x="8.3343%" y="447.50"></text></g><g><title>main`egui::context::Context::end_frame (13 samples, 0.01%)</title><rect x="8.1116%" y="437" width="0.0142%" height="15" fill="rgb(206,64,50)" fg:x="7417" fg:w="13"/><text x="8.3616%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (18 samples, 0.02%)</title><rect x="8.2560%" y="357" width="0.0197%" height="15" fill="rgb(234,36,40)" fg:x="7549" fg:w="18"/><text x="8.5060%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (53 samples, 0.06%)</title><rect x="8.2527%" y="373" width="0.0580%" height="15" fill="rgb(213,64,8)" fg:x="7546" fg:w="53"/><text x="8.5027%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.03%)</title><rect x="8.2756%" y="357" width="0.0350%" height="15" fill="rgb(210,75,36)" fg:x="7567" fg:w="32"/><text x="8.5256%" y="367.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (55 samples, 0.06%)</title><rect x="8.2516%" y="421" width="0.0602%" height="15" fill="rgb(229,88,21)" fg:x="7545" fg:w="55"/><text x="8.5016%" y="431.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (55 samples, 0.06%)</title><rect x="8.2516%" y="405" width="0.0602%" height="15" fill="rgb(252,204,47)" fg:x="7545" fg:w="55"/><text x="8.5016%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (55 samples, 0.06%)</title><rect x="8.2516%" y="389" width="0.0602%" height="15" fill="rgb(208,77,27)" fg:x="7545" fg:w="55"/><text x="8.5016%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="8.3238%" y="405" width="0.0164%" height="15" fill="rgb(221,76,26)" fg:x="7611" fg:w="15"/><text x="8.5738%" y="415.50"></text></g><g><title>main`alloc::sync::Arc&lt;T,A&gt;::drop_slow (28 samples, 0.03%)</title><rect x="8.3117%" y="421" width="0.0306%" height="15" fill="rgb(225,139,18)" fg:x="7600" fg:w="28"/><text x="8.5617%" y="431.50"></text></g><g><title>main`epaint::tessellator::Path::fill (26 samples, 0.03%)</title><rect x="8.3456%" y="421" width="0.0284%" height="15" fill="rgb(230,137,11)" fg:x="7631" fg:w="26"/><text x="8.5956%" y="431.50"></text></g><g><title>main`epaint::tessellator::Path::add_line_loop (11 samples, 0.01%)</title><rect x="8.3883%" y="405" width="0.0120%" height="15" fill="rgb(212,28,1)" fg:x="7670" fg:w="11"/><text x="8.6383%" y="415.50"></text></g><g><title>main`epaint::tessellator::Path::fill (55 samples, 0.06%)</title><rect x="8.4003%" y="405" width="0.0602%" height="15" fill="rgb(248,164,17)" fg:x="7681" fg:w="55"/><text x="8.6503%" y="415.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.01%)</title><rect x="8.4473%" y="389" width="0.0131%" height="15" fill="rgb(222,171,42)" fg:x="7724" fg:w="12"/><text x="8.6973%" y="399.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_rect (83 samples, 0.09%)</title><rect x="8.3752%" y="421" width="0.0908%" height="15" fill="rgb(243,84,45)" fg:x="7658" fg:w="83"/><text x="8.6252%" y="431.50"></text></g><g><title>main`bevy_egui::systems::process_output_system (408 samples, 0.45%)</title><rect x="8.0689%" y="453" width="0.4462%" height="15" fill="rgb(252,49,23)" fg:x="7378" fg:w="408"/><text x="8.3189%" y="463.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_shape (343 samples, 0.38%)</title><rect x="8.1400%" y="437" width="0.3751%" height="15" fill="rgb(215,19,7)" fg:x="7443" fg:w="343"/><text x="8.3900%" y="447.50"></text></g><g><title>main`epaint::tessellator::stroke_path (45 samples, 0.05%)</title><rect x="8.4659%" y="421" width="0.0492%" height="15" fill="rgb(238,81,41)" fg:x="7741" fg:w="45"/><text x="8.7159%" y="431.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (47 samples, 0.05%)</title><rect x="8.5305%" y="325" width="0.0514%" height="15" fill="rgb(210,199,37)" fg:x="7800" fg:w="47"/><text x="8.7805%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (42 samples, 0.05%)</title><rect x="8.5359%" y="309" width="0.0459%" height="15" fill="rgb(244,192,49)" fg:x="7805" fg:w="42"/><text x="8.7859%" y="319.50"></text></g><g><title>IOKit`io_connect_method (42 samples, 0.05%)</title><rect x="8.5359%" y="293" width="0.0459%" height="15" fill="rgb(226,211,11)" fg:x="7805" fg:w="42"/><text x="8.7859%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (42 samples, 0.05%)</title><rect x="8.5359%" y="277" width="0.0459%" height="15" fill="rgb(236,162,54)" fg:x="7805" fg:w="42"/><text x="8.7859%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (49 samples, 0.05%)</title><rect x="8.5305%" y="341" width="0.0536%" height="15" fill="rgb(220,229,9)" fg:x="7800" fg:w="49"/><text x="8.7805%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (51 samples, 0.06%)</title><rect x="8.5305%" y="357" width="0.0558%" height="15" fill="rgb(250,87,22)" fg:x="7800" fg:w="51"/><text x="8.7805%" y="367.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (56 samples, 0.06%)</title><rect x="8.5305%" y="373" width="0.0612%" height="15" fill="rgb(239,43,17)" fg:x="7800" fg:w="56"/><text x="8.7805%" y="383.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (57 samples, 0.06%)</title><rect x="8.5305%" y="389" width="0.0623%" height="15" fill="rgb(231,177,25)" fg:x="7800" fg:w="57"/><text x="8.7805%" y="399.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (70 samples, 0.08%)</title><rect x="8.5239%" y="437" width="0.0766%" height="15" fill="rgb(219,179,1)" fg:x="7794" fg:w="70"/><text x="8.7739%" y="447.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (66 samples, 0.07%)</title><rect x="8.5283%" y="421" width="0.0722%" height="15" fill="rgb(238,219,53)" fg:x="7798" fg:w="66"/><text x="8.7783%" y="431.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (64 samples, 0.07%)</title><rect x="8.5305%" y="405" width="0.0700%" height="15" fill="rgb(232,167,36)" fg:x="7800" fg:w="64"/><text x="8.7805%" y="415.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::beginComputePass (14 samples, 0.02%)</title><rect x="8.6070%" y="373" width="0.0153%" height="15" fill="rgb(244,19,51)" fg:x="7870" fg:w="14"/><text x="8.8570%" y="383.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::blitCDMBuffer (19 samples, 0.02%)</title><rect x="8.6070%" y="389" width="0.0208%" height="15" fill="rgb(224,6,22)" fg:x="7870" fg:w="19"/><text x="8.8570%" y="399.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (21 samples, 0.02%)</title><rect x="8.6070%" y="405" width="0.0230%" height="15" fill="rgb(224,145,5)" fg:x="7870" fg:w="21"/><text x="8.8570%" y="415.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (12 samples, 0.01%)</title><rect x="8.6333%" y="373" width="0.0131%" height="15" fill="rgb(234,130,49)" fg:x="7894" fg:w="12"/><text x="8.8833%" y="383.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (13 samples, 0.01%)</title><rect x="8.6333%" y="389" width="0.0142%" height="15" fill="rgb(254,6,2)" fg:x="7894" fg:w="13"/><text x="8.8833%" y="399.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (17 samples, 0.02%)</title><rect x="8.6322%" y="405" width="0.0186%" height="15" fill="rgb(208,96,46)" fg:x="7893" fg:w="17"/><text x="8.8822%" y="415.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (48 samples, 0.05%)</title><rect x="8.6070%" y="421" width="0.0525%" height="15" fill="rgb(239,3,39)" fg:x="7870" fg:w="48"/><text x="8.8570%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (12 samples, 0.01%)</title><rect x="8.6606%" y="357" width="0.0131%" height="15" fill="rgb(233,210,1)" fg:x="7919" fg:w="12"/><text x="8.9106%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (12 samples, 0.01%)</title><rect x="8.6606%" y="341" width="0.0131%" height="15" fill="rgb(244,137,37)" fg:x="7919" fg:w="12"/><text x="8.9106%" y="351.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (11 samples, 0.01%)</title><rect x="8.6617%" y="325" width="0.0120%" height="15" fill="rgb(240,136,2)" fg:x="7920" fg:w="11"/><text x="8.9117%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (11 samples, 0.01%)</title><rect x="8.6617%" y="309" width="0.0120%" height="15" fill="rgb(239,18,37)" fg:x="7920" fg:w="11"/><text x="8.9117%" y="319.50"></text></g><g><title>IOKit`io_connect_method (11 samples, 0.01%)</title><rect x="8.6617%" y="293" width="0.0120%" height="15" fill="rgb(218,185,22)" fg:x="7920" fg:w="11"/><text x="8.9117%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.01%)</title><rect x="8.6617%" y="277" width="0.0120%" height="15" fill="rgb(225,218,4)" fg:x="7920" fg:w="11"/><text x="8.9117%" y="287.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (14 samples, 0.02%)</title><rect x="8.6595%" y="389" width="0.0153%" height="15" fill="rgb(230,182,32)" fg:x="7918" fg:w="14"/><text x="8.9095%" y="399.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (14 samples, 0.02%)</title><rect x="8.6595%" y="373" width="0.0153%" height="15" fill="rgb(242,56,43)" fg:x="7918" fg:w="14"/><text x="8.9095%" y="383.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (18 samples, 0.02%)</title><rect x="8.6595%" y="421" width="0.0197%" height="15" fill="rgb(233,99,24)" fg:x="7918" fg:w="18"/><text x="8.9095%" y="431.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (18 samples, 0.02%)</title><rect x="8.6595%" y="405" width="0.0197%" height="15" fill="rgb(234,209,42)" fg:x="7918" fg:w="18"/><text x="8.9095%" y="415.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (73 samples, 0.08%)</title><rect x="8.6005%" y="437" width="0.0798%" height="15" fill="rgb(227,7,12)" fg:x="7864" fg:w="73"/><text x="8.8505%" y="447.50"></text></g><g><title>AGXMetalG14X`AGX::TextureGen4&lt;(AGXTextureMemoryLayout)3, AGX::G14X::Encoders, AGX::G14X::Classes&gt;::TextureGen4 (12 samples, 0.01%)</title><rect x="8.7011%" y="341" width="0.0131%" height="15" fill="rgb(245,203,43)" fg:x="7956" fg:w="12"/><text x="8.9511%" y="351.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyTexture initImplWithTexture:pixelFormat:textureType:levels:slices:resourceIndex:] (15 samples, 0.02%)</title><rect x="8.7000%" y="357" width="0.0164%" height="15" fill="rgb(238,205,33)" fg:x="7955" fg:w="15"/><text x="8.9500%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithTexture:pixelFormat:textureType:levels:slices:] (10 samples, 0.01%)</title><rect x="8.7240%" y="357" width="0.0109%" height="15" fill="rgb(231,56,7)" fg:x="7977" fg:w="10"/><text x="8.9740%" y="367.50"></text></g><g><title>AGXMetalG14X`-[AGXTexture initWithTexture:pixelFormat:textureType:levels:slices:resourceIndex:] (38 samples, 0.04%)</title><rect x="8.6978%" y="373" width="0.0416%" height="15" fill="rgb(244,186,29)" fg:x="7953" fg:w="38"/><text x="8.9478%" y="383.50"></text></g><g><title>AGXMetalG14X`-[AGXTexture initWithTexture:pixelFormat:textureType:levels:slices:] (40 samples, 0.04%)</title><rect x="8.6967%" y="389" width="0.0437%" height="15" fill="rgb(234,111,31)" fg:x="7952" fg:w="40"/><text x="8.9467%" y="399.50"></text></g><g><title>AGXMetalG14X`-[AGXTexture newTextureViewWithPixelFormat:textureType:levels:slices:] (43 samples, 0.05%)</title><rect x="8.6967%" y="405" width="0.0470%" height="15" fill="rgb(241,149,10)" fg:x="7952" fg:w="43"/><text x="8.9467%" y="415.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::texture_create_view (59 samples, 0.06%)</title><rect x="8.6879%" y="437" width="0.0645%" height="15" fill="rgb(249,206,44)" fg:x="7944" fg:w="59"/><text x="8.9379%" y="447.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_texture_view (53 samples, 0.06%)</title><rect x="8.6945%" y="421" width="0.0580%" height="15" fill="rgb(251,153,30)" fg:x="7950" fg:w="53"/><text x="8.9445%" y="431.50"></text></g><g><title>main`bevy_pbr::render::light::prepare_lights (219 samples, 0.24%)</title><rect x="8.5152%" y="453" width="0.2395%" height="15" fill="rgb(239,152,38)" fg:x="7786" fg:w="219"/><text x="8.7652%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (10 samples, 0.01%)</title><rect x="9.1943%" y="437" width="0.0109%" height="15" fill="rgb(249,139,47)" fg:x="8407" fg:w="10"/><text x="9.4443%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (10 samples, 0.01%)</title><rect x="9.1943%" y="421" width="0.0109%" height="15" fill="rgb(244,64,35)" fg:x="8407" fg:w="10"/><text x="9.4443%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (77 samples, 0.08%)</title><rect x="9.2129%" y="437" width="0.0842%" height="15" fill="rgb(216,46,15)" fg:x="8424" fg:w="77"/><text x="9.4629%" y="447.50"></text></g><g><title>main`wgpu_core::device::resource::Device&lt;A&gt;::create_buffer_binding (12 samples, 0.01%)</title><rect x="9.3846%" y="405" width="0.0131%" height="15" fill="rgb(250,74,19)" fg:x="8581" fg:w="12"/><text x="9.6346%" y="415.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (91 samples, 0.10%)</title><rect x="9.3113%" y="437" width="0.0995%" height="15" fill="rgb(249,42,33)" fg:x="8514" fg:w="91"/><text x="9.5613%" y="447.50"></text></g><g><title>main`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_bind_group (76 samples, 0.08%)</title><rect x="9.3277%" y="421" width="0.0831%" height="15" fill="rgb(242,149,17)" fg:x="8529" fg:w="76"/><text x="9.5777%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (87 samples, 0.10%)</title><rect x="9.4240%" y="405" width="0.0951%" height="15" fill="rgb(244,29,21)" fg:x="8617" fg:w="87"/><text x="9.6740%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (93 samples, 0.10%)</title><rect x="9.5191%" y="405" width="0.1017%" height="15" fill="rgb(220,130,37)" fg:x="8704" fg:w="93"/><text x="9.7691%" y="415.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (192 samples, 0.21%)</title><rect x="9.4130%" y="421" width="0.2100%" height="15" fill="rgb(211,67,2)" fg:x="8607" fg:w="192"/><text x="9.6630%" y="431.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::device_limits (197 samples, 0.22%)</title><rect x="9.4119%" y="437" width="0.2154%" height="15" fill="rgb(235,68,52)" fg:x="8606" fg:w="197"/><text x="9.6619%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (30 samples, 0.03%)</title><rect x="9.6438%" y="405" width="0.0328%" height="15" fill="rgb(246,142,3)" fg:x="8818" fg:w="30"/><text x="9.8938%" y="415.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (35 samples, 0.04%)</title><rect x="9.6405%" y="421" width="0.0383%" height="15" fill="rgb(241,25,7)" fg:x="8815" fg:w="35"/><text x="9.8905%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (90 samples, 0.10%)</title><rect x="9.6919%" y="277" width="0.0984%" height="15" fill="rgb(242,119,39)" fg:x="8862" fg:w="90"/><text x="9.9419%" y="287.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (97 samples, 0.11%)</title><rect x="9.6854%" y="325" width="0.1061%" height="15" fill="rgb(241,98,45)" fg:x="8856" fg:w="97"/><text x="9.9354%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (92 samples, 0.10%)</title><rect x="9.6908%" y="309" width="0.1006%" height="15" fill="rgb(254,28,30)" fg:x="8861" fg:w="92"/><text x="9.9408%" y="319.50"></text></g><g><title>IOKit`io_connect_method (92 samples, 0.10%)</title><rect x="9.6908%" y="293" width="0.1006%" height="15" fill="rgb(241,142,54)" fg:x="8861" fg:w="92"/><text x="9.9408%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (103 samples, 0.11%)</title><rect x="9.6854%" y="341" width="0.1126%" height="15" fill="rgb(222,85,15)" fg:x="8856" fg:w="103"/><text x="9.9354%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (106 samples, 0.12%)</title><rect x="9.6854%" y="357" width="0.1159%" height="15" fill="rgb(210,85,47)" fg:x="8856" fg:w="106"/><text x="9.9354%" y="367.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (117 samples, 0.13%)</title><rect x="9.6843%" y="373" width="0.1280%" height="15" fill="rgb(224,206,25)" fg:x="8855" fg:w="117"/><text x="9.9343%" y="383.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (118 samples, 0.13%)</title><rect x="9.6843%" y="389" width="0.1291%" height="15" fill="rgb(243,201,19)" fg:x="8855" fg:w="118"/><text x="9.9343%" y="399.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (181 samples, 0.20%)</title><rect x="9.6274%" y="437" width="0.1980%" height="15" fill="rgb(236,59,4)" fg:x="8803" fg:w="181"/><text x="9.8774%" y="447.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (134 samples, 0.15%)</title><rect x="9.6788%" y="421" width="0.1465%" height="15" fill="rgb(254,179,45)" fg:x="8850" fg:w="134"/><text x="9.9288%" y="431.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (129 samples, 0.14%)</title><rect x="9.6843%" y="405" width="0.1411%" height="15" fill="rgb(226,14,10)" fg:x="8855" fg:w="129"/><text x="9.9343%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (46 samples, 0.05%)</title><rect x="9.8428%" y="405" width="0.0503%" height="15" fill="rgb(244,27,41)" fg:x="9000" fg:w="46"/><text x="10.0928%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (75 samples, 0.08%)</title><rect x="9.8932%" y="405" width="0.0820%" height="15" fill="rgb(235,35,32)" fg:x="9046" fg:w="75"/><text x="10.1432%" y="415.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (127 samples, 0.14%)</title><rect x="9.8374%" y="421" width="0.1389%" height="15" fill="rgb(218,68,31)" fg:x="8995" fg:w="127"/><text x="10.0874%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (64 samples, 0.07%)</title><rect x="9.9795%" y="405" width="0.0700%" height="15" fill="rgb(207,120,37)" fg:x="9125" fg:w="64"/><text x="10.2295%" y="415.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (74 samples, 0.08%)</title><rect x="9.9763%" y="421" width="0.0809%" height="15" fill="rgb(227,98,0)" fg:x="9122" fg:w="74"/><text x="10.2263%" y="431.50"></text></g><g><title>AGXMetalG14X`AGX::ResourceGroupUsage&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::setAndBindResource (10 samples, 0.01%)</title><rect x="10.0605%" y="357" width="0.0109%" height="15" fill="rgb(207,7,3)" fg:x="9199" fg:w="10"/><text x="10.3105%" y="367.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::bindComputeResources (14 samples, 0.02%)</title><rect x="10.0605%" y="373" width="0.0153%" height="15" fill="rgb(206,98,19)" fg:x="9199" fg:w="14"/><text x="10.3105%" y="383.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::blitCDMBuffer (39 samples, 0.04%)</title><rect x="10.0605%" y="389" width="0.0427%" height="15" fill="rgb(217,5,26)" fg:x="9199" fg:w="39"/><text x="10.3105%" y="399.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (43 samples, 0.05%)</title><rect x="10.0572%" y="421" width="0.0470%" height="15" fill="rgb(235,190,38)" fg:x="9196" fg:w="43"/><text x="10.3072%" y="431.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (41 samples, 0.04%)</title><rect x="10.0594%" y="405" width="0.0448%" height="15" fill="rgb(247,86,24)" fg:x="9198" fg:w="41"/><text x="10.3094%" y="415.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (139 samples, 0.15%)</title><rect x="10.1119%" y="325" width="0.1520%" height="15" fill="rgb(205,101,16)" fg:x="9246" fg:w="139"/><text x="10.3619%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (139 samples, 0.15%)</title><rect x="10.1119%" y="309" width="0.1520%" height="15" fill="rgb(246,168,33)" fg:x="9246" fg:w="139"/><text x="10.3619%" y="319.50"></text></g><g><title>IOKit`io_connect_method (139 samples, 0.15%)</title><rect x="10.1119%" y="293" width="0.1520%" height="15" fill="rgb(231,114,1)" fg:x="9246" fg:w="139"/><text x="10.3619%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (139 samples, 0.15%)</title><rect x="10.1119%" y="277" width="0.1520%" height="15" fill="rgb(207,184,53)" fg:x="9246" fg:w="139"/><text x="10.3619%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (141 samples, 0.15%)</title><rect x="10.1108%" y="341" width="0.1542%" height="15" fill="rgb(224,95,51)" fg:x="9245" fg:w="141"/><text x="10.3608%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (146 samples, 0.16%)</title><rect x="10.1086%" y="357" width="0.1597%" height="15" fill="rgb(212,188,45)" fg:x="9243" fg:w="146"/><text x="10.3586%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (117 samples, 0.13%)</title><rect x="10.2803%" y="277" width="0.1280%" height="15" fill="rgb(223,154,38)" fg:x="9400" fg:w="117"/><text x="10.5303%" y="287.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (127 samples, 0.14%)</title><rect x="10.2705%" y="325" width="0.1389%" height="15" fill="rgb(251,22,52)" fg:x="9391" fg:w="127"/><text x="10.5205%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (124 samples, 0.14%)</title><rect x="10.2737%" y="309" width="0.1356%" height="15" fill="rgb(229,209,22)" fg:x="9394" fg:w="124"/><text x="10.5237%" y="319.50"></text></g><g><title>IOKit`io_connect_method (123 samples, 0.13%)</title><rect x="10.2748%" y="293" width="0.1345%" height="15" fill="rgb(234,138,34)" fg:x="9395" fg:w="123"/><text x="10.5248%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (132 samples, 0.14%)</title><rect x="10.2705%" y="341" width="0.1444%" height="15" fill="rgb(212,95,11)" fg:x="9391" fg:w="132"/><text x="10.5205%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (135 samples, 0.15%)</title><rect x="10.2683%" y="357" width="0.1476%" height="15" fill="rgb(240,179,47)" fg:x="9389" fg:w="135"/><text x="10.5183%" y="367.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (292 samples, 0.32%)</title><rect x="10.1086%" y="373" width="0.3193%" height="15" fill="rgb(240,163,11)" fg:x="9243" fg:w="292"/><text x="10.3586%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (11 samples, 0.01%)</title><rect x="10.4159%" y="357" width="0.0120%" height="15" fill="rgb(236,37,12)" fg:x="9524" fg:w="11"/><text x="10.6659%" y="367.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (293 samples, 0.32%)</title><rect x="10.1086%" y="389" width="0.3204%" height="15" fill="rgb(232,164,16)" fg:x="9243" fg:w="293"/><text x="10.3586%" y="399.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (314 samples, 0.34%)</title><rect x="10.1042%" y="421" width="0.3434%" height="15" fill="rgb(244,205,15)" fg:x="9239" fg:w="314"/><text x="10.3542%" y="431.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (310 samples, 0.34%)</title><rect x="10.1086%" y="405" width="0.3390%" height="15" fill="rgb(223,117,47)" fg:x="9243" fg:w="310"/><text x="10.3586%" y="415.50"></text></g><g><title>main`metal::resource::ResourceRef::set_label (10 samples, 0.01%)</title><rect x="10.4367%" y="389" width="0.0109%" height="15" fill="rgb(244,107,35)" fg:x="9543" fg:w="10"/><text x="10.6867%" y="399.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (565 samples, 0.62%)</title><rect x="9.8308%" y="437" width="0.6179%" height="15" fill="rgb(205,140,8)" fg:x="8989" fg:w="565"/><text x="10.0808%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (23 samples, 0.03%)</title><rect x="10.4564%" y="405" width="0.0252%" height="15" fill="rgb(228,84,46)" fg:x="9561" fg:w="23"/><text x="10.7064%" y="415.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (48 samples, 0.05%)</title><rect x="10.4553%" y="421" width="0.0525%" height="15" fill="rgb(254,188,9)" fg:x="9560" fg:w="48"/><text x="10.7053%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (24 samples, 0.03%)</title><rect x="10.4815%" y="405" width="0.0262%" height="15" fill="rgb(206,112,54)" fg:x="9584" fg:w="24"/><text x="10.7315%" y="415.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (20 samples, 0.02%)</title><rect x="10.5078%" y="421" width="0.0219%" height="15" fill="rgb(216,84,49)" fg:x="9608" fg:w="20"/><text x="10.7578%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (19 samples, 0.02%)</title><rect x="10.5089%" y="405" width="0.0208%" height="15" fill="rgb(214,194,35)" fg:x="9609" fg:w="19"/><text x="10.7589%" y="415.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (11 samples, 0.01%)</title><rect x="10.5297%" y="421" width="0.0120%" height="15" fill="rgb(249,28,3)" fg:x="9628" fg:w="11"/><text x="10.7797%" y="431.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (10 samples, 0.01%)</title><rect x="10.5307%" y="405" width="0.0109%" height="15" fill="rgb(222,56,52)" fg:x="9629" fg:w="10"/><text x="10.7807%" y="415.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_staging_buffer (86 samples, 0.09%)</title><rect x="10.4487%" y="437" width="0.0941%" height="15" fill="rgb(245,217,50)" fg:x="9554" fg:w="86"/><text x="10.6987%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.01%)</title><rect x="10.5570%" y="373" width="0.0109%" height="15" fill="rgb(213,201,24)" fg:x="9653" fg:w="10"/><text x="10.8070%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (31 samples, 0.03%)</title><rect x="10.5526%" y="389" width="0.0339%" height="15" fill="rgb(248,116,28)" fg:x="9649" fg:w="31"/><text x="10.8026%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.02%)</title><rect x="10.5679%" y="373" width="0.0186%" height="15" fill="rgb(219,72,43)" fg:x="9663" fg:w="17"/><text x="10.8179%" y="383.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (33 samples, 0.04%)</title><rect x="10.5526%" y="437" width="0.0361%" height="15" fill="rgb(209,138,14)" fg:x="9649" fg:w="33"/><text x="10.8026%" y="447.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (33 samples, 0.04%)</title><rect x="10.5526%" y="421" width="0.0361%" height="15" fill="rgb(222,18,33)" fg:x="9649" fg:w="33"/><text x="10.8026%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (33 samples, 0.04%)</title><rect x="10.5526%" y="405" width="0.0361%" height="15" fill="rgb(213,199,7)" fg:x="9649" fg:w="33"/><text x="10.8026%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (17 samples, 0.02%)</title><rect x="10.6095%" y="389" width="0.0186%" height="15" fill="rgb(250,110,10)" fg:x="9701" fg:w="17"/><text x="10.8595%" y="399.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (24 samples, 0.03%)</title><rect x="10.6095%" y="405" width="0.0262%" height="15" fill="rgb(248,123,6)" fg:x="9701" fg:w="24"/><text x="10.8595%" y="415.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (36 samples, 0.04%)</title><rect x="10.6084%" y="421" width="0.0394%" height="15" fill="rgb(206,91,31)" fg:x="9700" fg:w="36"/><text x="10.8584%" y="431.50"></text></g><g><title>libsystem_platform.dylib`__bzero (63 samples, 0.07%)</title><rect x="10.6478%" y="405" width="0.0689%" height="15" fill="rgb(211,154,13)" fg:x="9736" fg:w="63"/><text x="10.8978%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (24 samples, 0.03%)</title><rect x="10.7287%" y="373" width="0.0262%" height="15" fill="rgb(225,148,7)" fg:x="9810" fg:w="24"/><text x="10.9787%" y="383.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (39 samples, 0.04%)</title><rect x="10.7243%" y="389" width="0.0427%" height="15" fill="rgb(220,160,43)" fg:x="9806" fg:w="39"/><text x="10.9743%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (11 samples, 0.01%)</title><rect x="10.7549%" y="373" width="0.0120%" height="15" fill="rgb(213,52,39)" fg:x="9834" fg:w="11"/><text x="11.0049%" y="383.50"></text></g><g><title>IOKit`IOConnectCallMethod (135 samples, 0.15%)</title><rect x="10.7899%" y="277" width="0.1476%" height="15" fill="rgb(243,137,7)" fg:x="9866" fg:w="135"/><text x="11.0399%" y="287.50"></text></g><g><title>IOKit`io_connect_method (133 samples, 0.15%)</title><rect x="10.7921%" y="261" width="0.1455%" height="15" fill="rgb(230,79,13)" fg:x="9868" fg:w="133"/><text x="11.0421%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (133 samples, 0.15%)</title><rect x="10.7921%" y="245" width="0.1455%" height="15" fill="rgb(247,105,23)" fg:x="9868" fg:w="133"/><text x="11.0421%" y="255.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (140 samples, 0.15%)</title><rect x="10.7856%" y="293" width="0.1531%" height="15" fill="rgb(223,179,41)" fg:x="9862" fg:w="140"/><text x="11.0356%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (144 samples, 0.16%)</title><rect x="10.7856%" y="309" width="0.1575%" height="15" fill="rgb(218,9,34)" fg:x="9862" fg:w="144"/><text x="11.0356%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (145 samples, 0.16%)</title><rect x="10.7856%" y="325" width="0.1586%" height="15" fill="rgb(222,106,8)" fg:x="9862" fg:w="145"/><text x="11.0356%" y="335.50"></text></g><g><title>IOKit`io_connect_method (53 samples, 0.06%)</title><rect x="10.9452%" y="261" width="0.0580%" height="15" fill="rgb(211,220,0)" fg:x="10008" fg:w="53"/><text x="11.1952%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (53 samples, 0.06%)</title><rect x="10.9452%" y="245" width="0.0580%" height="15" fill="rgb(229,52,16)" fg:x="10008" fg:w="53"/><text x="11.1952%" y="255.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (55 samples, 0.06%)</title><rect x="10.9441%" y="293" width="0.0602%" height="15" fill="rgb(212,155,18)" fg:x="10007" fg:w="55"/><text x="11.1941%" y="303.50"></text></g><g><title>IOKit`IOConnectCallMethod (54 samples, 0.06%)</title><rect x="10.9452%" y="277" width="0.0591%" height="15" fill="rgb(242,21,14)" fg:x="10008" fg:w="54"/><text x="11.1952%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (57 samples, 0.06%)</title><rect x="10.9441%" y="325" width="0.0623%" height="15" fill="rgb(222,19,48)" fg:x="10007" fg:w="57"/><text x="11.1941%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (57 samples, 0.06%)</title><rect x="10.9441%" y="309" width="0.0623%" height="15" fill="rgb(232,45,27)" fg:x="10007" fg:w="57"/><text x="11.1941%" y="319.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (209 samples, 0.23%)</title><rect x="10.7845%" y="341" width="0.2286%" height="15" fill="rgb(249,103,42)" fg:x="9861" fg:w="209"/><text x="11.0345%" y="351.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (211 samples, 0.23%)</title><rect x="10.7845%" y="357" width="0.2308%" height="15" fill="rgb(246,81,33)" fg:x="9861" fg:w="211"/><text x="11.0345%" y="367.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (280 samples, 0.31%)</title><rect x="10.7167%" y="405" width="0.3062%" height="15" fill="rgb(252,33,42)" fg:x="9799" fg:w="280"/><text x="10.9667%" y="415.50"></text></g><g><title>main`wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (228 samples, 0.25%)</title><rect x="10.7735%" y="389" width="0.2494%" height="15" fill="rgb(209,212,41)" fg:x="9851" fg:w="228"/><text x="11.0235%" y="399.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (219 samples, 0.24%)</title><rect x="10.7834%" y="373" width="0.2395%" height="15" fill="rgb(207,154,6)" fg:x="9860" fg:w="219"/><text x="11.0334%" y="383.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (346 samples, 0.38%)</title><rect x="10.6478%" y="421" width="0.3784%" height="15" fill="rgb(223,64,47)" fg:x="9736" fg:w="346"/><text x="10.8978%" y="431.50"></text></g><g><title>main`bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (385 samples, 0.42%)</title><rect x="10.6073%" y="437" width="0.4211%" height="15" fill="rgb(211,161,38)" fg:x="9699" fg:w="385"/><text x="10.8573%" y="447.50"></text></g><g><title>main`async_executor::Runner::new (31 samples, 0.03%)</title><rect x="11.0382%" y="421" width="0.0339%" height="15" fill="rgb(219,138,40)" fg:x="10093" fg:w="31"/><text x="11.2882%" y="431.50"></text></g><g><title>main`async_executor::Ticker::sleep (20 samples, 0.02%)</title><rect x="11.0809%" y="405" width="0.0219%" height="15" fill="rgb(241,228,46)" fg:x="10132" fg:w="20"/><text x="11.3309%" y="415.50"></text></g><g><title>main`async_executor::Runner::runnable::_{{closure}} (38 samples, 0.04%)</title><rect x="11.0721%" y="421" width="0.0416%" height="15" fill="rgb(223,209,38)" fg:x="10124" fg:w="38"/><text x="11.3221%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (14 samples, 0.02%)</title><rect x="11.1235%" y="405" width="0.0153%" height="15" fill="rgb(236,164,45)" fg:x="10171" fg:w="14"/><text x="11.3735%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (14 samples, 0.02%)</title><rect x="11.1235%" y="389" width="0.0153%" height="15" fill="rgb(231,15,5)" fg:x="10171" fg:w="14"/><text x="11.3735%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (36 samples, 0.04%)</title><rect x="11.1421%" y="389" width="0.0394%" height="15" fill="rgb(252,35,15)" fg:x="10188" fg:w="36"/><text x="11.3921%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (34 samples, 0.04%)</title><rect x="11.1443%" y="373" width="0.0372%" height="15" fill="rgb(248,181,18)" fg:x="10190" fg:w="34"/><text x="11.3943%" y="383.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="11.1399%" y="405" width="0.0437%" height="15" fill="rgb(233,39,42)" fg:x="10186" fg:w="40"/><text x="11.3899%" y="415.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (35 samples, 0.04%)</title><rect x="11.1902%" y="389" width="0.0383%" height="15" fill="rgb(238,110,33)" fg:x="10232" fg:w="35"/><text x="11.4402%" y="399.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.02%)</title><rect x="11.2110%" y="373" width="0.0175%" height="15" fill="rgb(233,195,10)" fg:x="10251" fg:w="16"/><text x="11.4610%" y="383.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (14 samples, 0.02%)</title><rect x="11.2307%" y="389" width="0.0153%" height="15" fill="rgb(254,105,3)" fg:x="10269" fg:w="14"/><text x="11.4807%" y="399.50"></text></g><g><title>main`event_listener::Event::notify_additional (11 samples, 0.01%)</title><rect x="11.2340%" y="373" width="0.0120%" height="15" fill="rgb(221,225,9)" fg:x="10272" fg:w="11"/><text x="11.4840%" y="383.50"></text></g><g><title>main`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (60 samples, 0.07%)</title><rect x="11.1880%" y="405" width="0.0656%" height="15" fill="rgb(224,227,45)" fg:x="10230" fg:w="60"/><text x="11.4380%" y="415.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (136 samples, 0.15%)</title><rect x="11.1148%" y="421" width="0.1487%" height="15" fill="rgb(229,198,43)" fg:x="10163" fg:w="136"/><text x="11.3648%" y="431.50"></text></g><g><title>main`core::ptr::drop_in_place$LT$futures_lite..future..Or$LT$bevy_tasks..task_pool..TaskPool..execute_global_scope$LT$$LP$$RP$$C$bevy_tasks..task_pool..TaskPool..scope_with_executor_inner$LT$bevy_ecs..query..state..QueryState$LT$$LP$bevy_ecs..entity..Entity$C$$RF$bevy_render..view..visibility..ViewVisibility$C$$RF$bevy_transform..components..global_transform..GlobalTransform$C$core..option..Option$LT$$RF$bevy_pbr..prepass..PreviousGlobalTransform$GT$$C$$RF$bevy_asset..handle..Handle$LT$bevy_render..mesh..mesh..Mesh$GT$$C$bevy_ecs..query..fetch..Has$LT$bevy_pbr..light..NotShadowReceiver$GT$$C$bevy_ecs..query..fetch..Has$LT$bevy_pbr..light..TransmittedShadowReceiver$GT$$C$bevy_ecs..query..fetch..Has$LT$bevy_pbr..light..NotShadowCaster$GT$$C$bevy_ecs..query..fetch..Has$LT$bevy_render..batching..NoAutomaticBatching$GT$$RP$$GT$..par_for_each_unchecked_manual$LT$bevy_pbr..render..mesh..extract_meshes..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closA (10 samples, 0.01%)</title><rect x="11.2876%" y="421" width="0.0109%" height="15" fill="rgb(206,209,35)" fg:x="10321" fg:w="10"/><text x="11.5376%" y="431.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (245 samples, 0.27%)</title><rect x="11.0316%" y="437" width="0.2679%" height="15" fill="rgb(245,195,53)" fg:x="10087" fg:w="245"/><text x="11.2816%" y="447.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (12 samples, 0.01%)</title><rect x="11.3040%" y="421" width="0.0131%" height="15" fill="rgb(240,92,26)" fg:x="10336" fg:w="12"/><text x="11.5540%" y="431.50"></text></g><g><title>main`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (13 samples, 0.01%)</title><rect x="11.3040%" y="437" width="0.0142%" height="15" fill="rgb(207,40,23)" fg:x="10336" fg:w="13"/><text x="11.5540%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.02%)</title><rect x="11.3783%" y="213" width="0.0186%" height="15" fill="rgb(223,111,35)" fg:x="10404" fg:w="17"/><text x="11.6283%" y="223.50"></text></g><g><title>main`epaint::shape_transform::adjust_colors (24 samples, 0.03%)</title><rect x="11.4035%" y="213" width="0.0262%" height="15" fill="rgb(229,147,28)" fg:x="10427" fg:w="24"/><text x="11.6535%" y="223.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (64 samples, 0.07%)</title><rect x="11.3663%" y="229" width="0.0700%" height="15" fill="rgb(211,29,28)" fg:x="10393" fg:w="64"/><text x="11.6163%" y="239.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (10 samples, 0.01%)</title><rect x="11.4483%" y="181" width="0.0109%" height="15" fill="rgb(228,72,33)" fg:x="10468" fg:w="10"/><text x="11.6983%" y="191.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (14 samples, 0.02%)</title><rect x="11.4450%" y="197" width="0.0153%" height="15" fill="rgb(205,214,31)" fg:x="10465" fg:w="14"/><text x="11.6950%" y="207.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (25 samples, 0.03%)</title><rect x="11.4407%" y="213" width="0.0273%" height="15" fill="rgb(224,111,15)" fg:x="10461" fg:w="25"/><text x="11.6907%" y="223.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (30 samples, 0.03%)</title><rect x="11.4363%" y="229" width="0.0328%" height="15" fill="rgb(253,21,26)" fg:x="10457" fg:w="30"/><text x="11.6863%" y="239.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (13 samples, 0.01%)</title><rect x="11.4800%" y="181" width="0.0142%" height="15" fill="rgb(245,139,43)" fg:x="10497" fg:w="13"/><text x="11.7300%" y="191.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (16 samples, 0.02%)</title><rect x="11.4800%" y="197" width="0.0175%" height="15" fill="rgb(252,170,7)" fg:x="10497" fg:w="16"/><text x="11.7300%" y="207.50"></text></g><g><title>main`egui::ui::Ui::with_layout_dyn (20 samples, 0.02%)</title><rect x="11.4778%" y="229" width="0.0219%" height="15" fill="rgb(231,118,14)" fg:x="10495" fg:w="20"/><text x="11.7278%" y="239.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.02%)</title><rect x="11.4800%" y="213" width="0.0197%" height="15" fill="rgb(238,83,0)" fg:x="10497" fg:w="18"/><text x="11.7300%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.03%)</title><rect x="11.5446%" y="197" width="0.0252%" height="15" fill="rgb(221,39,39)" fg:x="10556" fg:w="23"/><text x="11.7946%" y="207.50"></text></g><g><title>main`epaint::shape_transform::adjust_colors (16 samples, 0.02%)</title><rect x="11.5763%" y="197" width="0.0175%" height="15" fill="rgb(222,119,46)" fg:x="10585" fg:w="16"/><text x="11.8263%" y="207.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (64 samples, 0.07%)</title><rect x="11.5347%" y="213" width="0.0700%" height="15" fill="rgb(222,165,49)" fg:x="10547" fg:w="64"/><text x="11.7847%" y="223.50"></text></g><g><title>main`epaint::text::fonts::FontsAndCache::layout_job (10 samples, 0.01%)</title><rect x="11.5938%" y="197" width="0.0109%" height="15" fill="rgb(219,113,52)" fg:x="10601" fg:w="10"/><text x="11.8438%" y="207.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (20 samples, 0.02%)</title><rect x="11.6255%" y="165" width="0.0219%" height="15" fill="rgb(214,7,15)" fg:x="10630" fg:w="20"/><text x="11.8755%" y="175.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (33 samples, 0.04%)</title><rect x="11.6178%" y="181" width="0.0361%" height="15" fill="rgb(235,32,4)" fg:x="10623" fg:w="33"/><text x="11.8678%" y="191.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (51 samples, 0.06%)</title><rect x="11.6047%" y="213" width="0.0558%" height="15" fill="rgb(238,90,54)" fg:x="10611" fg:w="51"/><text x="11.8547%" y="223.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (43 samples, 0.05%)</title><rect x="11.6135%" y="197" width="0.0470%" height="15" fill="rgb(213,208,19)" fg:x="10619" fg:w="43"/><text x="11.8635%" y="207.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (306 samples, 0.33%)</title><rect x="11.3466%" y="277" width="0.3347%" height="15" fill="rgb(233,156,4)" fg:x="10375" fg:w="306"/><text x="11.5966%" y="287.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (306 samples, 0.33%)</title><rect x="11.3466%" y="261" width="0.3347%" height="15" fill="rgb(207,194,5)" fg:x="10375" fg:w="306"/><text x="11.5966%" y="271.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (303 samples, 0.33%)</title><rect x="11.3499%" y="245" width="0.3314%" height="15" fill="rgb(206,111,30)" fg:x="10378" fg:w="303"/><text x="11.5999%" y="255.50"></text></g><g><title>main`rusty_cde::ui::scenario::common::draw_ui_scenario_common (166 samples, 0.18%)</title><rect x="11.4997%" y="229" width="0.1815%" height="15" fill="rgb(243,70,54)" fg:x="10515" fg:w="166"/><text x="11.7497%" y="239.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (309 samples, 0.34%)</title><rect x="11.3455%" y="293" width="0.3379%" height="15" fill="rgb(242,28,8)" fg:x="10374" fg:w="309"/><text x="11.5955%" y="303.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (10 samples, 0.01%)</title><rect x="11.6835%" y="293" width="0.0109%" height="15" fill="rgb(219,106,18)" fg:x="10683" fg:w="10"/><text x="11.9335%" y="303.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.01%)</title><rect x="11.6835%" y="277" width="0.0109%" height="15" fill="rgb(244,222,10)" fg:x="10683" fg:w="10"/><text x="11.9335%" y="287.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (327 samples, 0.36%)</title><rect x="11.3379%" y="373" width="0.3576%" height="15" fill="rgb(236,179,52)" fg:x="10367" fg:w="327"/><text x="11.5879%" y="383.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (326 samples, 0.36%)</title><rect x="11.3390%" y="357" width="0.3565%" height="15" fill="rgb(213,23,39)" fg:x="10368" fg:w="326"/><text x="11.5890%" y="367.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (325 samples, 0.36%)</title><rect x="11.3400%" y="341" width="0.3554%" height="15" fill="rgb(238,48,10)" fg:x="10369" fg:w="325"/><text x="11.5900%" y="351.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (321 samples, 0.35%)</title><rect x="11.3444%" y="325" width="0.3511%" height="15" fill="rgb(251,196,23)" fg:x="10373" fg:w="321"/><text x="11.5944%" y="335.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (321 samples, 0.35%)</title><rect x="11.3444%" y="309" width="0.3511%" height="15" fill="rgb(250,152,24)" fg:x="10373" fg:w="321"/><text x="11.5944%" y="319.50"></text></g><g><title>main`egui::ui::Ui::allocate_exact_size (11 samples, 0.01%)</title><rect x="11.7469%" y="277" width="0.0120%" height="15" fill="rgb(209,150,17)" fg:x="10741" fg:w="11"/><text x="11.9969%" y="287.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (33 samples, 0.04%)</title><rect x="11.7272%" y="293" width="0.0361%" height="15" fill="rgb(234,202,34)" fg:x="10723" fg:w="33"/><text x="11.9772%" y="303.50"></text></g><g><title>main`egui::widgets::text_edit::builder::TextEdit::show_content (10 samples, 0.01%)</title><rect x="11.7688%" y="277" width="0.0109%" height="15" fill="rgb(253,148,53)" fg:x="10761" fg:w="10"/><text x="12.0188%" y="287.50"></text></g><g><title>main`&lt;egui::widgets::text_edit::builder::TextEdit as egui::widgets::Widget&gt;::ui (16 samples, 0.02%)</title><rect x="11.7633%" y="293" width="0.0175%" height="15" fill="rgb(218,129,16)" fg:x="10756" fg:w="16"/><text x="12.0133%" y="303.50"></text></g><g><title>main`core::fmt::float::float_to_exponential_common_exact (16 samples, 0.02%)</title><rect x="11.7830%" y="261" width="0.0175%" height="15" fill="rgb(216,85,19)" fg:x="10774" fg:w="16"/><text x="12.0330%" y="271.50"></text></g><g><title>main`alloc::fmt::format::format_inner (20 samples, 0.02%)</title><rect x="11.7808%" y="293" width="0.0219%" height="15" fill="rgb(235,228,7)" fg:x="10772" fg:w="20"/><text x="12.0308%" y="303.50"></text></g><g><title>main`core::fmt::write (19 samples, 0.02%)</title><rect x="11.7819%" y="277" width="0.0208%" height="15" fill="rgb(245,175,0)" fg:x="10773" fg:w="19"/><text x="12.0319%" y="287.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (114 samples, 0.12%)</title><rect x="11.6977%" y="357" width="0.1247%" height="15" fill="rgb(208,168,36)" fg:x="10696" fg:w="114"/><text x="11.9477%" y="367.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (114 samples, 0.12%)</title><rect x="11.6977%" y="341" width="0.1247%" height="15" fill="rgb(246,171,24)" fg:x="10696" fg:w="114"/><text x="11.9477%" y="351.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (114 samples, 0.12%)</title><rect x="11.6977%" y="325" width="0.1247%" height="15" fill="rgb(215,142,24)" fg:x="10696" fg:w="114"/><text x="11.9477%" y="335.50"></text></g><g><title>main`egui_extras::table::TableBody::row (113 samples, 0.12%)</title><rect x="11.6988%" y="309" width="0.1236%" height="15" fill="rgb(250,187,7)" fg:x="10697" fg:w="113"/><text x="11.9488%" y="319.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (116 samples, 0.13%)</title><rect x="11.6966%" y="373" width="0.1269%" height="15" fill="rgb(228,66,33)" fg:x="10695" fg:w="116"/><text x="11.9466%" y="383.50"></text></g><g><title>main`egui::context::Context::interact (10 samples, 0.01%)</title><rect x="11.8234%" y="373" width="0.0109%" height="15" fill="rgb(234,215,21)" fg:x="10811" fg:w="10"/><text x="12.0734%" y="383.50"></text></g><g><title>main`egui::ui::Ui::allocate_exact_size (14 samples, 0.02%)</title><rect x="11.8584%" y="325" width="0.0153%" height="15" fill="rgb(222,191,20)" fg:x="10843" fg:w="14"/><text x="12.1084%" y="335.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (33 samples, 0.04%)</title><rect x="11.8420%" y="341" width="0.0361%" height="15" fill="rgb(245,79,54)" fg:x="10828" fg:w="33"/><text x="12.0920%" y="351.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (46 samples, 0.05%)</title><rect x="11.8366%" y="357" width="0.0503%" height="15" fill="rgb(240,10,37)" fg:x="10823" fg:w="46"/><text x="12.0866%" y="367.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (49 samples, 0.05%)</title><rect x="11.8355%" y="373" width="0.0536%" height="15" fill="rgb(214,192,32)" fg:x="10822" fg:w="49"/><text x="12.0855%" y="383.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (516 samples, 0.56%)</title><rect x="11.3302%" y="405" width="0.5643%" height="15" fill="rgb(209,36,54)" fg:x="10360" fg:w="516"/><text x="11.5802%" y="415.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (514 samples, 0.56%)</title><rect x="11.3324%" y="389" width="0.5621%" height="15" fill="rgb(220,10,11)" fg:x="10362" fg:w="514"/><text x="11.5824%" y="399.50"></text></g><g><title>main`egui::containers::frame::Frame::show_dyn (517 samples, 0.57%)</title><rect x="11.3302%" y="421" width="0.5654%" height="15" fill="rgb(221,106,17)" fg:x="10360" fg:w="517"/><text x="11.5802%" y="431.50"></text></g><g><title>main`egui::containers::panel::CentralPanel::show_dyn (520 samples, 0.57%)</title><rect x="11.3280%" y="437" width="0.5687%" height="15" fill="rgb(251,142,44)" fg:x="10358" fg:w="520"/><text x="11.5780%" y="447.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (10 samples, 0.01%)</title><rect x="11.9011%" y="341" width="0.0109%" height="15" fill="rgb(238,13,15)" fg:x="10882" fg:w="10"/><text x="12.1511%" y="351.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (18 samples, 0.02%)</title><rect x="11.9306%" y="309" width="0.0197%" height="15" fill="rgb(208,107,27)" fg:x="10909" fg:w="18"/><text x="12.1806%" y="319.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (28 samples, 0.03%)</title><rect x="11.9208%" y="341" width="0.0306%" height="15" fill="rgb(205,136,37)" fg:x="10900" fg:w="28"/><text x="12.1708%" y="351.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (25 samples, 0.03%)</title><rect x="11.9241%" y="325" width="0.0273%" height="15" fill="rgb(250,205,27)" fg:x="10903" fg:w="25"/><text x="12.1741%" y="335.50"></text></g><g><title>main`egui::widget_text::WidgetTextGalley::paint_with_fallback_color (17 samples, 0.02%)</title><rect x="11.9744%" y="309" width="0.0186%" height="15" fill="rgb(210,80,43)" fg:x="10949" fg:w="17"/><text x="12.2244%" y="319.50"></text></g><g><title>main`egui::painter::Painter::add (17 samples, 0.02%)</title><rect x="11.9744%" y="293" width="0.0186%" height="15" fill="rgb(247,160,36)" fg:x="10949" fg:w="17"/><text x="12.2244%" y="303.50"></text></g><g><title>main`epaint::shape_transform::adjust_colors (11 samples, 0.01%)</title><rect x="11.9809%" y="277" width="0.0120%" height="15" fill="rgb(234,13,49)" fg:x="10955" fg:w="11"/><text x="12.2309%" y="287.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (36 samples, 0.04%)</title><rect x="11.9547%" y="325" width="0.0394%" height="15" fill="rgb(234,122,0)" fg:x="10931" fg:w="36"/><text x="12.2047%" y="335.50"></text></g><g><title>main`egui::ui::Ui::add_enabled (38 samples, 0.04%)</title><rect x="11.9547%" y="341" width="0.0416%" height="15" fill="rgb(207,146,38)" fg:x="10931" fg:w="38"/><text x="12.2047%" y="351.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (91 samples, 0.10%)</title><rect x="11.8989%" y="357" width="0.0995%" height="15" fill="rgb(207,177,25)" fg:x="10880" fg:w="91"/><text x="12.1489%" y="367.50"></text></g><g><title>main`egui::ui::Ui::horizontal_with_main_wrap_dyn (92 samples, 0.10%)</title><rect x="11.8989%" y="373" width="0.1006%" height="15" fill="rgb(211,178,42)" fg:x="10880" fg:w="92"/><text x="12.1489%" y="383.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (102 samples, 0.11%)</title><rect x="11.8989%" y="405" width="0.1116%" height="15" fill="rgb(230,69,54)" fg:x="10880" fg:w="102"/><text x="12.1489%" y="415.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (102 samples, 0.11%)</title><rect x="11.8989%" y="389" width="0.1116%" height="15" fill="rgb(214,135,41)" fg:x="10880" fg:w="102"/><text x="12.1489%" y="399.50"></text></g><g><title>main`egui::ui::Ui::with_layout_dyn (10 samples, 0.01%)</title><rect x="11.9995%" y="373" width="0.0109%" height="15" fill="rgb(237,67,25)" fg:x="10972" fg:w="10"/><text x="12.2495%" y="383.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.01%)</title><rect x="11.9995%" y="357" width="0.0109%" height="15" fill="rgb(222,189,50)" fg:x="10972" fg:w="10"/><text x="12.2495%" y="367.50"></text></g><g><title>main`egui::containers::frame::Frame::show_dyn (106 samples, 0.12%)</title><rect x="11.8989%" y="421" width="0.1159%" height="15" fill="rgb(245,148,34)" fg:x="10880" fg:w="106"/><text x="12.1489%" y="431.50"></text></g><g><title>main`egui::containers::panel::TopBottomPanel::show_dyn (113 samples, 0.12%)</title><rect x="11.8978%" y="437" width="0.1236%" height="15" fill="rgb(222,29,6)" fg:x="10879" fg:w="113"/><text x="12.1478%" y="447.50"></text></g><g><title>main`egui::context::Context::begin_frame (17 samples, 0.02%)</title><rect x="12.0214%" y="437" width="0.0186%" height="15" fill="rgb(221,189,43)" fg:x="10992" fg:w="17"/><text x="12.2714%" y="447.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,014 samples, 3.30%)</title><rect x="8.7700%" y="453" width="3.2963%" height="15" fill="rgb(207,36,27)" fg:x="8019" fg:w="3014"/><text x="9.0200%" y="463.50">mai..</text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3,876 samples, 4.24%)</title><rect x="7.8469%" y="469" width="4.2390%" height="15" fill="rgb(217,90,24)" fg:x="7175" fg:w="3876"/><text x="8.0969%" y="479.50">main`..</text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (35 samples, 0.04%)</title><rect x="12.0859%" y="469" width="0.0383%" height="15" fill="rgb(224,66,35)" fg:x="11051" fg:w="35"/><text x="12.3359%" y="479.50"></text></g><g><title>main`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="12.1308%" y="469" width="0.0241%" height="15" fill="rgb(221,13,50)" fg:x="11092" fg:w="22"/><text x="12.3808%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (17 samples, 0.02%)</title><rect x="12.1701%" y="453" width="0.0186%" height="15" fill="rgb(236,68,49)" fg:x="11128" fg:w="17"/><text x="12.4201%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (17 samples, 0.02%)</title><rect x="12.1701%" y="437" width="0.0186%" height="15" fill="rgb(229,146,28)" fg:x="11128" fg:w="17"/><text x="12.4201%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (48 samples, 0.05%)</title><rect x="12.1942%" y="437" width="0.0525%" height="15" fill="rgb(225,31,38)" fg:x="11150" fg:w="48"/><text x="12.4442%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (47 samples, 0.05%)</title><rect x="12.1953%" y="421" width="0.0514%" height="15" fill="rgb(250,208,3)" fg:x="11151" fg:w="47"/><text x="12.4453%" y="431.50"></text></g><g><title>main`event_listener::Inner::lock (57 samples, 0.06%)</title><rect x="12.1909%" y="453" width="0.0623%" height="15" fill="rgb(246,54,23)" fg:x="11147" fg:w="57"/><text x="12.4409%" y="463.50"></text></g><g><title>main`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (91 samples, 0.10%)</title><rect x="12.1548%" y="469" width="0.0995%" height="15" fill="rgb(243,76,11)" fg:x="11114" fg:w="91"/><text x="12.4048%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (66 samples, 0.07%)</title><rect x="12.3626%" y="437" width="0.0722%" height="15" fill="rgb(245,21,50)" fg:x="11304" fg:w="66"/><text x="12.6126%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (66 samples, 0.07%)</title><rect x="12.3626%" y="421" width="0.0722%" height="15" fill="rgb(228,9,43)" fg:x="11304" fg:w="66"/><text x="12.6126%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (110 samples, 0.12%)</title><rect x="12.4435%" y="421" width="0.1203%" height="15" fill="rgb(208,100,47)" fg:x="11378" fg:w="110"/><text x="12.6935%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (109 samples, 0.12%)</title><rect x="12.4446%" y="405" width="0.1192%" height="15" fill="rgb(232,26,8)" fg:x="11379" fg:w="109"/><text x="12.6946%" y="415.50"></text></g><g><title>main`event_listener::Inner::lock (114 samples, 0.12%)</title><rect x="12.4414%" y="437" width="0.1247%" height="15" fill="rgb(216,166,38)" fg:x="11376" fg:w="114"/><text x="12.6914%" y="447.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (56 samples, 0.06%)</title><rect x="12.5682%" y="421" width="0.0612%" height="15" fill="rgb(251,202,51)" fg:x="11492" fg:w="56"/><text x="12.8182%" y="431.50"></text></g><g><title>main`async_executor::State::notify (21 samples, 0.02%)</title><rect x="12.6295%" y="405" width="0.0230%" height="15" fill="rgb(254,216,34)" fg:x="11548" fg:w="21"/><text x="12.8795%" y="415.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (24 samples, 0.03%)</title><rect x="12.6524%" y="405" width="0.0262%" height="15" fill="rgb(251,32,27)" fg:x="11569" fg:w="24"/><text x="12.9024%" y="415.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (19 samples, 0.02%)</title><rect x="12.6579%" y="389" width="0.0208%" height="15" fill="rgb(208,127,28)" fg:x="11574" fg:w="19"/><text x="12.9079%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (69 samples, 0.08%)</title><rect x="12.6787%" y="389" width="0.0755%" height="15" fill="rgb(224,137,22)" fg:x="11593" fg:w="69"/><text x="12.9287%" y="399.50"></text></g><g><title>main`event_listener::Event::notify_additional (406 samples, 0.44%)</title><rect x="12.3145%" y="453" width="0.4440%" height="15" fill="rgb(254,70,32)" fg:x="11260" fg:w="406"/><text x="12.5645%" y="463.50"></text></g><g><title>main`event_listener::List::notify_additional (176 samples, 0.19%)</title><rect x="12.5660%" y="437" width="0.1925%" height="15" fill="rgb(229,75,37)" fg:x="11490" fg:w="176"/><text x="12.8160%" y="447.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (118 samples, 0.13%)</title><rect x="12.6295%" y="421" width="0.1291%" height="15" fill="rgb(252,64,23)" fg:x="11548" fg:w="118"/><text x="12.8795%" y="431.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (73 samples, 0.08%)</title><rect x="12.6787%" y="405" width="0.0798%" height="15" fill="rgb(232,162,48)" fg:x="11593" fg:w="73"/><text x="12.9287%" y="415.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (458 samples, 0.50%)</title><rect x="12.2587%" y="469" width="0.5009%" height="15" fill="rgb(246,160,12)" fg:x="11209" fg:w="458"/><text x="12.5087%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (192 samples, 0.21%)</title><rect x="12.8023%" y="453" width="0.2100%" height="15" fill="rgb(247,166,0)" fg:x="11706" fg:w="192"/><text x="13.0523%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (186 samples, 0.20%)</title><rect x="12.8088%" y="437" width="0.2034%" height="15" fill="rgb(249,219,21)" fg:x="11712" fg:w="186"/><text x="13.0588%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (383 samples, 0.42%)</title><rect x="13.0133%" y="437" width="0.4189%" height="15" fill="rgb(205,209,3)" fg:x="11899" fg:w="383"/><text x="13.2633%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (386 samples, 0.42%)</title><rect x="13.0122%" y="453" width="0.4221%" height="15" fill="rgb(243,44,1)" fg:x="11898" fg:w="386"/><text x="13.2622%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.02%)</title><rect x="13.4355%" y="453" width="0.0153%" height="15" fill="rgb(206,159,16)" fg:x="12285" fg:w="14"/><text x="13.6855%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (10 samples, 0.01%)</title><rect x="13.4508%" y="453" width="0.0109%" height="15" fill="rgb(244,77,30)" fg:x="12299" fg:w="10"/><text x="13.7008%" y="463.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (138 samples, 0.15%)</title><rect x="13.4727%" y="453" width="0.1509%" height="15" fill="rgb(218,69,12)" fg:x="12319" fg:w="138"/><text x="13.7227%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (13 samples, 0.01%)</title><rect x="13.6597%" y="405" width="0.0142%" height="15" fill="rgb(212,87,7)" fg:x="12490" fg:w="13"/><text x="13.9097%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (14 samples, 0.02%)</title><rect x="13.6597%" y="421" width="0.0153%" height="15" fill="rgb(245,114,25)" fg:x="12490" fg:w="14"/><text x="13.9097%" y="431.50"></text></g><g><title>main`async_executor::State::notify (43 samples, 0.05%)</title><rect x="13.6400%" y="437" width="0.0470%" height="15" fill="rgb(210,61,42)" fg:x="12472" fg:w="43"/><text x="13.8900%" y="447.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (33 samples, 0.04%)</title><rect x="13.6870%" y="437" width="0.0361%" height="15" fill="rgb(211,52,33)" fg:x="12515" fg:w="33"/><text x="13.9370%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (131 samples, 0.14%)</title><rect x="13.7242%" y="421" width="0.1433%" height="15" fill="rgb(234,58,33)" fg:x="12549" fg:w="131"/><text x="13.9742%" y="431.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (233 samples, 0.25%)</title><rect x="13.6236%" y="453" width="0.2548%" height="15" fill="rgb(220,115,36)" fg:x="12457" fg:w="233"/><text x="13.8736%" y="463.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (142 samples, 0.16%)</title><rect x="13.7231%" y="437" width="0.1553%" height="15" fill="rgb(243,153,54)" fg:x="12548" fg:w="142"/><text x="13.9731%" y="447.50"></text></g><g><title>main`async_executor::Executor::spawn (1,025 samples, 1.12%)</title><rect x="12.7596%" y="469" width="1.1210%" height="15" fill="rgb(251,47,18)" fg:x="11667" fg:w="1025"/><text x="13.0096%" y="479.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::clone_waker (13 samples, 0.01%)</title><rect x="13.8839%" y="469" width="0.0142%" height="15" fill="rgb(242,102,42)" fg:x="12695" fg:w="13"/><text x="14.1339%" y="479.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::finish_system_and_handle_dependents (80 samples, 0.09%)</title><rect x="13.9178%" y="469" width="0.0875%" height="15" fill="rgb(234,31,38)" fg:x="12726" fg:w="80"/><text x="14.1678%" y="479.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::signal_dependents (59 samples, 0.06%)</title><rect x="13.9407%" y="453" width="0.0645%" height="15" fill="rgb(221,117,51)" fg:x="12747" fg:w="59"/><text x="14.1907%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (21 samples, 0.02%)</title><rect x="14.0129%" y="453" width="0.0230%" height="15" fill="rgb(212,20,18)" fg:x="12813" fg:w="21"/><text x="14.2629%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (21 samples, 0.02%)</title><rect x="14.0129%" y="437" width="0.0230%" height="15" fill="rgb(245,133,36)" fg:x="12813" fg:w="21"/><text x="14.2629%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (188 samples, 0.21%)</title><rect x="14.0512%" y="421" width="0.2056%" height="15" fill="rgb(212,6,19)" fg:x="12848" fg:w="188"/><text x="14.3012%" y="431.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (205 samples, 0.22%)</title><rect x="14.0381%" y="453" width="0.2242%" height="15" fill="rgb(218,1,36)" fg:x="12836" fg:w="205"/><text x="14.2881%" y="463.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (194 samples, 0.21%)</title><rect x="14.0501%" y="437" width="0.2122%" height="15" fill="rgb(246,84,54)" fg:x="12847" fg:w="194"/><text x="14.3001%" y="447.50"></text></g><g><title>main`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_scope (236 samples, 0.26%)</title><rect x="14.0064%" y="469" width="0.2581%" height="15" fill="rgb(242,110,6)" fg:x="12807" fg:w="236"/><text x="14.2564%" y="479.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (45 samples, 0.05%)</title><rect x="14.2645%" y="469" width="0.0492%" height="15" fill="rgb(214,47,5)" fg:x="13043" fg:w="45"/><text x="14.5145%" y="479.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.03%)</title><rect x="14.3213%" y="469" width="0.0252%" height="15" fill="rgb(218,159,25)" fg:x="13095" fg:w="23"/><text x="14.5713%" y="479.50"></text></g><g><title>main`fixedbitset::FixedBitSet::is_disjoint (28 samples, 0.03%)</title><rect x="14.3640%" y="469" width="0.0306%" height="15" fill="rgb(215,211,28)" fg:x="13134" fg:w="28"/><text x="14.6140%" y="479.50"></text></g><g><title>main`fixedbitset::FixedBitSet::union_with (49 samples, 0.05%)</title><rect x="14.3946%" y="469" width="0.0536%" height="15" fill="rgb(238,59,32)" fg:x="13162" fg:w="49"/><text x="14.6446%" y="479.50"></text></g><g><title>main`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (6,303 samples, 6.89%)</title><rect x="7.5615%" y="485" width="6.8933%" height="15" fill="rgb(226,82,3)" fg:x="6914" fg:w="6303"/><text x="7.8115%" y="495.50">main`&lt;fut..</text></g><g><title>main`fixedbitset::FixedBitSet::is_disjoint (20 samples, 0.02%)</title><rect x="14.4876%" y="485" width="0.0219%" height="15" fill="rgb(240,164,32)" fg:x="13247" fg:w="20"/><text x="14.7376%" y="495.50"></text></g><g><title>main`fixedbitset::FixedBitSet::union_with (11 samples, 0.01%)</title><rect x="14.5094%" y="485" width="0.0120%" height="15" fill="rgb(232,46,7)" fg:x="13267" fg:w="11"/><text x="14.7594%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (149 samples, 0.16%)</title><rect x="14.5302%" y="469" width="0.1630%" height="15" fill="rgb(229,129,53)" fg:x="13286" fg:w="149"/><text x="14.7802%" y="479.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (8,228 samples, 9.00%)</title><rect x="5.6979%" y="501" width="8.9985%" height="15" fill="rgb(234,188,29)" fg:x="5210" fg:w="8228"/><text x="5.9479%" y="511.50">main`async_ta..</text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (152 samples, 0.17%)</title><rect x="14.5302%" y="485" width="0.1662%" height="15" fill="rgb(246,141,4)" fg:x="13286" fg:w="152"/><text x="14.7802%" y="495.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::len (69 samples, 0.08%)</title><rect x="14.6965%" y="501" width="0.0755%" height="15" fill="rgb(229,23,39)" fg:x="13438" fg:w="69"/><text x="14.9465%" y="511.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (190 samples, 0.21%)</title><rect x="14.7719%" y="501" width="0.2078%" height="15" fill="rgb(206,12,3)" fg:x="13507" fg:w="190"/><text x="15.0219%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (592 samples, 0.65%)</title><rect x="14.9896%" y="485" width="0.6474%" height="15" fill="rgb(252,226,20)" fg:x="13706" fg:w="592"/><text x="15.2396%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (13 samples, 0.01%)</title><rect x="15.6370%" y="485" width="0.0142%" height="15" fill="rgb(216,123,35)" fg:x="14298" fg:w="13"/><text x="15.8870%" y="495.50"></text></g><g><title>main`async_executor::Executor::run::_{{closure}} (10,023 samples, 10.96%)</title><rect x="4.7049%" y="517" width="10.9616%" height="15" fill="rgb(212,68,40)" fg:x="4302" fg:w="10023"/><text x="4.9549%" y="527.50">main`async_execu..</text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (621 samples, 0.68%)</title><rect x="14.9874%" y="501" width="0.6792%" height="15" fill="rgb(254,125,32)" fg:x="13704" fg:w="621"/><text x="15.2374%" y="511.50"></text></g><g><title>main`parking::Unparker::unpark (11 samples, 0.01%)</title><rect x="15.6545%" y="485" width="0.0120%" height="15" fill="rgb(253,97,22)" fg:x="14314" fg:w="11"/><text x="15.9045%" y="495.50"></text></g><g><title>main`async_executor::steal (14 samples, 0.02%)</title><rect x="15.6720%" y="517" width="0.0153%" height="15" fill="rgb(241,101,14)" fg:x="14330" fg:w="14"/><text x="15.9220%" y="527.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (26 samples, 0.03%)</title><rect x="15.6873%" y="517" width="0.0284%" height="15" fill="rgb(238,103,29)" fg:x="14344" fg:w="26"/><text x="15.9373%" y="527.50"></text></g><g><title>main`&lt;async_executor::Ticker as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="15.7464%" y="469" width="0.0197%" height="15" fill="rgb(233,195,47)" fg:x="14398" fg:w="18"/><text x="15.9964%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (18 samples, 0.02%)</title><rect x="15.8240%" y="421" width="0.0197%" height="15" fill="rgb(246,218,30)" fg:x="14469" fg:w="18"/><text x="16.0740%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.02%)</title><rect x="15.8262%" y="405" width="0.0175%" height="15" fill="rgb(219,145,47)" fg:x="14471" fg:w="16"/><text x="16.0762%" y="415.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (56 samples, 0.06%)</title><rect x="15.8459%" y="421" width="0.0612%" height="15" fill="rgb(243,12,26)" fg:x="14489" fg:w="56"/><text x="16.0959%" y="431.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once (40 samples, 0.04%)</title><rect x="15.8634%" y="405" width="0.0437%" height="15" fill="rgb(214,87,16)" fg:x="14505" fg:w="40"/><text x="16.1134%" y="415.50"></text></g><g><title>main`bevy_ecs::component::ComponentDescriptor::drop_ptr (23 samples, 0.03%)</title><rect x="15.9093%" y="421" width="0.0252%" height="15" fill="rgb(208,99,42)" fg:x="14547" fg:w="23"/><text x="16.1593%" y="431.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext deferredEndEncoding:] (14 samples, 0.02%)</title><rect x="15.9793%" y="341" width="0.0153%" height="15" fill="rgb(253,99,2)" fg:x="14611" fg:w="14"/><text x="16.2293%" y="351.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer commitEncoder] (34 samples, 0.04%)</title><rect x="15.9629%" y="357" width="0.0372%" height="15" fill="rgb(220,168,23)" fg:x="14596" fg:w="34"/><text x="16.2129%" y="367.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (10 samples, 0.01%)</title><rect x="16.0023%" y="341" width="0.0109%" height="15" fill="rgb(242,38,24)" fg:x="14632" fg:w="10"/><text x="16.2523%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (19 samples, 0.02%)</title><rect x="16.0132%" y="325" width="0.0208%" height="15" fill="rgb(225,182,9)" fg:x="14642" fg:w="19"/><text x="16.2632%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (19 samples, 0.02%)</title><rect x="16.0132%" y="309" width="0.0208%" height="15" fill="rgb(243,178,37)" fg:x="14642" fg:w="19"/><text x="16.2632%" y="319.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (22 samples, 0.02%)</title><rect x="16.0132%" y="341" width="0.0241%" height="15" fill="rgb(232,139,19)" fg:x="14642" fg:w="22"/><text x="16.2632%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (43 samples, 0.05%)</title><rect x="16.0012%" y="357" width="0.0470%" height="15" fill="rgb(225,201,24)" fg:x="14631" fg:w="43"/><text x="16.2512%" y="367.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer commit] (80 samples, 0.09%)</title><rect x="15.9618%" y="373" width="0.0875%" height="15" fill="rgb(221,47,46)" fg:x="14595" fg:w="80"/><text x="16.2118%" y="383.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (12 samples, 0.01%)</title><rect x="16.0854%" y="293" width="0.0131%" height="15" fill="rgb(249,23,13)" fg:x="14708" fg:w="12"/><text x="16.3354%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (17 samples, 0.02%)</title><rect x="16.0843%" y="309" width="0.0186%" height="15" fill="rgb(219,9,5)" fg:x="14707" fg:w="17"/><text x="16.3343%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (18 samples, 0.02%)</title><rect x="16.0843%" y="325" width="0.0197%" height="15" fill="rgb(254,171,16)" fg:x="14707" fg:w="18"/><text x="16.3343%" y="335.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer dealloc] (27 samples, 0.03%)</title><rect x="16.0799%" y="341" width="0.0295%" height="15" fill="rgb(230,171,20)" fg:x="14703" fg:w="27"/><text x="16.3299%" y="351.50"></text></g><g><title>main`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (34 samples, 0.04%)</title><rect x="16.0799%" y="357" width="0.0372%" height="15" fill="rgb(210,71,41)" fg:x="14703" fg:w="34"/><text x="16.3299%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.02%)</title><rect x="16.1357%" y="341" width="0.0153%" height="15" fill="rgb(206,173,20)" fg:x="14754" fg:w="14"/><text x="16.3857%" y="351.50"></text></g><g><title>main`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (49 samples, 0.05%)</title><rect x="16.1171%" y="357" width="0.0536%" height="15" fill="rgb(233,88,34)" fg:x="14737" fg:w="49"/><text x="16.3671%" y="367.50"></text></g><g><title>IOKit`iokit_user_client_trap (231 samples, 0.25%)</title><rect x="16.1980%" y="261" width="0.2526%" height="15" fill="rgb(223,209,46)" fg:x="14811" fg:w="231"/><text x="16.4480%" y="271.50"></text></g><g><title>CoreFoundation`_CFRelease (242 samples, 0.26%)</title><rect x="16.1893%" y="277" width="0.2647%" height="15" fill="rgb(250,43,18)" fg:x="14803" fg:w="242"/><text x="16.4393%" y="287.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (11 samples, 0.01%)</title><rect x="16.4594%" y="261" width="0.0120%" height="15" fill="rgb(208,13,10)" fg:x="15050" fg:w="11"/><text x="16.7094%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (11 samples, 0.01%)</title><rect x="16.4594%" y="245" width="0.0120%" height="15" fill="rgb(212,200,36)" fg:x="15050" fg:w="11"/><text x="16.7094%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.01%)</title><rect x="16.4715%" y="261" width="0.0142%" height="15" fill="rgb(225,90,30)" fg:x="15061" fg:w="13"/><text x="16.7215%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.01%)</title><rect x="16.4736%" y="245" width="0.0120%" height="15" fill="rgb(236,182,39)" fg:x="15063" fg:w="11"/><text x="16.7236%" y="255.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (26 samples, 0.03%)</title><rect x="16.4594%" y="277" width="0.0284%" height="15" fill="rgb(212,144,35)" fg:x="15050" fg:w="26"/><text x="16.7094%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (293 samples, 0.32%)</title><rect x="16.1838%" y="293" width="0.3204%" height="15" fill="rgb(228,63,44)" fg:x="14798" fg:w="293"/><text x="16.4338%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (12 samples, 0.01%)</title><rect x="16.4911%" y="277" width="0.0131%" height="15" fill="rgb(228,109,6)" fg:x="15079" fg:w="12"/><text x="16.7411%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (310 samples, 0.34%)</title><rect x="16.1740%" y="309" width="0.3390%" height="15" fill="rgb(238,117,24)" fg:x="14789" fg:w="310"/><text x="16.4240%" y="319.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer dealloc] (316 samples, 0.35%)</title><rect x="16.1740%" y="325" width="0.3456%" height="15" fill="rgb(242,26,26)" fg:x="14789" fg:w="316"/><text x="16.4240%" y="335.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBuffer dealloc] (317 samples, 0.35%)</title><rect x="16.1740%" y="341" width="0.3467%" height="15" fill="rgb(221,92,48)" fg:x="14789" fg:w="317"/><text x="16.4240%" y="351.50"></text></g><g><title>main`wgpu_core::device::resource::Device&lt;A&gt;::maintain (423 samples, 0.46%)</title><rect x="16.0745%" y="373" width="0.4626%" height="15" fill="rgb(209,209,32)" fg:x="14698" fg:w="423"/><text x="16.3245%" y="383.50"></text></g><g><title>main`wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (335 samples, 0.37%)</title><rect x="16.1707%" y="357" width="0.3664%" height="15" fill="rgb(221,70,22)" fg:x="14786" fg:w="335"/><text x="16.4207%" y="367.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (10 samples, 0.01%)</title><rect x="16.5404%" y="357" width="0.0109%" height="15" fill="rgb(248,145,5)" fg:x="15124" fg:w="10"/><text x="16.7904%" y="367.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_submit (560 samples, 0.61%)</title><rect x="15.9432%" y="405" width="0.6124%" height="15" fill="rgb(226,116,26)" fg:x="14578" fg:w="560"/><text x="16.1932%" y="415.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_submit (549 samples, 0.60%)</title><rect x="15.9552%" y="389" width="0.6004%" height="15" fill="rgb(244,5,17)" fg:x="14589" fg:w="549"/><text x="16.2052%" y="399.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (14 samples, 0.02%)</title><rect x="16.5404%" y="373" width="0.0153%" height="15" fill="rgb(252,159,33)" fg:x="15124" fg:w="14"/><text x="16.7904%" y="383.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::surface_present (34 samples, 0.04%)</title><rect x="16.5557%" y="405" width="0.0372%" height="15" fill="rgb(206,71,0)" fg:x="15138" fg:w="34"/><text x="16.8057%" y="415.50"></text></g><g><title>main`bevy_ecs::world::entity_ref::EntityWorldMut::move_entity_from_remove (10 samples, 0.01%)</title><rect x="16.6049%" y="405" width="0.0109%" height="15" fill="rgb(233,118,54)" fg:x="15183" fg:w="10"/><text x="16.8549%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.05%)</title><rect x="16.6180%" y="389" width="0.0492%" height="15" fill="rgb(234,83,48)" fg:x="15195" fg:w="45"/><text x="16.8680%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (25 samples, 0.03%)</title><rect x="16.7175%" y="357" width="0.0273%" height="15" fill="rgb(228,3,54)" fg:x="15286" fg:w="25"/><text x="16.9675%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (23 samples, 0.03%)</title><rect x="16.7197%" y="341" width="0.0252%" height="15" fill="rgb(226,155,13)" fg:x="15288" fg:w="23"/><text x="16.9697%" y="351.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="16.7164%" y="373" width="0.0306%" height="15" fill="rgb(241,28,37)" fg:x="15285" fg:w="28"/><text x="16.9664%" y="383.50"></text></g><g><title>main`&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (85 samples, 0.09%)</title><rect x="16.6683%" y="389" width="0.0930%" height="15" fill="rgb(233,93,10)" fg:x="15241" fg:w="85"/><text x="16.9183%" y="399.50"></text></g><g><title>main`bevy_render::render_graph::graph::RenderGraph::update (152 samples, 0.17%)</title><rect x="16.6158%" y="405" width="0.1662%" height="15" fill="rgb(225,113,19)" fg:x="15193" fg:w="152"/><text x="16.8658%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (230 samples, 0.25%)</title><rect x="16.7941%" y="373" width="0.2515%" height="15" fill="rgb(241,2,18)" fg:x="15356" fg:w="230"/><text x="17.0441%" y="383.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (10 samples, 0.01%)</title><rect x="17.0544%" y="341" width="0.0109%" height="15" fill="rgb(228,207,21)" fg:x="15594" fg:w="10"/><text x="17.3044%" y="351.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (12 samples, 0.01%)</title><rect x="17.0806%" y="341" width="0.0131%" height="15" fill="rgb(213,211,35)" fg:x="15618" fg:w="12"/><text x="17.3306%" y="351.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (12 samples, 0.01%)</title><rect x="17.0806%" y="325" width="0.0131%" height="15" fill="rgb(209,83,10)" fg:x="15618" fg:w="12"/><text x="17.3306%" y="335.50"></text></g><g><title>AGXMetalG14X`AGX::DataBufferAllocator&lt;34ul&gt;::initializeDataBuffer (10 samples, 0.01%)</title><rect x="17.1134%" y="261" width="0.0109%" height="15" fill="rgb(209,164,1)" fg:x="15648" fg:w="10"/><text x="17.3634%" y="271.50"></text></g><g><title>AGXMetalG14X`AGX::ContextCommon&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::newCommand (16 samples, 0.02%)</title><rect x="17.1112%" y="277" width="0.0175%" height="15" fill="rgb(213,184,43)" fg:x="15646" fg:w="16"/><text x="17.3612%" y="287.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::beginRenderPass (19 samples, 0.02%)</title><rect x="17.1101%" y="293" width="0.0208%" height="15" fill="rgb(231,61,34)" fg:x="15645" fg:w="19"/><text x="17.3601%" y="303.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (42 samples, 0.05%)</title><rect x="17.0948%" y="309" width="0.0459%" height="15" fill="rgb(235,75,3)" fg:x="15631" fg:w="42"/><text x="17.3448%" y="319.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (52 samples, 0.06%)</title><rect x="17.0948%" y="325" width="0.0569%" height="15" fill="rgb(220,106,47)" fg:x="15631" fg:w="52"/><text x="17.3448%" y="335.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (60 samples, 0.07%)</title><rect x="17.0937%" y="341" width="0.0656%" height="15" fill="rgb(210,196,33)" fg:x="15630" fg:w="60"/><text x="17.3437%" y="351.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (105 samples, 0.11%)</title><rect x="17.0478%" y="373" width="0.1148%" height="15" fill="rgb(229,154,42)" fg:x="15588" fg:w="105"/><text x="17.2978%" y="383.50"></text></g><g><title>main`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (104 samples, 0.11%)</title><rect x="17.0489%" y="357" width="0.1137%" height="15" fill="rgb(228,114,26)" fg:x="15589" fg:w="104"/><text x="17.2989%" y="367.50"></text></g><g><title>IOKit`io_connect_method (155 samples, 0.17%)</title><rect x="17.1801%" y="229" width="0.1695%" height="15" fill="rgb(208,144,1)" fg:x="15709" fg:w="155"/><text x="17.4301%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (155 samples, 0.17%)</title><rect x="17.1801%" y="213" width="0.1695%" height="15" fill="rgb(239,112,37)" fg:x="15709" fg:w="155"/><text x="17.4301%" y="223.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (157 samples, 0.17%)</title><rect x="17.1790%" y="261" width="0.1717%" height="15" fill="rgb(210,96,50)" fg:x="15708" fg:w="157"/><text x="17.4290%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (156 samples, 0.17%)</title><rect x="17.1801%" y="245" width="0.1706%" height="15" fill="rgb(222,178,2)" fg:x="15709" fg:w="156"/><text x="17.4301%" y="255.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (160 samples, 0.17%)</title><rect x="17.1779%" y="277" width="0.1750%" height="15" fill="rgb(226,74,18)" fg:x="15707" fg:w="160"/><text x="17.4279%" y="287.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (162 samples, 0.18%)</title><rect x="17.1769%" y="325" width="0.1772%" height="15" fill="rgb(225,67,54)" fg:x="15706" fg:w="162"/><text x="17.4269%" y="335.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (162 samples, 0.18%)</title><rect x="17.1769%" y="309" width="0.1772%" height="15" fill="rgb(251,92,32)" fg:x="15706" fg:w="162"/><text x="17.4269%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (161 samples, 0.18%)</title><rect x="17.1779%" y="293" width="0.1761%" height="15" fill="rgb(228,149,22)" fg:x="15707" fg:w="161"/><text x="17.4279%" y="303.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (174 samples, 0.19%)</title><rect x="17.1758%" y="357" width="0.1903%" height="15" fill="rgb(243,54,13)" fg:x="15705" fg:w="174"/><text x="17.4258%" y="367.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (173 samples, 0.19%)</title><rect x="17.1769%" y="341" width="0.1892%" height="15" fill="rgb(243,180,28)" fg:x="15706" fg:w="173"/><text x="17.4269%" y="351.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (187 samples, 0.20%)</title><rect x="17.1626%" y="373" width="0.2045%" height="15" fill="rgb(208,167,24)" fg:x="15693" fg:w="187"/><text x="17.4126%" y="383.50"></text></g><g><title>main`&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::run (533 samples, 0.58%)</title><rect x="16.7875%" y="389" width="0.5829%" height="15" fill="rgb(245,73,45)" fg:x="15350" fg:w="533"/><text x="17.0375%" y="399.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (10 samples, 0.01%)</title><rect x="17.4393%" y="325" width="0.0109%" height="15" fill="rgb(237,203,48)" fg:x="15946" fg:w="10"/><text x="17.6893%" y="335.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G14X::VertexProgramVariant const*, AGX::G14X::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14X::Encoders, AGX::G14X::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G14X::Encoders, AGX::G14X::Classes&gt;&amp;, AGX::RenderDirtyBits (10 samples, 0.01%)</title><rect x="17.4393%" y="309" width="0.0109%" height="15" fill="rgb(211,197,16)" fg:x="15946" fg:w="10"/><text x="17.6893%" y="319.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (10 samples, 0.01%)</title><rect x="17.4743%" y="309" width="0.0109%" height="15" fill="rgb(243,99,51)" fg:x="15978" fg:w="10"/><text x="17.7243%" y="319.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (12 samples, 0.01%)</title><rect x="17.4732%" y="325" width="0.0131%" height="15" fill="rgb(215,123,29)" fg:x="15977" fg:w="12"/><text x="17.7232%" y="335.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::beginRenderPass (16 samples, 0.02%)</title><rect x="17.4984%" y="277" width="0.0175%" height="15" fill="rgb(239,186,37)" fg:x="16000" fg:w="16"/><text x="17.7484%" y="287.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (31 samples, 0.03%)</title><rect x="17.4864%" y="293" width="0.0339%" height="15" fill="rgb(252,136,39)" fg:x="15989" fg:w="31"/><text x="17.7364%" y="303.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (34 samples, 0.04%)</title><rect x="17.4864%" y="309" width="0.0372%" height="15" fill="rgb(223,213,32)" fg:x="15989" fg:w="34"/><text x="17.7364%" y="319.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (38 samples, 0.04%)</title><rect x="17.4864%" y="325" width="0.0416%" height="15" fill="rgb(233,115,5)" fg:x="15989" fg:w="38"/><text x="17.7364%" y="335.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (91 samples, 0.10%)</title><rect x="17.4317%" y="357" width="0.0995%" height="15" fill="rgb(207,226,44)" fg:x="15939" fg:w="91"/><text x="17.6817%" y="367.50"></text></g><g><title>main`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (90 samples, 0.10%)</title><rect x="17.4328%" y="341" width="0.0984%" height="15" fill="rgb(208,126,0)" fg:x="15940" fg:w="90"/><text x="17.6828%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (12 samples, 0.01%)</title><rect x="17.5782%" y="261" width="0.0131%" height="15" fill="rgb(244,66,21)" fg:x="16073" fg:w="12"/><text x="17.8282%" y="271.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (17 samples, 0.02%)</title><rect x="17.5749%" y="277" width="0.0186%" height="15" fill="rgb(222,97,12)" fg:x="16070" fg:w="17"/><text x="17.8249%" y="287.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (20 samples, 0.02%)</title><rect x="17.5749%" y="293" width="0.0219%" height="15" fill="rgb(219,213,19)" fg:x="16070" fg:w="20"/><text x="17.8249%" y="303.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (28 samples, 0.03%)</title><rect x="17.5717%" y="309" width="0.0306%" height="15" fill="rgb(252,169,30)" fg:x="16067" fg:w="28"/><text x="17.8217%" y="319.50"></text></g><g><title>AGXMetalG14X`AGX::Framebuffer&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::Framebuffer (20 samples, 0.02%)</title><rect x="17.6274%" y="245" width="0.0219%" height="15" fill="rgb(206,32,51)" fg:x="16118" fg:w="20"/><text x="17.8774%" y="255.50"></text></g><g><title>AGXMetalG14X`AGX::FramebufferGen3_3&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::FramebufferGen3_3 (22 samples, 0.02%)</title><rect x="17.6263%" y="261" width="0.0241%" height="15" fill="rgb(250,172,42)" fg:x="16117" fg:w="22"/><text x="17.8763%" y="271.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::beginRenderPass (22 samples, 0.02%)</title><rect x="17.6504%" y="261" width="0.0241%" height="15" fill="rgb(209,34,43)" fg:x="16139" fg:w="22"/><text x="17.9004%" y="271.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (71 samples, 0.08%)</title><rect x="17.6034%" y="277" width="0.0776%" height="15" fill="rgb(223,11,35)" fg:x="16096" fg:w="71"/><text x="17.8534%" y="287.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (91 samples, 0.10%)</title><rect x="17.6023%" y="293" width="0.0995%" height="15" fill="rgb(251,219,26)" fg:x="16095" fg:w="91"/><text x="17.8523%" y="303.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (100 samples, 0.11%)</title><rect x="17.6023%" y="309" width="0.1094%" height="15" fill="rgb(231,119,3)" fg:x="16095" fg:w="100"/><text x="17.8523%" y="319.50"></text></g><g><title>main`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (154 samples, 0.17%)</title><rect x="17.5443%" y="325" width="0.1684%" height="15" fill="rgb(216,97,11)" fg:x="16042" fg:w="154"/><text x="17.7943%" y="335.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (159 samples, 0.17%)</title><rect x="17.5410%" y="341" width="0.1739%" height="15" fill="rgb(223,59,9)" fg:x="16039" fg:w="159"/><text x="17.7910%" y="351.50"></text></g><g><title>main`&lt;bevy_render::render_graph::node::ViewNodeRunner&lt;T&gt; as bevy_render::render_graph::node::Node&gt;::run (269 samples, 0.29%)</title><rect x="17.4229%" y="373" width="0.2942%" height="15" fill="rgb(233,93,31)" fg:x="15931" fg:w="269"/><text x="17.6729%" y="383.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (162 samples, 0.18%)</title><rect x="17.5399%" y="357" width="0.1772%" height="15" fill="rgb(239,81,33)" fg:x="16038" fg:w="162"/><text x="17.7899%" y="367.50"></text></g><g><title>main`bevy_render::render_graph::graph::RenderGraph::get_node_state (22 samples, 0.02%)</title><rect x="17.7237%" y="373" width="0.0241%" height="15" fill="rgb(213,120,34)" fg:x="16206" fg:w="22"/><text x="17.9737%" y="383.50"></text></g><g><title>main`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (342 samples, 0.37%)</title><rect x="17.3868%" y="389" width="0.3740%" height="15" fill="rgb(243,49,53)" fg:x="15898" fg:w="342"/><text x="17.6368%" y="399.50"></text></g><g><title>main`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (897 samples, 0.98%)</title><rect x="16.7820%" y="405" width="0.9810%" height="15" fill="rgb(247,216,33)" fg:x="15345" fg:w="897"/><text x="17.0320%" y="415.50"></text></g><g><title>main`bevy_render::renderer::render_system (1,686 samples, 1.84%)</title><rect x="15.9345%" y="421" width="1.8439%" height="15" fill="rgb(226,26,14)" fg:x="14570" fg:w="1686"/><text x="16.1845%" y="431.50">m..</text></g><g><title>main`core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="17.7795%" y="421" width="0.0131%" height="15" fill="rgb(215,49,53)" fg:x="16257" fg:w="12"/><text x="18.0295%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (42 samples, 0.05%)</title><rect x="17.7937%" y="405" width="0.0459%" height="15" fill="rgb(245,162,40)" fg:x="16270" fg:w="42"/><text x="18.0437%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`madvise (42 samples, 0.05%)</title><rect x="17.7937%" y="389" width="0.0459%" height="15" fill="rgb(229,68,17)" fg:x="16270" fg:w="42"/><text x="18.0437%" y="399.50"></text></g><g><title>main`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (1,869 samples, 2.04%)</title><rect x="15.7967%" y="437" width="2.0440%" height="15" fill="rgb(213,182,10)" fg:x="14444" fg:w="1869"/><text x="16.0467%" y="447.50">m..</text></g><g><title>main`core::ptr::drop_in_place&lt;bevy_render::render_resource::storage_buffer::StorageBuffer&lt;bevy_pbr::render::light::GpuClusterOffsetsAndCountsStorage&gt;&gt; (43 samples, 0.05%)</title><rect x="17.7937%" y="421" width="0.0470%" height="15" fill="rgb(245,125,30)" fg:x="16270" fg:w="43"/><text x="18.0437%" y="431.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (11 samples, 0.01%)</title><rect x="17.8407%" y="437" width="0.0120%" height="15" fill="rgb(232,202,2)" fg:x="16313" fg:w="11"/><text x="18.0907%" y="447.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (12 samples, 0.01%)</title><rect x="17.8615%" y="389" width="0.0131%" height="15" fill="rgb(237,140,51)" fg:x="16332" fg:w="12"/><text x="18.1115%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (48 samples, 0.05%)</title><rect x="17.8877%" y="357" width="0.0525%" height="15" fill="rgb(236,157,25)" fg:x="16356" fg:w="48"/><text x="18.1377%" y="367.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (83 samples, 0.09%)</title><rect x="17.8527%" y="437" width="0.0908%" height="15" fill="rgb(219,209,0)" fg:x="16324" fg:w="83"/><text x="18.1027%" y="447.50"></text></g><g><title>main`event_listener::Event::notify_additional (83 samples, 0.09%)</title><rect x="17.8527%" y="421" width="0.0908%" height="15" fill="rgb(240,116,54)" fg:x="16324" fg:w="83"/><text x="18.1027%" y="431.50"></text></g><g><title>main`event_listener::List::notify_additional (76 samples, 0.08%)</title><rect x="17.8604%" y="405" width="0.0831%" height="15" fill="rgb(216,10,36)" fg:x="16331" fg:w="76"/><text x="18.1104%" y="415.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (63 samples, 0.07%)</title><rect x="17.8746%" y="389" width="0.0689%" height="15" fill="rgb(222,72,44)" fg:x="16344" fg:w="63"/><text x="18.1246%" y="399.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (51 samples, 0.06%)</title><rect x="17.8877%" y="373" width="0.0558%" height="15" fill="rgb(232,159,9)" fg:x="16356" fg:w="51"/><text x="18.1377%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="17.9752%" y="389" width="0.0142%" height="15" fill="rgb(210,39,32)" fg:x="16436" fg:w="13"/><text x="18.2252%" y="399.50"></text></g><g><title>main`bevy_ecs::storage::table::Table::move_to_superset_unchecked (36 samples, 0.04%)</title><rect x="18.0047%" y="389" width="0.0394%" height="15" fill="rgb(216,194,45)" fg:x="16463" fg:w="36"/><text x="18.2547%" y="399.50"></text></g><g><title>main`bevy_ecs::storage::table::Table::allocate (19 samples, 0.02%)</title><rect x="18.0233%" y="373" width="0.0208%" height="15" fill="rgb(218,18,35)" fg:x="16480" fg:w="19"/><text x="18.2733%" y="383.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (92 samples, 0.10%)</title><rect x="17.9457%" y="421" width="0.1006%" height="15" fill="rgb(207,83,51)" fg:x="16409" fg:w="92"/><text x="18.1957%" y="431.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once (81 samples, 0.09%)</title><rect x="17.9577%" y="405" width="0.0886%" height="15" fill="rgb(225,63,43)" fg:x="16420" fg:w="81"/><text x="18.2077%" y="415.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::apply_deferred (97 samples, 0.11%)</title><rect x="17.9446%" y="437" width="0.1061%" height="15" fill="rgb(207,57,36)" fg:x="16408" fg:w="97"/><text x="18.1946%" y="447.50"></text></g><g><title>main`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (2,067 samples, 2.26%)</title><rect x="15.7923%" y="453" width="2.2606%" height="15" fill="rgb(216,99,33)" fg:x="14440" fg:w="2067"/><text x="16.0423%" y="463.50">m..</text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (2,088 samples, 2.28%)</title><rect x="15.7704%" y="469" width="2.2835%" height="15" fill="rgb(225,42,16)" fg:x="14420" fg:w="2088"/><text x="16.0204%" y="479.50">m..</text></g><g><title>main`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.05%)</title><rect x="18.0561%" y="453" width="0.0514%" height="15" fill="rgb(220,201,45)" fg:x="16510" fg:w="47"/><text x="18.3061%" y="463.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (50 samples, 0.05%)</title><rect x="18.0540%" y="469" width="0.0547%" height="15" fill="rgb(225,33,4)" fg:x="16508" fg:w="50"/><text x="18.3040%" y="479.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (2,165 samples, 2.37%)</title><rect x="15.7431%" y="485" width="2.3678%" height="15" fill="rgb(224,33,50)" fg:x="14395" fg:w="2165"/><text x="15.9931%" y="495.50">ma..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (200 samples, 0.22%)</title><rect x="18.1174%" y="469" width="0.2187%" height="15" fill="rgb(246,198,51)" fg:x="16566" fg:w="200"/><text x="18.3674%" y="479.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (2,392 samples, 2.62%)</title><rect x="15.7234%" y="501" width="2.6160%" height="15" fill="rgb(205,22,4)" fg:x="14377" fg:w="2392"/><text x="15.9734%" y="511.50">ma..</text></g><g><title>main`parking::Parker::park (205 samples, 0.22%)</title><rect x="18.1152%" y="485" width="0.2242%" height="15" fill="rgb(206,3,8)" fg:x="16564" fg:w="205"/><text x="18.3652%" y="495.50"></text></g><g><title>main`bevy_ecs::world::World::schedule_scope (2,403 samples, 2.63%)</title><rect x="15.7179%" y="517" width="2.6280%" height="15" fill="rgb(251,23,15)" fg:x="14372" fg:w="2403"/><text x="15.9679%" y="527.50">ma..</text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (11 samples, 0.01%)</title><rect x="18.3766%" y="453" width="0.0120%" height="15" fill="rgb(252,88,28)" fg:x="16803" fg:w="11"/><text x="18.6266%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (12 samples, 0.01%)</title><rect x="18.3766%" y="469" width="0.0131%" height="15" fill="rgb(212,127,14)" fg:x="16803" fg:w="12"/><text x="18.6266%" y="479.50"></text></g><g><title>main`async_executor::Ticker::sleep (21 samples, 0.02%)</title><rect x="18.3733%" y="485" width="0.0230%" height="15" fill="rgb(247,145,37)" fg:x="16800" fg:w="21"/><text x="18.6233%" y="495.50"></text></g><g><title>main`async_executor::Runner::runnable::_{{closure}} (51 samples, 0.06%)</title><rect x="18.3624%" y="501" width="0.0558%" height="15" fill="rgb(209,117,53)" fg:x="16790" fg:w="51"/><text x="18.6124%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (12 samples, 0.01%)</title><rect x="18.4455%" y="485" width="0.0131%" height="15" fill="rgb(212,90,42)" fg:x="16866" fg:w="12"/><text x="18.6955%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (12 samples, 0.01%)</title><rect x="18.4455%" y="469" width="0.0131%" height="15" fill="rgb(218,164,37)" fg:x="16866" fg:w="12"/><text x="18.6955%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (52 samples, 0.06%)</title><rect x="18.4619%" y="469" width="0.0569%" height="15" fill="rgb(246,65,34)" fg:x="16881" fg:w="52"/><text x="18.7119%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (52 samples, 0.06%)</title><rect x="18.4619%" y="453" width="0.0569%" height="15" fill="rgb(231,100,33)" fg:x="16881" fg:w="52"/><text x="18.7119%" y="463.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.06%)</title><rect x="18.4597%" y="485" width="0.0602%" height="15" fill="rgb(228,126,14)" fg:x="16879" fg:w="55"/><text x="18.7097%" y="495.50"></text></g><g><title>main`async_executor::Runner::runnable::_{{closure}} (10 samples, 0.01%)</title><rect x="18.5756%" y="421" width="0.0109%" height="15" fill="rgb(215,173,21)" fg:x="16985" fg:w="10"/><text x="18.8256%" y="431.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (26 samples, 0.03%)</title><rect x="18.5866%" y="421" width="0.0284%" height="15" fill="rgb(210,6,40)" fg:x="16995" fg:w="26"/><text x="18.8366%" y="431.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (75 samples, 0.08%)</title><rect x="18.5384%" y="469" width="0.0820%" height="15" fill="rgb(212,48,18)" fg:x="16951" fg:w="75"/><text x="18.7884%" y="479.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (63 samples, 0.07%)</title><rect x="18.5516%" y="453" width="0.0689%" height="15" fill="rgb(230,214,11)" fg:x="16963" fg:w="63"/><text x="18.8016%" y="463.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (44 samples, 0.05%)</title><rect x="18.5724%" y="437" width="0.0481%" height="15" fill="rgb(254,105,39)" fg:x="16982" fg:w="44"/><text x="18.8224%" y="447.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (13 samples, 0.01%)</title><rect x="18.6259%" y="469" width="0.0142%" height="15" fill="rgb(245,158,5)" fg:x="17031" fg:w="13"/><text x="18.8759%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (11 samples, 0.01%)</title><rect x="18.6413%" y="453" width="0.0120%" height="15" fill="rgb(249,208,11)" fg:x="17045" fg:w="11"/><text x="18.8913%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (11 samples, 0.01%)</title><rect x="18.6413%" y="437" width="0.0120%" height="15" fill="rgb(210,39,28)" fg:x="17045" fg:w="11"/><text x="18.8913%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (29 samples, 0.03%)</title><rect x="18.6533%" y="453" width="0.0317%" height="15" fill="rgb(211,56,53)" fg:x="17056" fg:w="29"/><text x="18.9033%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (29 samples, 0.03%)</title><rect x="18.6533%" y="437" width="0.0317%" height="15" fill="rgb(226,201,30)" fg:x="17056" fg:w="29"/><text x="18.9033%" y="447.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (11 samples, 0.01%)</title><rect x="18.6883%" y="453" width="0.0120%" height="15" fill="rgb(239,101,34)" fg:x="17088" fg:w="11"/><text x="18.9383%" y="463.50"></text></g><g><title>main`async_executor::Executor::spawn (65 samples, 0.07%)</title><rect x="18.6402%" y="469" width="0.0711%" height="15" fill="rgb(226,209,5)" fg:x="17044" fg:w="65"/><text x="18.8902%" y="479.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (10 samples, 0.01%)</title><rect x="18.7003%" y="453" width="0.0109%" height="15" fill="rgb(250,105,47)" fg:x="17099" fg:w="10"/><text x="18.9503%" y="463.50"></text></g><g><title>main`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (173 samples, 0.19%)</title><rect x="18.5264%" y="485" width="0.1892%" height="15" fill="rgb(230,72,3)" fg:x="16940" fg:w="173"/><text x="18.7764%" y="495.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (282 samples, 0.31%)</title><rect x="18.4225%" y="501" width="0.3084%" height="15" fill="rgb(232,218,39)" fg:x="16845" fg:w="282"/><text x="18.6725%" y="511.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (364 samples, 0.40%)</title><rect x="18.3460%" y="517" width="0.3981%" height="15" fill="rgb(248,166,6)" fg:x="16775" fg:w="364"/><text x="18.5960%" y="527.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (27 samples, 0.03%)</title><rect x="18.7441%" y="517" width="0.0295%" height="15" fill="rgb(247,89,20)" fg:x="17139" fg:w="27"/><text x="18.9941%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,658 samples, 1.81%)</title><rect x="18.8250%" y="501" width="1.8133%" height="15" fill="rgb(248,130,54)" fg:x="17213" fg:w="1658"/><text x="19.0750%" y="511.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (24 samples, 0.03%)</title><rect x="20.6383%" y="501" width="0.0262%" height="15" fill="rgb(234,196,4)" fg:x="18871" fg:w="24"/><text x="20.8883%" y="511.50"></text></g><g><title>main`parking::Parker::park (1,729 samples, 1.89%)</title><rect x="18.7780%" y="517" width="1.8909%" height="15" fill="rgb(250,143,31)" fg:x="17170" fg:w="1729"/><text x="19.0280%" y="527.50">m..</text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,D&gt; as ndarray_stats::quantile::QuantileExt&lt;A,S,D&gt;&gt;::max_skipnan (481 samples, 0.53%)</title><rect x="20.6733%" y="501" width="0.5260%" height="15" fill="rgb(211,110,34)" fg:x="18903" fg:w="481"/><text x="20.9233%" y="511.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::prediction::calculate_system_prediction (447 samples, 0.49%)</title><rect x="21.2091%" y="501" width="0.4889%" height="15" fill="rgb(215,124,48)" fg:x="19393" fg:w="447"/><text x="21.4591%" y="511.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (31 samples, 0.03%)</title><rect x="21.6641%" y="485" width="0.0339%" height="15" fill="rgb(216,46,13)" fg:x="19809" fg:w="31"/><text x="21.9141%" y="495.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (31 samples, 0.03%)</title><rect x="21.6641%" y="469" width="0.0339%" height="15" fill="rgb(205,184,25)" fg:x="19809" fg:w="31"/><text x="21.9141%" y="479.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (31 samples, 0.03%)</title><rect x="21.6641%" y="453" width="0.0339%" height="15" fill="rgb(228,1,10)" fg:x="19809" fg:w="31"/><text x="21.9141%" y="463.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (31 samples, 0.03%)</title><rect x="21.6641%" y="437" width="0.0339%" height="15" fill="rgb(213,116,27)" fg:x="19809" fg:w="31"/><text x="21.9141%" y="447.50"></text></g><g><title> 1]&gt;&gt;&gt;::dot_generic (31 samples, 0.03%)</title><rect x="21.6641%" y="421" width="0.0339%" height="15" fill="rgb(241,95,50)" fg:x="19809" fg:w="31"/><text x="21.9141%" y="431.50"></text></g><g><title>main`rusty_cde::core::algorithm::metrics::predict_voxeltype (238 samples, 0.26%)</title><rect x="21.6980%" y="501" width="0.2603%" height="15" fill="rgb(238,48,32)" fg:x="19840" fg:w="238"/><text x="21.9480%" y="511.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,D&gt; as ndarray_stats::quantile::QuantileExt&lt;A,S,D&gt;&gt;::max_skipnan (5,111 samples, 5.59%)</title><rect x="24.5218%" y="485" width="5.5896%" height="15" fill="rgb(235,113,49)" fg:x="22422" fg:w="5111"/><text x="24.7718%" y="495.50">main`&lt;n..</text></g><g><title>main`ndarray::numeric::impl_numeric::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::sum (526 samples, 0.58%)</title><rect x="30.1125%" y="485" width="0.5753%" height="15" fill="rgb(205,127,43)" fg:x="27534" fg:w="526"/><text x="30.3625%" y="495.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2),D&gt;::map_collect_owned (521 samples, 0.57%)</title><rect x="30.6878%" y="485" width="0.5698%" height="15" fill="rgb(250,162,2)" fg:x="28060" fg:w="521"/><text x="30.9378%" y="495.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_post_update_residuals (311 samples, 0.34%)</title><rect x="31.2576%" y="485" width="0.3401%" height="15" fill="rgb(220,13,41)" fg:x="28581" fg:w="311"/><text x="31.5076%" y="495.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (311 samples, 0.34%)</title><rect x="31.2576%" y="469" width="0.3401%" height="15" fill="rgb(249,221,25)" fg:x="28581" fg:w="311"/><text x="31.5076%" y="479.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (311 samples, 0.34%)</title><rect x="31.2576%" y="453" width="0.3401%" height="15" fill="rgb(215,208,19)" fg:x="28581" fg:w="311"/><text x="31.5076%" y="463.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (311 samples, 0.34%)</title><rect x="31.2576%" y="437" width="0.3401%" height="15" fill="rgb(236,175,2)" fg:x="28581" fg:w="311"/><text x="31.5076%" y="447.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (311 samples, 0.34%)</title><rect x="31.2576%" y="421" width="0.3401%" height="15" fill="rgb(241,52,2)" fg:x="28581" fg:w="311"/><text x="31.5076%" y="431.50"></text></g><g><title> 1]&gt;&gt;&gt;::dot_generic (311 samples, 0.34%)</title><rect x="31.2576%" y="405" width="0.3401%" height="15" fill="rgb(248,140,14)" fg:x="28581" fg:w="311"/><text x="31.5076%" y="415.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_residuals (19 samples, 0.02%)</title><rect x="31.5977%" y="485" width="0.0208%" height="15" fill="rgb(253,22,42)" fg:x="28892" fg:w="19"/><text x="31.8477%" y="495.50"></text></g><g><title>main`ndarray::impl_ops::arithmetic_ops::_&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (14 samples, 0.02%)</title><rect x="31.6032%" y="469" width="0.0153%" height="15" fill="rgb(234,61,47)" fg:x="28897" fg:w="14"/><text x="31.8532%" y="479.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2),D&gt;::map_collect_owned (14 samples, 0.02%)</title><rect x="31.6032%" y="453" width="0.0153%" height="15" fill="rgb(208,226,15)" fg:x="28897" fg:w="14"/><text x="31.8532%" y="463.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::prediction::calculate_system_prediction (4,487 samples, 4.91%)</title><rect x="31.6185%" y="485" width="4.9072%" height="15" fill="rgb(217,221,4)" fg:x="28911" fg:w="4487"/><text x="31.8685%" y="495.50">main`r..</text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (337 samples, 0.37%)</title><rect x="36.1571%" y="469" width="0.3686%" height="15" fill="rgb(212,174,34)" fg:x="33061" fg:w="337"/><text x="36.4071%" y="479.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (337 samples, 0.37%)</title><rect x="36.1571%" y="453" width="0.3686%" height="15" fill="rgb(253,83,4)" fg:x="33061" fg:w="337"/><text x="36.4071%" y="463.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (337 samples, 0.37%)</title><rect x="36.1571%" y="437" width="0.3686%" height="15" fill="rgb(250,195,49)" fg:x="33061" fg:w="337"/><text x="36.4071%" y="447.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (336 samples, 0.37%)</title><rect x="36.1582%" y="421" width="0.3675%" height="15" fill="rgb(241,192,25)" fg:x="33062" fg:w="336"/><text x="36.4082%" y="431.50"></text></g><g><title> 1]&gt;&gt;&gt;::dot_generic (336 samples, 0.37%)</title><rect x="36.1582%" y="405" width="0.3675%" height="15" fill="rgb(208,124,10)" fg:x="33062" fg:w="336"/><text x="36.4082%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (13 samples, 0.01%)</title><rect x="36.5268%" y="469" width="0.0142%" height="15" fill="rgb(222,33,0)" fg:x="33399" fg:w="13"/><text x="36.7768%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (13 samples, 0.01%)</title><rect x="36.5268%" y="453" width="0.0142%" height="15" fill="rgb(234,209,28)" fg:x="33399" fg:w="13"/><text x="36.7768%" y="463.50"></text></g><g><title>main`rusty_cde::core::algorithm::metrics::Metrics::calculate_step (469 samples, 0.51%)</title><rect x="36.5257%" y="485" width="0.5129%" height="15" fill="rgb(224,11,23)" fg:x="33398" fg:w="469"/><text x="36.7757%" y="495.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (454 samples, 0.50%)</title><rect x="36.5421%" y="469" width="0.4965%" height="15" fill="rgb(232,99,1)" fg:x="33413" fg:w="454"/><text x="36.7921%" y="479.50"></text></g><g><title>main`rusty_cde::core::algorithm::refinement::derivation::Derivatives::calculate (19,044 samples, 20.83%)</title><rect x="37.0386%" y="485" width="20.8275%" height="15" fill="rgb(237,95,45)" fg:x="33867" fg:w="19044"/><text x="37.2886%" y="495.50">main`rusty_cde::core::algorithm::..</text></g><g><title>main`ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (1,302 samples, 1.42%)</title><rect x="56.4421%" y="469" width="1.4239%" height="15" fill="rgb(208,109,11)" fg:x="51609" fg:w="1302"/><text x="56.6921%" y="479.50"></text></g><g><title> 1]&gt;&gt;&gt;::dot_generic (1,302 samples, 1.42%)</title><rect x="56.4421%" y="453" width="1.4239%" height="15" fill="rgb(216,190,48)" fg:x="51609" fg:w="1302"/><text x="56.6921%" y="463.50"></text></g><g><title>main`rusty_cde::core::algorithm::run_epoch (32,837 samples, 35.91%)</title><rect x="21.9583%" y="501" width="35.9122%" height="15" fill="rgb(251,171,36)" fg:x="20078" fg:w="32837"/><text x="22.2083%" y="511.50">main`rusty_cde::core::algorithm::run_epoch</text></g><g><title>main`rusty_cde::core::model::Model::from_model_config (79 samples, 0.09%)</title><rect x="57.8704%" y="501" width="0.0864%" height="15" fill="rgb(230,62,22)" fg:x="52915" fg:w="79"/><text x="58.1204%" y="511.50"></text></g><g><title>main`rusty_cde::core::model::functional::kalman::Gain::from_model_config (53 samples, 0.06%)</title><rect x="57.8989%" y="485" width="0.0580%" height="15" fill="rgb(225,114,35)" fg:x="52941" fg:w="53"/><text x="58.1489%" y="495.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (53 samples, 0.06%)</title><rect x="57.8989%" y="469" width="0.0580%" height="15" fill="rgb(215,118,42)" fg:x="52941" fg:w="53"/><text x="58.1489%" y="479.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (53 samples, 0.06%)</title><rect x="57.8989%" y="453" width="0.0580%" height="15" fill="rgb(243,119,21)" fg:x="52941" fg:w="53"/><text x="58.1489%" y="463.50"></text></g><g><title> 2]&gt;&gt;&gt;&gt;::dot (53 samples, 0.06%)</title><rect x="57.8989%" y="437" width="0.0580%" height="15" fill="rgb(252,177,53)" fg:x="52941" fg:w="53"/><text x="58.1489%" y="447.50"></text></g><g><title>main`matrixmultiply::gemm::gemm_loop (53 samples, 0.06%)</title><rect x="57.8989%" y="421" width="0.0580%" height="15" fill="rgb(237,209,29)" fg:x="52941" fg:w="53"/><text x="58.1489%" y="431.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (55 samples, 0.06%)</title><rect x="57.9634%" y="469" width="0.0602%" height="15" fill="rgb(212,65,23)" fg:x="53000" fg:w="55"/><text x="58.2134%" y="479.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (55 samples, 0.06%)</title><rect x="57.9634%" y="453" width="0.0602%" height="15" fill="rgb(230,222,46)" fg:x="53000" fg:w="55"/><text x="58.2134%" y="463.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (54 samples, 0.06%)</title><rect x="57.9645%" y="437" width="0.0591%" height="15" fill="rgb(215,135,32)" fg:x="53001" fg:w="54"/><text x="58.2145%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`write (54 samples, 0.06%)</title><rect x="57.9645%" y="421" width="0.0591%" height="15" fill="rgb(246,101,22)" fg:x="53001" fg:w="54"/><text x="58.2145%" y="431.50"></text></g><g><title>main`ciborium_ll::hdr::_&lt;impl core::convert::From&lt;ciborium_ll::hdr::Header&gt; for ciborium_ll::Title&gt;::from (43 samples, 0.05%)</title><rect x="58.0312%" y="421" width="0.0470%" height="15" fill="rgb(206,107,13)" fg:x="53062" fg:w="43"/><text x="58.2812%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`write (14,705 samples, 16.08%)</title><rect x="58.0903%" y="405" width="16.0821%" height="15" fill="rgb(250,100,44)" fg:x="53116" fg:w="14705"/><text x="58.3403%" y="415.50">libsystem_kernel.dylib`wr..</text></g><g><title>main`DYLD-STUB$$write (52 samples, 0.06%)</title><rect x="74.1724%" y="405" width="0.0569%" height="15" fill="rgb(231,147,38)" fg:x="67821" fg:w="52"/><text x="74.4224%" y="415.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (14,772 samples, 16.16%)</title><rect x="58.0782%" y="421" width="16.1554%" height="15" fill="rgb(229,8,40)" fg:x="53105" fg:w="14772"/><text x="58.3282%" y="431.50">main`serde::ser::impls::_..</text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (14,830 samples, 16.22%)</title><rect x="58.0236%" y="437" width="16.2188%" height="15" fill="rgb(221,135,30)" fg:x="53055" fg:w="14830"/><text x="58.2736%" y="447.50">main`&lt;ndarray::array_serd..</text></g><g><title>main`rusty_cde::core::data::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::data::shapes::ArrayMeasurements&gt;::serialize (14,834 samples, 16.22%)</title><rect x="58.0236%" y="469" width="16.2232%" height="15" fill="rgb(249,193,18)" fg:x="53055" fg:w="14834"/><text x="58.2736%" y="479.50">main`rusty_cde::core::dat..</text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (14,834 samples, 16.22%)</title><rect x="58.0236%" y="453" width="16.2232%" height="15" fill="rgb(209,133,39)" fg:x="53055" fg:w="14834"/><text x="58.2736%" y="463.50">main`ndarray::array_serde..</text></g><g><title>libsystem_kernel.dylib`write (2,413 samples, 2.64%)</title><rect x="74.2522%" y="405" width="2.6390%" height="15" fill="rgb(232,100,14)" fg:x="67894" fg:w="2413"/><text x="74.5022%" y="415.50">li..</text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (2,426 samples, 2.65%)</title><rect x="74.2489%" y="421" width="2.6532%" height="15" fill="rgb(224,185,1)" fg:x="67891" fg:w="2426"/><text x="74.4989%" y="431.50">ma..</text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (2,429 samples, 2.66%)</title><rect x="74.2467%" y="437" width="2.6565%" height="15" fill="rgb(223,139,8)" fg:x="67889" fg:w="2429"/><text x="74.4967%" y="447.50">ma..</text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17,327 samples, 18.95%)</title><rect x="57.9568%" y="485" width="18.9497%" height="15" fill="rgb(232,213,38)" fg:x="52994" fg:w="17327"/><text x="58.2068%" y="495.50">main`&lt;ciborium::ser::Collectio..</text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (2,432 samples, 2.66%)</title><rect x="74.2467%" y="469" width="2.6598%" height="15" fill="rgb(207,94,22)" fg:x="67889" fg:w="2432"/><text x="74.4967%" y="479.50">ma..</text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (2,432 samples, 2.66%)</title><rect x="74.2467%" y="453" width="2.6598%" height="15" fill="rgb(219,183,54)" fg:x="67889" fg:w="2432"/><text x="74.4967%" y="463.50">ma..</text></g><g><title>libsystem_kernel.dylib`write (1,696 samples, 1.85%)</title><rect x="76.9295%" y="405" width="1.8548%" height="15" fill="rgb(216,185,54)" fg:x="70342" fg:w="1696"/><text x="77.1795%" y="415.50">l..</text></g><g><title>main`rusty_cde::core::algorithm::refinement::derivation::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::algorithm::refinement::derivation::Derivatives&gt;::serialize (1,725 samples, 1.89%)</title><rect x="76.9076%" y="485" width="1.8865%" height="15" fill="rgb(254,217,39)" fg:x="70322" fg:w="1725"/><text x="77.1576%" y="495.50">m..</text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (1,711 samples, 1.87%)</title><rect x="76.9229%" y="469" width="1.8712%" height="15" fill="rgb(240,178,23)" fg:x="70336" fg:w="1711"/><text x="77.1729%" y="479.50">m..</text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (1,711 samples, 1.87%)</title><rect x="76.9229%" y="453" width="1.8712%" height="15" fill="rgb(218,11,47)" fg:x="70336" fg:w="1711"/><text x="77.1729%" y="463.50">m..</text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (1,711 samples, 1.87%)</title><rect x="76.9229%" y="437" width="1.8712%" height="15" fill="rgb(218,51,51)" fg:x="70336" fg:w="1711"/><text x="77.1729%" y="447.50">m..</text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (1,706 samples, 1.87%)</title><rect x="76.9284%" y="421" width="1.8658%" height="15" fill="rgb(238,126,27)" fg:x="70341" fg:w="1706"/><text x="77.1784%" y="431.50">m..</text></g><g><title>main`ciborium_ll::hdr::_&lt;impl core::convert::From&lt;ciborium_ll::hdr::Header&gt; for ciborium_ll::Title&gt;::from (48 samples, 0.05%)</title><rect x="78.7996%" y="437" width="0.0525%" height="15" fill="rgb(249,202,22)" fg:x="72052" fg:w="48"/><text x="79.0496%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`write (14,488 samples, 15.84%)</title><rect x="78.8762%" y="421" width="15.8448%" height="15" fill="rgb(254,195,49)" fg:x="72122" fg:w="14488"/><text x="79.1262%" y="431.50">libsystem_kernel.dylib`w..</text></g><g><title>main`DYLD-STUB$$write (55 samples, 0.06%)</title><rect x="94.7210%" y="421" width="0.0602%" height="15" fill="rgb(208,123,14)" fg:x="86610" fg:w="55"/><text x="94.9710%" y="431.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (14,578 samples, 15.94%)</title><rect x="78.8521%" y="437" width="15.9432%" height="15" fill="rgb(224,200,8)" fg:x="72100" fg:w="14578"/><text x="79.1021%" y="447.50">main`serde::ser::impls::_..</text></g><g><title>main`std::io::Write::write_all (13 samples, 0.01%)</title><rect x="94.7811%" y="421" width="0.0142%" height="15" fill="rgb(217,61,36)" fg:x="86665" fg:w="13"/><text x="95.0311%" y="431.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (14,646 samples, 16.02%)</title><rect x="78.7941%" y="453" width="16.0176%" height="15" fill="rgb(206,35,45)" fg:x="72047" fg:w="14646"/><text x="79.0441%" y="463.50">main`&lt;ndarray::array_serd..</text></g><g><title>main`std::io::Write::write_all (15 samples, 0.02%)</title><rect x="94.7953%" y="437" width="0.0164%" height="15" fill="rgb(217,65,33)" fg:x="86678" fg:w="15"/><text x="95.0453%" y="447.50"></text></g><g><title>main`rusty_cde::core::data::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::data::shapes::ArrayMeasurements&gt;::serialize (14,652 samples, 16.02%)</title><rect x="78.7941%" y="485" width="16.0241%" height="15" fill="rgb(222,158,48)" fg:x="72047" fg:w="14652"/><text x="79.0441%" y="495.50">main`rusty_cde::core::dat..</text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (14,652 samples, 16.02%)</title><rect x="78.7941%" y="469" width="16.0241%" height="15" fill="rgb(254,2,54)" fg:x="72047" fg:w="14652"/><text x="79.0441%" y="479.50">main`ndarray::array_serde..</text></g><g><title>libsystem_kernel.dylib`write (734 samples, 0.80%)</title><rect x="94.8249%" y="373" width="0.8027%" height="15" fill="rgb(250,143,38)" fg:x="86705" fg:w="734"/><text x="95.0749%" y="383.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (737 samples, 0.81%)</title><rect x="94.8238%" y="389" width="0.8060%" height="15" fill="rgb(248,25,0)" fg:x="86704" fg:w="737"/><text x="95.0738%" y="399.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (743 samples, 0.81%)</title><rect x="94.8183%" y="437" width="0.8126%" height="15" fill="rgb(206,152,27)" fg:x="86699" fg:w="743"/><text x="95.0683%" y="447.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (743 samples, 0.81%)</title><rect x="94.8183%" y="421" width="0.8126%" height="15" fill="rgb(240,77,30)" fg:x="86699" fg:w="743"/><text x="95.0683%" y="431.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (743 samples, 0.81%)</title><rect x="94.8183%" y="405" width="0.8126%" height="15" fill="rgb(231,5,3)" fg:x="86699" fg:w="743"/><text x="95.0683%" y="415.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (756 samples, 0.83%)</title><rect x="94.8183%" y="453" width="0.8268%" height="15" fill="rgb(207,226,32)" fg:x="86699" fg:w="756"/><text x="95.0683%" y="463.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (13 samples, 0.01%)</title><rect x="95.6309%" y="437" width="0.0142%" height="15" fill="rgb(222,207,47)" fg:x="87442" fg:w="13"/><text x="95.8809%" y="447.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (13 samples, 0.01%)</title><rect x="95.6309%" y="421" width="0.0142%" height="15" fill="rgb(229,115,45)" fg:x="87442" fg:w="13"/><text x="95.8809%" y="431.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (13 samples, 0.01%)</title><rect x="95.6309%" y="405" width="0.0142%" height="15" fill="rgb(224,191,6)" fg:x="87442" fg:w="13"/><text x="95.8809%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`write (13 samples, 0.01%)</title><rect x="95.6309%" y="389" width="0.0142%" height="15" fill="rgb(230,227,24)" fg:x="87442" fg:w="13"/><text x="95.8809%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`write (61 samples, 0.07%)</title><rect x="95.6495%" y="405" width="0.0667%" height="15" fill="rgb(228,80,19)" fg:x="87459" fg:w="61"/><text x="95.8995%" y="415.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayDelays&lt;T&gt;&gt;::serialize (62 samples, 0.07%)</title><rect x="95.6495%" y="453" width="0.0678%" height="15" fill="rgb(247,229,0)" fg:x="87459" fg:w="62"/><text x="95.8995%" y="463.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (62 samples, 0.07%)</title><rect x="95.6495%" y="437" width="0.0678%" height="15" fill="rgb(237,194,15)" fg:x="87459" fg:w="62"/><text x="95.8995%" y="447.50"></text></g><g><title>main`&lt;&amp;mut ciborium::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (62 samples, 0.07%)</title><rect x="95.6495%" y="421" width="0.0678%" height="15" fill="rgb(219,203,20)" fg:x="87459" fg:w="62"/><text x="95.8995%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`write (2,454 samples, 2.68%)</title><rect x="95.7271%" y="389" width="2.6838%" height="15" fill="rgb(234,128,8)" fg:x="87530" fg:w="2454"/><text x="95.9771%" y="399.50">li..</text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (2,471 samples, 2.70%)</title><rect x="95.7173%" y="421" width="2.7024%" height="15" fill="rgb(248,202,8)" fg:x="87521" fg:w="2471"/><text x="95.9673%" y="431.50">ma..</text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (2,463 samples, 2.69%)</title><rect x="95.7260%" y="405" width="2.6937%" height="15" fill="rgb(206,104,37)" fg:x="87529" fg:w="2463"/><text x="95.9760%" y="415.50">ma..</text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (2,472 samples, 2.70%)</title><rect x="95.7173%" y="453" width="2.7035%" height="15" fill="rgb(223,8,27)" fg:x="87521" fg:w="2472"/><text x="95.9673%" y="463.50">ma..</text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (2,472 samples, 2.70%)</title><rect x="95.7173%" y="437" width="2.7035%" height="15" fill="rgb(216,217,28)" fg:x="87521" fg:w="2472"/><text x="95.9673%" y="447.50">ma..</text></g><g><title>libsystem_kernel.dylib`write (388 samples, 0.42%)</title><rect x="98.4230%" y="405" width="0.4243%" height="15" fill="rgb(249,199,1)" fg:x="89995" fg:w="388"/><text x="98.6730%" y="415.50"></text></g><g><title>main`&lt;&amp;mut ciborium::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_none (392 samples, 0.43%)</title><rect x="98.4230%" y="421" width="0.4287%" height="15" fill="rgb(240,85,17)" fg:x="89995" fg:w="392"/><text x="98.6730%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`write (307 samples, 0.34%)</title><rect x="98.8517%" y="405" width="0.3358%" height="15" fill="rgb(206,108,45)" fg:x="90387" fg:w="307"/><text x="99.1017%" y="415.50"></text></g><g><title>main`&lt;&amp;mut ciborium::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (308 samples, 0.34%)</title><rect x="98.8517%" y="421" width="0.3368%" height="15" fill="rgb(245,210,41)" fg:x="90387" fg:w="308"/><text x="99.1017%" y="431.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayIndicesGains&gt;::serialize (704 samples, 0.77%)</title><rect x="98.4208%" y="453" width="0.7699%" height="15" fill="rgb(206,13,37)" fg:x="89993" fg:w="704"/><text x="98.6708%" y="463.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (704 samples, 0.77%)</title><rect x="98.4208%" y="437" width="0.7699%" height="15" fill="rgb(250,61,18)" fg:x="89993" fg:w="704"/><text x="98.6708%" y="447.50"></text></g><g><title>main`rusty_cde::core::model::functional::control::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::control::ControlMatrix&gt;::serialize (14 samples, 0.02%)</title><rect x="99.1907%" y="453" width="0.0153%" height="15" fill="rgb(235,172,48)" fg:x="90697" fg:w="14"/><text x="99.4407%" y="463.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (14 samples, 0.02%)</title><rect x="99.1907%" y="437" width="0.0153%" height="15" fill="rgb(249,201,17)" fg:x="90697" fg:w="14"/><text x="99.4407%" y="447.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (14 samples, 0.02%)</title><rect x="99.1907%" y="421" width="0.0153%" height="15" fill="rgb(219,208,6)" fg:x="90697" fg:w="14"/><text x="99.4407%" y="431.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (14 samples, 0.02%)</title><rect x="99.1907%" y="405" width="0.0153%" height="15" fill="rgb(248,31,23)" fg:x="90697" fg:w="14"/><text x="99.4407%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`write (14 samples, 0.02%)</title><rect x="99.1907%" y="389" width="0.0153%" height="15" fill="rgb(245,15,42)" fg:x="90697" fg:w="14"/><text x="99.4407%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`write (686 samples, 0.75%)</title><rect x="99.2093%" y="373" width="0.7502%" height="15" fill="rgb(222,217,39)" fg:x="90714" fg:w="686"/><text x="99.4593%" y="383.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (687 samples, 0.75%)</title><rect x="99.2093%" y="389" width="0.7513%" height="15" fill="rgb(210,219,27)" fg:x="90714" fg:w="687"/><text x="99.4593%" y="399.50"></text></g><g><title>main`rusty_cde::core::model::functional::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::FunctionalDescription&gt;::serialize (4,703 samples, 5.14%)</title><rect x="94.8183%" y="469" width="5.1434%" height="15" fill="rgb(252,166,36)" fg:x="86699" fg:w="4703"/><text x="95.0683%" y="479.50">main`r..</text></g><g><title>main`rusty_cde::core::model::functional::measurement::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::measurement::MeasurementMatrix&gt;::serialize (691 samples, 0.76%)</title><rect x="99.2060%" y="453" width="0.7557%" height="15" fill="rgb(245,132,34)" fg:x="90711" fg:w="691"/><text x="99.4560%" y="463.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (691 samples, 0.76%)</title><rect x="99.2060%" y="437" width="0.7557%" height="15" fill="rgb(236,54,3)" fg:x="90711" fg:w="691"/><text x="99.4560%" y="447.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (691 samples, 0.76%)</title><rect x="99.2060%" y="421" width="0.7557%" height="15" fill="rgb(241,173,43)" fg:x="90711" fg:w="691"/><text x="99.4560%" y="431.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (691 samples, 0.76%)</title><rect x="99.2060%" y="405" width="0.7557%" height="15" fill="rgb(215,190,9)" fg:x="90711" fg:w="691"/><text x="99.4560%" y="415.50"></text></g><g><title>main`rusty_cde::core::model::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::Model&gt;::serialize (4,735 samples, 5.18%)</title><rect x="94.8183%" y="485" width="5.1784%" height="15" fill="rgb(242,101,16)" fg:x="86699" fg:w="4735"/><text x="95.0683%" y="495.50">main`r..</text></g><g><title>main`rusty_cde::core::model::spatial::voxels::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::spatial::voxels::Voxels&gt;::serialize (31 samples, 0.03%)</title><rect x="99.9628%" y="469" width="0.0339%" height="15" fill="rgb(223,190,21)" fg:x="91403" fg:w="31"/><text x="100.2128%" y="479.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (31 samples, 0.03%)</title><rect x="99.9628%" y="453" width="0.0339%" height="15" fill="rgb(215,228,25)" fg:x="91403" fg:w="31"/><text x="100.2128%" y="463.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (31 samples, 0.03%)</title><rect x="99.9628%" y="437" width="0.0339%" height="15" fill="rgb(225,36,22)" fg:x="91403" fg:w="31"/><text x="100.2128%" y="447.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (19 samples, 0.02%)</title><rect x="99.9759%" y="421" width="0.0208%" height="15" fill="rgb(251,106,46)" fg:x="91415" fg:w="19"/><text x="100.2259%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`write (19 samples, 0.02%)</title><rect x="99.9759%" y="405" width="0.0208%" height="15" fill="rgb(208,90,1)" fg:x="91415" fg:w="19"/><text x="100.2259%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (87,737 samples, 95.95%)</title><rect x="4.0443%" y="597" width="95.9535%" height="15" fill="rgb(243,10,4)" fg:x="3698" fg:w="87737"/><text x="4.2943%" y="607.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (87,737 samples, 95.95%)</title><rect x="4.0443%" y="581" width="95.9535%" height="15" fill="rgb(212,137,27)" fg:x="3698" fg:w="87737"/><text x="4.2943%" y="591.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>main`std::sys::unix::thread::Thread::new::thread_start (87,226 samples, 95.39%)</title><rect x="4.6032%" y="565" width="95.3946%" height="15" fill="rgb(231,220,49)" fg:x="4209" fg:w="87226"/><text x="4.8532%" y="575.50">main`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (87,226 samples, 95.39%)</title><rect x="4.6032%" y="549" width="95.3946%" height="15" fill="rgb(237,96,20)" fg:x="4209" fg:w="87226"/><text x="4.8532%" y="559.50">main`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>main`std::sys_common::backtrace::__rust_begin_short_backtrace (87,197 samples, 95.36%)</title><rect x="4.6349%" y="533" width="95.3629%" height="15" fill="rgb(239,229,30)" fg:x="4238" fg:w="87197"/><text x="4.8849%" y="543.50">main`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>main`rusty_cde::core::scenario::run (72,535 samples, 79.33%)</title><rect x="20.6700%" y="517" width="79.3278%" height="15" fill="rgb(219,65,33)" fg:x="18900" fg:w="72535"/><text x="20.9200%" y="527.50">main`rusty_cde::core::scenario::run</text></g><g><title>main`rusty_cde::core::scenario::Scenario::save (38,441 samples, 42.04%)</title><rect x="57.9568%" y="501" width="42.0410%" height="15" fill="rgb(243,134,7)" fg:x="52994" fg:w="38441"/><text x="58.2068%" y="511.50">main`rusty_cde::core::scenario::Scenario::save</text></g><g><title>all (91,437 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(216,177,54)" fg:x="0" fg:w="91437"/><text x="0.2500%" y="623.50"></text></g></svg></svg>