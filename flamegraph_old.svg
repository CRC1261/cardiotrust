<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="144965"><g><title>CoreFoundation`-[__NSArrayM enumerateObjectsWithOptions:usingBlock:] (20 samples, 0.01%)</title><rect x="0.0524%" y="517" width="0.0138%" height="15" fill="rgb(227,0,7)" fg:x="76" fg:w="20"/><text x="0.3024%" y="527.50"></text></g><g><title>CoreFoundation`__NSARRAY_IS_CALLING_OUT_TO_A_BLOCK__ (20 samples, 0.01%)</title><rect x="0.0524%" y="501" width="0.0138%" height="15" fill="rgb(217,0,24)" fg:x="76" fg:w="20"/><text x="0.3024%" y="511.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (56 samples, 0.04%)</title><rect x="0.0379%" y="533" width="0.0386%" height="15" fill="rgb(221,193,54)" fg:x="55" fg:w="56"/><text x="0.2879%" y="543.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _mouseMoved:] (70 samples, 0.05%)</title><rect x="0.0373%" y="549" width="0.0483%" height="15" fill="rgb(248,212,6)" fg:x="54" fg:w="70"/><text x="0.2873%" y="559.50"></text></g><g><title>AppKit`_routeMouseMovedEvent (82 samples, 0.06%)</title><rect x="0.0366%" y="565" width="0.0566%" height="15" fill="rgb(208,68,35)" fg:x="53" fg:w="82"/><text x="0.2866%" y="575.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (85 samples, 0.06%)</title><rect x="0.0352%" y="581" width="0.0586%" height="15" fill="rgb(232,128,0)" fg:x="51" fg:w="85"/><text x="0.2852%" y="591.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (89 samples, 0.06%)</title><rect x="0.0352%" y="597" width="0.0614%" height="15" fill="rgb(207,160,47)" fg:x="51" fg:w="89"/><text x="0.2852%" y="607.50"></text></g><g><title>AppKit`routeMouseMovedEvent (99 samples, 0.07%)</title><rect x="0.0297%" y="613" width="0.0683%" height="15" fill="rgb(228,23,34)" fg:x="43" fg:w="99"/><text x="0.2797%" y="623.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (129 samples, 0.09%)</title><rect x="0.0131%" y="629" width="0.0890%" height="15" fill="rgb(218,30,26)" fg:x="19" fg:w="129"/><text x="0.2631%" y="639.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (140 samples, 0.10%)</title><rect x="0.0062%" y="661" width="0.0966%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="140"/><text x="0.2562%" y="671.50"></text></g><g><title>main`winit::platform_impl::platform::app::WinitApplication::send_event (132 samples, 0.09%)</title><rect x="0.0117%" y="645" width="0.0911%" height="15" fill="rgb(250,228,42)" fg:x="17" fg:w="132"/><text x="0.2617%" y="655.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (19 samples, 0.01%)</title><rect x="0.1062%" y="645" width="0.0131%" height="15" fill="rgb(240,193,28)" fg:x="154" fg:w="19"/><text x="0.3562%" y="655.50"></text></g><g><title>main`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (36 samples, 0.02%)</title><rect x="0.1352%" y="357" width="0.0248%" height="15" fill="rgb(216,20,37)" fg:x="196" fg:w="36"/><text x="0.3852%" y="367.50"></text></g><g><title>main`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (36 samples, 0.02%)</title><rect x="0.1352%" y="341" width="0.0248%" height="15" fill="rgb(206,188,39)" fg:x="196" fg:w="36"/><text x="0.3852%" y="351.50"></text></g><g><title>main`bevy_winit::winit_runner::_{{closure}} (36 samples, 0.02%)</title><rect x="0.1352%" y="325" width="0.0248%" height="15" fill="rgb(217,207,13)" fg:x="196" fg:w="36"/><text x="0.3852%" y="335.50"></text></g><g><title>main`bevy_winit::system::create_window (24 samples, 0.02%)</title><rect x="0.1435%" y="309" width="0.0166%" height="15" fill="rgb(231,73,38)" fg:x="208" fg:w="24"/><text x="0.3935%" y="319.50"></text></g><g><title>main`bevy_winit::winit_windows::WinitWindows::create_window (24 samples, 0.02%)</title><rect x="0.1435%" y="293" width="0.0166%" height="15" fill="rgb(225,20,46)" fg:x="208" fg:w="24"/><text x="0.3935%" y="303.50"></text></g><g><title>main`winit::platform_impl::platform::Window::new (24 samples, 0.02%)</title><rect x="0.1435%" y="277" width="0.0166%" height="15" fill="rgb(210,31,41)" fg:x="208" fg:w="24"/><text x="0.3935%" y="287.50"></text></g><g><title>main`winit::platform_impl::platform::window::WinitWindow::new (24 samples, 0.02%)</title><rect x="0.1435%" y="261" width="0.0166%" height="15" fill="rgb(221,200,47)" fg:x="208" fg:w="24"/><text x="0.3935%" y="271.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (40 samples, 0.03%)</title><rect x="0.1345%" y="485" width="0.0276%" height="15" fill="rgb(226,26,5)" fg:x="195" fg:w="40"/><text x="0.3845%" y="495.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (40 samples, 0.03%)</title><rect x="0.1345%" y="469" width="0.0276%" height="15" fill="rgb(249,33,26)" fg:x="195" fg:w="40"/><text x="0.3845%" y="479.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (40 samples, 0.03%)</title><rect x="0.1345%" y="453" width="0.0276%" height="15" fill="rgb(235,183,28)" fg:x="195" fg:w="40"/><text x="0.3845%" y="463.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (40 samples, 0.03%)</title><rect x="0.1345%" y="437" width="0.0276%" height="15" fill="rgb(221,5,38)" fg:x="195" fg:w="40"/><text x="0.3845%" y="447.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (40 samples, 0.03%)</title><rect x="0.1345%" y="421" width="0.0276%" height="15" fill="rgb(247,18,42)" fg:x="195" fg:w="40"/><text x="0.3845%" y="431.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (40 samples, 0.03%)</title><rect x="0.1345%" y="405" width="0.0276%" height="15" fill="rgb(241,131,45)" fg:x="195" fg:w="40"/><text x="0.3845%" y="415.50"></text></g><g><title>main`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (40 samples, 0.03%)</title><rect x="0.1345%" y="389" width="0.0276%" height="15" fill="rgb(249,31,29)" fg:x="195" fg:w="40"/><text x="0.3845%" y="399.50"></text></g><g><title>main`winit::platform_impl::platform::app_state::AppState::launched (40 samples, 0.03%)</title><rect x="0.1345%" y="373" width="0.0276%" height="15" fill="rgb(225,111,53)" fg:x="195" fg:w="40"/><text x="0.3845%" y="383.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (42 samples, 0.03%)</title><rect x="0.1338%" y="629" width="0.0290%" height="15" fill="rgb(238,160,17)" fg:x="194" fg:w="42"/><text x="0.3838%" y="639.50"></text></g><g><title>AE`aeProcessAppleEvent (42 samples, 0.03%)</title><rect x="0.1338%" y="613" width="0.0290%" height="15" fill="rgb(214,148,48)" fg:x="194" fg:w="42"/><text x="0.3838%" y="623.50"></text></g><g><title>AE`0x0000000197cb2688 (42 samples, 0.03%)</title><rect x="0.1338%" y="597" width="0.0290%" height="15" fill="rgb(232,36,49)" fg:x="194" fg:w="42"/><text x="0.3838%" y="607.50"></text></g><g><title>AE`0x0000000197cb2734 (42 samples, 0.03%)</title><rect x="0.1338%" y="581" width="0.0290%" height="15" fill="rgb(209,103,24)" fg:x="194" fg:w="42"/><text x="0.3838%" y="591.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (42 samples, 0.03%)</title><rect x="0.1338%" y="565" width="0.0290%" height="15" fill="rgb(229,88,8)" fg:x="194" fg:w="42"/><text x="0.3838%" y="575.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (42 samples, 0.03%)</title><rect x="0.1338%" y="549" width="0.0290%" height="15" fill="rgb(213,181,19)" fg:x="194" fg:w="42"/><text x="0.3838%" y="559.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (42 samples, 0.03%)</title><rect x="0.1338%" y="533" width="0.0290%" height="15" fill="rgb(254,191,54)" fg:x="194" fg:w="42"/><text x="0.3838%" y="543.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (42 samples, 0.03%)</title><rect x="0.1338%" y="517" width="0.0290%" height="15" fill="rgb(241,83,37)" fg:x="194" fg:w="42"/><text x="0.3838%" y="527.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (41 samples, 0.03%)</title><rect x="0.1345%" y="501" width="0.0283%" height="15" fill="rgb(233,36,39)" fg:x="195" fg:w="41"/><text x="0.3845%" y="511.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (41 samples, 0.03%)</title><rect x="0.1780%" y="469" width="0.0283%" height="15" fill="rgb(226,3,54)" fg:x="258" fg:w="41"/><text x="0.4280%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (41 samples, 0.03%)</title><rect x="0.1780%" y="453" width="0.0283%" height="15" fill="rgb(245,192,40)" fg:x="258" fg:w="41"/><text x="0.4280%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (41 samples, 0.03%)</title><rect x="0.1780%" y="437" width="0.0283%" height="15" fill="rgb(238,167,29)" fg:x="258" fg:w="41"/><text x="0.4280%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (41 samples, 0.03%)</title><rect x="0.1780%" y="421" width="0.0283%" height="15" fill="rgb(232,182,51)" fg:x="258" fg:w="41"/><text x="0.4280%" y="431.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (44 samples, 0.03%)</title><rect x="0.1780%" y="485" width="0.0304%" height="15" fill="rgb(231,60,39)" fg:x="258" fg:w="44"/><text x="0.4280%" y="495.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (77 samples, 0.05%)</title><rect x="0.1731%" y="501" width="0.0531%" height="15" fill="rgb(208,69,12)" fg:x="251" fg:w="77"/><text x="0.4231%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (93 samples, 0.06%)</title><rect x="0.1683%" y="565" width="0.0642%" height="15" fill="rgb(235,93,37)" fg:x="244" fg:w="93"/><text x="0.4183%" y="575.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (89 samples, 0.06%)</title><rect x="0.1711%" y="549" width="0.0614%" height="15" fill="rgb(213,116,39)" fg:x="248" fg:w="89"/><text x="0.4211%" y="559.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (88 samples, 0.06%)</title><rect x="0.1718%" y="533" width="0.0607%" height="15" fill="rgb(222,207,29)" fg:x="249" fg:w="88"/><text x="0.4218%" y="543.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (88 samples, 0.06%)</title><rect x="0.1718%" y="517" width="0.0607%" height="15" fill="rgb(206,96,30)" fg:x="249" fg:w="88"/><text x="0.4218%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (19 samples, 0.01%)</title><rect x="0.2380%" y="501" width="0.0131%" height="15" fill="rgb(218,138,4)" fg:x="345" fg:w="19"/><text x="0.4880%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (19 samples, 0.01%)</title><rect x="0.2380%" y="485" width="0.0131%" height="15" fill="rgb(250,191,14)" fg:x="345" fg:w="19"/><text x="0.4880%" y="495.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (24 samples, 0.02%)</title><rect x="0.2380%" y="549" width="0.0166%" height="15" fill="rgb(239,60,40)" fg:x="345" fg:w="24"/><text x="0.4880%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (24 samples, 0.02%)</title><rect x="0.2380%" y="533" width="0.0166%" height="15" fill="rgb(206,27,48)" fg:x="345" fg:w="24"/><text x="0.4880%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (24 samples, 0.02%)</title><rect x="0.2380%" y="517" width="0.0166%" height="15" fill="rgb(225,35,8)" fg:x="345" fg:w="24"/><text x="0.4880%" y="527.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (34 samples, 0.02%)</title><rect x="0.2677%" y="485" width="0.0235%" height="15" fill="rgb(250,213,24)" fg:x="388" fg:w="34"/><text x="0.5177%" y="495.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (42 samples, 0.03%)</title><rect x="0.2677%" y="501" width="0.0290%" height="15" fill="rgb(247,123,22)" fg:x="388" fg:w="42"/><text x="0.5177%" y="511.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (15 samples, 0.01%)</title><rect x="0.3035%" y="469" width="0.0103%" height="15" fill="rgb(231,138,38)" fg:x="440" fg:w="15"/><text x="0.5535%" y="479.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (40 samples, 0.03%)</title><rect x="0.2966%" y="501" width="0.0276%" height="15" fill="rgb(231,145,46)" fg:x="430" fg:w="40"/><text x="0.5466%" y="511.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (32 samples, 0.02%)</title><rect x="0.3021%" y="485" width="0.0221%" height="15" fill="rgb(251,118,11)" fg:x="438" fg:w="32"/><text x="0.5521%" y="495.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (15 samples, 0.01%)</title><rect x="0.3139%" y="469" width="0.0103%" height="15" fill="rgb(217,147,25)" fg:x="455" fg:w="15"/><text x="0.5639%" y="479.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (83 samples, 0.06%)</title><rect x="0.2677%" y="517" width="0.0573%" height="15" fill="rgb(247,81,37)" fg:x="388" fg:w="83"/><text x="0.5177%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (22 samples, 0.02%)</title><rect x="0.3711%" y="277" width="0.0152%" height="15" fill="rgb(209,12,38)" fg:x="538" fg:w="22"/><text x="0.6211%" y="287.50"></text></g><g><title>main`async_channel::Send&lt;T&gt;::wait (26 samples, 0.02%)</title><rect x="0.3697%" y="389" width="0.0179%" height="15" fill="rgb(227,1,9)" fg:x="536" fg:w="26"/><text x="0.6197%" y="399.50"></text></g><g><title>main`event_listener::Event::notify_additional (26 samples, 0.02%)</title><rect x="0.3697%" y="373" width="0.0179%" height="15" fill="rgb(248,47,43)" fg:x="536" fg:w="26"/><text x="0.6197%" y="383.50"></text></g><g><title>main`event_listener::List::notify_additional (26 samples, 0.02%)</title><rect x="0.3697%" y="357" width="0.0179%" height="15" fill="rgb(221,10,30)" fg:x="536" fg:w="26"/><text x="0.6197%" y="367.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (26 samples, 0.02%)</title><rect x="0.3697%" y="341" width="0.0179%" height="15" fill="rgb(210,229,1)" fg:x="536" fg:w="26"/><text x="0.6197%" y="351.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (26 samples, 0.02%)</title><rect x="0.3697%" y="325" width="0.0179%" height="15" fill="rgb(222,148,37)" fg:x="536" fg:w="26"/><text x="0.6197%" y="335.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="0.3711%" y="309" width="0.0166%" height="15" fill="rgb(234,67,33)" fg:x="538" fg:w="24"/><text x="0.6211%" y="319.50"></text></g><g><title>main`parking::Unparker::unpark (24 samples, 0.02%)</title><rect x="0.3711%" y="293" width="0.0166%" height="15" fill="rgb(247,98,35)" fg:x="538" fg:w="24"/><text x="0.6211%" y="303.50"></text></g><g><title>main`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.03%)</title><rect x="0.4194%" y="261" width="0.0317%" height="15" fill="rgb(247,138,52)" fg:x="608" fg:w="46"/><text x="0.6694%" y="271.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (58 samples, 0.04%)</title><rect x="0.4173%" y="277" width="0.0400%" height="15" fill="rgb(213,79,30)" fg:x="605" fg:w="58"/><text x="0.6673%" y="287.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (63 samples, 0.04%)</title><rect x="0.4146%" y="293" width="0.0435%" height="15" fill="rgb(246,177,23)" fg:x="601" fg:w="63"/><text x="0.6646%" y="303.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (115 samples, 0.08%)</title><rect x="0.4015%" y="357" width="0.0793%" height="15" fill="rgb(230,62,27)" fg:x="582" fg:w="115"/><text x="0.6515%" y="367.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor (112 samples, 0.08%)</title><rect x="0.4035%" y="341" width="0.0773%" height="15" fill="rgb(216,154,8)" fg:x="585" fg:w="112"/><text x="0.6535%" y="351.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (111 samples, 0.08%)</title><rect x="0.4042%" y="325" width="0.0766%" height="15" fill="rgb(244,35,45)" fg:x="586" fg:w="111"/><text x="0.6542%" y="335.50"></text></g><g><title>main`futures_lite::future::block_on (97 samples, 0.07%)</title><rect x="0.4139%" y="309" width="0.0669%" height="15" fill="rgb(251,115,12)" fg:x="600" fg:w="97"/><text x="0.6639%" y="319.50"></text></g><g><title>main`parking::Inner::park (33 samples, 0.02%)</title><rect x="0.4580%" y="293" width="0.0228%" height="15" fill="rgb(240,54,50)" fg:x="664" fg:w="33"/><text x="0.7080%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (32 samples, 0.02%)</title><rect x="0.4587%" y="277" width="0.0221%" height="15" fill="rgb(233,84,52)" fg:x="665" fg:w="32"/><text x="0.7087%" y="287.50"></text></g><g><title>main`bevy_render::extract (131 samples, 0.09%)</title><rect x="0.3918%" y="389" width="0.0904%" height="15" fill="rgb(207,117,47)" fg:x="568" fg:w="131"/><text x="0.6418%" y="399.50"></text></g><g><title>main`bevy_ecs::world::World::schedule_scope (122 samples, 0.08%)</title><rect x="0.3980%" y="373" width="0.0842%" height="15" fill="rgb(249,43,39)" fg:x="577" fg:w="122"/><text x="0.6480%" y="383.50"></text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.01%)</title><rect x="0.4994%" y="341" width="0.0145%" height="15" fill="rgb(209,38,44)" fg:x="724" fg:w="21"/><text x="0.7494%" y="351.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (48 samples, 0.03%)</title><rect x="0.4960%" y="357" width="0.0331%" height="15" fill="rgb(236,212,23)" fg:x="719" fg:w="48"/><text x="0.7460%" y="367.50"></text></g><g><title>main`futures_lite::future::block_on (62 samples, 0.04%)</title><rect x="0.4946%" y="373" width="0.0428%" height="15" fill="rgb(242,79,21)" fg:x="717" fg:w="62"/><text x="0.7446%" y="383.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor (81 samples, 0.06%)</title><rect x="0.4822%" y="389" width="0.0559%" height="15" fill="rgb(211,96,35)" fg:x="699" fg:w="81"/><text x="0.7322%" y="399.50"></text></g><g><title>main`bevy_ecs::world::World::resource_scope (259 samples, 0.18%)</title><rect x="0.3622%" y="405" width="0.1787%" height="15" fill="rgb(253,215,40)" fg:x="525" fg:w="259"/><text x="0.6122%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.01%)</title><rect x="0.5684%" y="341" width="0.0103%" height="15" fill="rgb(211,81,21)" fg:x="824" fg:w="15"/><text x="0.8184%" y="351.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (34 samples, 0.02%)</title><rect x="0.6167%" y="325" width="0.0235%" height="15" fill="rgb(208,190,38)" fg:x="894" fg:w="34"/><text x="0.8667%" y="335.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::apply_deferred (20 samples, 0.01%)</title><rect x="0.6402%" y="325" width="0.0138%" height="15" fill="rgb(235,213,38)" fg:x="928" fg:w="20"/><text x="0.8902%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (26 samples, 0.02%)</title><rect x="0.6691%" y="261" width="0.0179%" height="15" fill="rgb(237,122,38)" fg:x="970" fg:w="26"/><text x="0.9191%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (22 samples, 0.02%)</title><rect x="0.6719%" y="245" width="0.0152%" height="15" fill="rgb(244,218,35)" fg:x="974" fg:w="22"/><text x="0.9219%" y="255.50"></text></g><g><title>main`__rdl_alloc (30 samples, 0.02%)</title><rect x="0.6684%" y="293" width="0.0207%" height="15" fill="rgb(240,68,47)" fg:x="969" fg:w="30"/><text x="0.9184%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (29 samples, 0.02%)</title><rect x="0.6691%" y="277" width="0.0200%" height="15" fill="rgb(210,16,53)" fg:x="970" fg:w="29"/><text x="0.9191%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (25 samples, 0.02%)</title><rect x="0.6988%" y="277" width="0.0172%" height="15" fill="rgb(235,124,12)" fg:x="1013" fg:w="25"/><text x="0.9488%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (25 samples, 0.02%)</title><rect x="0.6988%" y="261" width="0.0172%" height="15" fill="rgb(224,169,11)" fg:x="1013" fg:w="25"/><text x="0.9488%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (83 samples, 0.06%)</title><rect x="0.7374%" y="229" width="0.0573%" height="15" fill="rgb(250,166,2)" fg:x="1069" fg:w="83"/><text x="0.9874%" y="239.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (97 samples, 0.07%)</title><rect x="0.7298%" y="277" width="0.0669%" height="15" fill="rgb(242,216,29)" fg:x="1058" fg:w="97"/><text x="0.9798%" y="287.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (86 samples, 0.06%)</title><rect x="0.7374%" y="261" width="0.0593%" height="15" fill="rgb(230,116,27)" fg:x="1069" fg:w="86"/><text x="0.9874%" y="271.50"></text></g><g><title>main`parking::Unparker::unpark (86 samples, 0.06%)</title><rect x="0.7374%" y="245" width="0.0593%" height="15" fill="rgb(228,99,48)" fg:x="1069" fg:w="86"/><text x="0.9874%" y="255.50"></text></g><g><title>main`async_executor::Executor::spawn (172 samples, 0.12%)</title><rect x="0.6891%" y="293" width="0.1186%" height="15" fill="rgb(253,11,6)" fg:x="999" fg:w="172"/><text x="0.9391%" y="303.50"></text></g><g><title>main`async_task::runnable::spawn_unchecked (16 samples, 0.01%)</title><rect x="0.7967%" y="277" width="0.0110%" height="15" fill="rgb(247,143,39)" fg:x="1155" fg:w="16"/><text x="1.0467%" y="287.50"></text></g><g><title>main`&lt;async_executor::Ticker as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="0.8506%" y="245" width="0.0159%" height="15" fill="rgb(236,97,10)" fg:x="1233" fg:w="23"/><text x="1.1006%" y="255.50"></text></g><g><title>main`&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (36 samples, 0.02%)</title><rect x="0.8664%" y="245" width="0.0248%" height="15" fill="rgb(233,208,19)" fg:x="1256" fg:w="36"/><text x="1.1164%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (106 samples, 0.07%)</title><rect x="0.9182%" y="213" width="0.0731%" height="15" fill="rgb(216,164,2)" fg:x="1331" fg:w="106"/><text x="1.1682%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (106 samples, 0.07%)</title><rect x="0.9182%" y="197" width="0.0731%" height="15" fill="rgb(220,129,5)" fg:x="1331" fg:w="106"/><text x="1.1682%" y="207.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.07%)</title><rect x="0.9182%" y="229" width="0.0745%" height="15" fill="rgb(242,17,10)" fg:x="1331" fg:w="108"/><text x="1.1682%" y="239.50"></text></g><g><title>main`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (19 samples, 0.01%)</title><rect x="1.0009%" y="213" width="0.0131%" height="15" fill="rgb(242,107,0)" fg:x="1451" fg:w="19"/><text x="1.2509%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (21 samples, 0.01%)</title><rect x="1.0478%" y="85" width="0.0145%" height="15" fill="rgb(251,28,31)" fg:x="1519" fg:w="21"/><text x="1.2978%" y="95.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (39 samples, 0.03%)</title><rect x="1.0471%" y="101" width="0.0269%" height="15" fill="rgb(233,223,10)" fg:x="1518" fg:w="39"/><text x="1.2971%" y="111.50"></text></g><g><title>main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (51 samples, 0.04%)</title><rect x="1.0451%" y="117" width="0.0352%" height="15" fill="rgb(215,21,27)" fg:x="1515" fg:w="51"/><text x="1.2951%" y="127.50"></text></g><g><title>main`bevy_render::view::window::ExtractedWindow::set_swapchain_texture (55 samples, 0.04%)</title><rect x="1.0437%" y="181" width="0.0379%" height="15" fill="rgb(232,23,21)" fg:x="1513" fg:w="55"/><text x="1.2937%" y="191.50"></text></g><g><title>main`wgpu::Texture::create_view (53 samples, 0.04%)</title><rect x="1.0451%" y="165" width="0.0366%" height="15" fill="rgb(244,5,23)" fg:x="1515" fg:w="53"/><text x="1.2951%" y="175.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::texture_create_view (53 samples, 0.04%)</title><rect x="1.0451%" y="149" width="0.0366%" height="15" fill="rgb(226,81,46)" fg:x="1515" fg:w="53"/><text x="1.2951%" y="159.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (53 samples, 0.04%)</title><rect x="1.0451%" y="133" width="0.0366%" height="15" fill="rgb(247,70,30)" fg:x="1515" fg:w="53"/><text x="1.2951%" y="143.50"></text></g><g><title>main`wgpu_core::instance::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::adapter_get_texture_format_features (35 samples, 0.02%)</title><rect x="1.0823%" y="133" width="0.0241%" height="15" fill="rgb(212,68,19)" fg:x="1569" fg:w="35"/><text x="1.3323%" y="143.50"></text></g><g><title>main`wgpu_hal::metal::adapter::_&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Adapter&gt;::texture_format_capabilities (23 samples, 0.02%)</title><rect x="1.0906%" y="117" width="0.0159%" height="15" fill="rgb(240,187,13)" fg:x="1581" fg:w="23"/><text x="1.3406%" y="127.50"></text></g><g><title>main`parking_lot::raw_mutex::RawMutex::lock_slow (20 samples, 0.01%)</title><rect x="1.0927%" y="101" width="0.0138%" height="15" fill="rgb(223,113,26)" fg:x="1584" fg:w="20"/><text x="1.3427%" y="111.50"></text></g><g><title>main`wgpu::Adapter::get_texture_format_features (37 samples, 0.03%)</title><rect x="1.0816%" y="181" width="0.0255%" height="15" fill="rgb(206,192,2)" fg:x="1568" fg:w="37"/><text x="1.3316%" y="191.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::adapter_get_texture_format_features (37 samples, 0.03%)</title><rect x="1.0816%" y="165" width="0.0255%" height="15" fill="rgb(241,108,4)" fg:x="1568" fg:w="37"/><text x="1.3316%" y="175.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::adapter_get_texture_format_features (37 samples, 0.03%)</title><rect x="1.0816%" y="149" width="0.0255%" height="15" fill="rgb(247,173,49)" fg:x="1568" fg:w="37"/><text x="1.3316%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (22 samples, 0.02%)</title><rect x="1.1203%" y="101" width="0.0152%" height="15" fill="rgb(224,114,35)" fg:x="1624" fg:w="22"/><text x="1.3703%" y="111.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (37 samples, 0.03%)</title><rect x="1.1203%" y="117" width="0.0255%" height="15" fill="rgb(245,159,27)" fg:x="1624" fg:w="37"/><text x="1.3703%" y="127.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (18 samples, 0.01%)</title><rect x="1.1865%" y="37" width="0.0124%" height="15" fill="rgb(245,172,44)" fg:x="1720" fg:w="18"/><text x="1.4365%" y="47.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (30 samples, 0.02%)</title><rect x="1.1803%" y="53" width="0.0207%" height="15" fill="rgb(236,23,11)" fg:x="1711" fg:w="30"/><text x="1.4303%" y="63.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (38 samples, 0.03%)</title><rect x="1.2044%" y="53" width="0.0262%" height="15" fill="rgb(205,117,38)" fg:x="1746" fg:w="38"/><text x="1.4544%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (34 samples, 0.02%)</title><rect x="1.2072%" y="37" width="0.0235%" height="15" fill="rgb(237,72,25)" fg:x="1750" fg:w="34"/><text x="1.4572%" y="47.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (88 samples, 0.06%)</title><rect x="1.1720%" y="69" width="0.0607%" height="15" fill="rgb(244,70,9)" fg:x="1699" fg:w="88"/><text x="1.4220%" y="79.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (95 samples, 0.07%)</title><rect x="1.1686%" y="85" width="0.0655%" height="15" fill="rgb(217,125,39)" fg:x="1694" fg:w="95"/><text x="1.4186%" y="95.50"></text></g><g><title>main`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (181 samples, 0.12%)</title><rect x="1.1127%" y="133" width="0.1249%" height="15" fill="rgb(235,36,10)" fg:x="1613" fg:w="181"/><text x="1.3627%" y="143.50"></text></g><g><title>main`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (106 samples, 0.07%)</title><rect x="1.1644%" y="117" width="0.0731%" height="15" fill="rgb(251,123,47)" fg:x="1688" fg:w="106"/><text x="1.4144%" y="127.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (102 samples, 0.07%)</title><rect x="1.1672%" y="101" width="0.0704%" height="15" fill="rgb(221,13,13)" fg:x="1692" fg:w="102"/><text x="1.4172%" y="111.50"></text></g><g><title>main`wgpu::Surface::get_current_texture (190 samples, 0.13%)</title><rect x="1.1072%" y="181" width="0.1311%" height="15" fill="rgb(238,131,9)" fg:x="1605" fg:w="190"/><text x="1.3572%" y="191.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (188 samples, 0.13%)</title><rect x="1.1085%" y="165" width="0.1297%" height="15" fill="rgb(211,50,8)" fg:x="1607" fg:w="188"/><text x="1.3585%" y="175.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (187 samples, 0.13%)</title><rect x="1.1092%" y="149" width="0.1290%" height="15" fill="rgb(245,182,24)" fg:x="1608" fg:w="187"/><text x="1.3592%" y="159.50"></text></g><g><title>main`bevy_render::view::window::prepare_windows (296 samples, 0.20%)</title><rect x="1.0354%" y="197" width="0.2042%" height="15" fill="rgb(242,14,37)" fg:x="1501" fg:w="296"/><text x="1.2854%" y="207.50"></text></g><g><title>main`async_executor::Executor::try_tick (17 samples, 0.01%)</title><rect x="1.2396%" y="181" width="0.0117%" height="15" fill="rgb(246,228,12)" fg:x="1797" fg:w="17"/><text x="1.4896%" y="191.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::with_local_executor (22 samples, 0.02%)</title><rect x="1.2396%" y="197" width="0.0152%" height="15" fill="rgb(213,55,15)" fg:x="1797" fg:w="22"/><text x="1.4896%" y="207.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.02%)</title><rect x="1.2555%" y="197" width="0.0207%" height="15" fill="rgb(209,9,3)" fg:x="1820" fg:w="30"/><text x="1.5055%" y="207.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (374 samples, 0.26%)</title><rect x="1.0202%" y="213" width="0.2580%" height="15" fill="rgb(230,59,30)" fg:x="1479" fg:w="374"/><text x="1.2702%" y="223.50"></text></g><g><title>main`event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="1.2969%" y="181" width="0.0110%" height="15" fill="rgb(209,121,21)" fg:x="1880" fg:w="16"/><text x="1.5469%" y="191.50"></text></g><g><title>main`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (19 samples, 0.01%)</title><rect x="1.3114%" y="133" width="0.0131%" height="15" fill="rgb(220,109,13)" fg:x="1901" fg:w="19"/><text x="1.5614%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (71 samples, 0.05%)</title><rect x="1.3251%" y="101" width="0.0490%" height="15" fill="rgb(232,18,1)" fg:x="1921" fg:w="71"/><text x="1.5751%" y="111.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (97 samples, 0.07%)</title><rect x="1.3093%" y="165" width="0.0669%" height="15" fill="rgb(215,41,42)" fg:x="1898" fg:w="97"/><text x="1.5593%" y="175.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (96 samples, 0.07%)</title><rect x="1.3100%" y="149" width="0.0662%" height="15" fill="rgb(224,123,36)" fg:x="1899" fg:w="96"/><text x="1.5600%" y="159.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (75 samples, 0.05%)</title><rect x="1.3245%" y="133" width="0.0517%" height="15" fill="rgb(240,125,3)" fg:x="1920" fg:w="75"/><text x="1.5745%" y="143.50"></text></g><g><title>main`parking::Unparker::unpark (74 samples, 0.05%)</title><rect x="1.3251%" y="117" width="0.0510%" height="15" fill="rgb(205,98,50)" fg:x="1921" fg:w="74"/><text x="1.5751%" y="127.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (143 samples, 0.10%)</title><rect x="1.2782%" y="213" width="0.0986%" height="15" fill="rgb(205,185,37)" fg:x="1853" fg:w="143"/><text x="1.5282%" y="223.50"></text></g><g><title>main`event_listener::Event::notify_additional (139 samples, 0.10%)</title><rect x="1.2810%" y="197" width="0.0959%" height="15" fill="rgb(238,207,15)" fg:x="1857" fg:w="139"/><text x="1.5310%" y="207.50"></text></g><g><title>main`event_listener::List::notify_additional (100 samples, 0.07%)</title><rect x="1.3079%" y="181" width="0.0690%" height="15" fill="rgb(213,199,42)" fg:x="1896" fg:w="100"/><text x="1.5579%" y="191.50"></text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (559 samples, 0.39%)</title><rect x="0.9968%" y="229" width="0.3856%" height="15" fill="rgb(235,201,11)" fg:x="1445" fg:w="559"/><text x="1.2468%" y="239.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (711 samples, 0.49%)</title><rect x="0.8940%" y="245" width="0.4905%" height="15" fill="rgb(207,46,11)" fg:x="1296" fg:w="711"/><text x="1.1440%" y="255.50"></text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (795 samples, 0.55%)</title><rect x="0.8374%" y="261" width="0.5484%" height="15" fill="rgb(241,35,35)" fg:x="1214" fg:w="795"/><text x="1.0874%" y="271.50"></text></g><g><title>main`&lt;async_task::task::FallibleTask&lt;T,M&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="1.4065%" y="245" width="0.0166%" height="15" fill="rgb(243,32,47)" fg:x="2039" fg:w="24"/><text x="1.6565%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.01%)</title><rect x="1.4962%" y="229" width="0.0110%" height="15" fill="rgb(247,202,23)" fg:x="2169" fg:w="16"/><text x="1.7462%" y="239.50"></text></g><g><title>main`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (152 samples, 0.10%)</title><rect x="1.4231%" y="245" width="0.1049%" height="15" fill="rgb(219,102,11)" fg:x="2063" fg:w="152"/><text x="1.6731%" y="255.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (219 samples, 0.15%)</title><rect x="1.3907%" y="261" width="0.1511%" height="15" fill="rgb(243,110,44)" fg:x="2016" fg:w="219"/><text x="1.6407%" y="271.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (1,044 samples, 0.72%)</title><rect x="0.8278%" y="277" width="0.7202%" height="15" fill="rgb(222,74,54)" fg:x="1200" fg:w="1044"/><text x="1.0778%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (656 samples, 0.45%)</title><rect x="1.5555%" y="261" width="0.4525%" height="15" fill="rgb(216,99,12)" fg:x="2255" fg:w="656"/><text x="1.8055%" y="271.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (1,975 samples, 1.36%)</title><rect x="0.6567%" y="309" width="1.3624%" height="15" fill="rgb(226,22,26)" fg:x="952" fg:w="1975"/><text x="0.9067%" y="319.50"></text></g><g><title>main`futures_lite::future::block_on (1,740 samples, 1.20%)</title><rect x="0.8188%" y="293" width="1.2003%" height="15" fill="rgb(217,163,10)" fg:x="1187" fg:w="1740"/><text x="1.0688%" y="303.50"></text></g><g><title>main`parking::Inner::park (682 samples, 0.47%)</title><rect x="1.5486%" y="277" width="0.4705%" height="15" fill="rgb(213,25,53)" fg:x="2245" fg:w="682"/><text x="1.7986%" y="287.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (2,065 samples, 1.42%)</title><rect x="0.5953%" y="341" width="1.4245%" height="15" fill="rgb(252,105,26)" fg:x="863" fg:w="2065"/><text x="0.8453%" y="351.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor (1,980 samples, 1.37%)</title><rect x="0.6540%" y="325" width="1.3658%" height="15" fill="rgb(220,39,43)" fg:x="948" fg:w="1980"/><text x="0.9040%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.01%)</title><rect x="2.0281%" y="325" width="0.0131%" height="15" fill="rgb(229,68,48)" fg:x="2940" fg:w="19"/><text x="2.2781%" y="335.50"></text></g><g><title>main`bevy_ecs::schedule::schedule::Schedules::insert (32 samples, 0.02%)</title><rect x="2.0281%" y="341" width="0.0221%" height="15" fill="rgb(252,8,32)" fg:x="2940" fg:w="32"/><text x="2.2781%" y="351.50"></text></g><g><title>main`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (2,191 samples, 1.51%)</title><rect x="0.5477%" y="373" width="1.5114%" height="15" fill="rgb(223,20,43)" fg:x="794" fg:w="2191"/><text x="0.7977%" y="383.50"></text></g><g><title>main`bevy_ecs::world::World::resource_scope (2,178 samples, 1.50%)</title><rect x="0.5567%" y="357" width="1.5024%" height="15" fill="rgb(229,81,49)" fg:x="807" fg:w="2178"/><text x="0.8067%" y="367.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (2,195 samples, 1.51%)</title><rect x="0.5456%" y="389" width="1.5142%" height="15" fill="rgb(236,28,36)" fg:x="791" fg:w="2195"/><text x="0.7956%" y="399.50"></text></g><g><title>main`bevy_ecs::world::World::schedule_scope (2,205 samples, 1.52%)</title><rect x="0.5408%" y="405" width="1.5211%" height="15" fill="rgb(249,185,26)" fg:x="784" fg:w="2205"/><text x="0.7908%" y="415.50"></text></g><g><title>main`bevy_app::app::App::update (2,475 samples, 1.71%)</title><rect x="0.3553%" y="421" width="1.7073%" height="15" fill="rgb(249,174,33)" fg:x="515" fg:w="2475"/><text x="0.6053%" y="431.50"></text></g><g><title>main`&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::init_state (24 samples, 0.02%)</title><rect x="2.0633%" y="405" width="0.0166%" height="15" fill="rgb(233,201,37)" fg:x="2991" fg:w="24"/><text x="2.3133%" y="415.50"></text></g><g><title>main`bevy_ecs::system::function_system::SystemState&lt;Param&gt;::new (37 samples, 0.03%)</title><rect x="2.0633%" y="421" width="0.0255%" height="15" fill="rgb(221,78,26)" fg:x="2991" fg:w="37"/><text x="2.3133%" y="431.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,649 samples, 1.83%)</title><rect x="0.2677%" y="533" width="1.8273%" height="15" fill="rgb(250,127,30)" fg:x="388" fg:w="2649"/><text x="0.5177%" y="543.50">C..</text></g><g><title>main`winit::platform_impl::platform::observer::control_flow_end_handler (2,550 samples, 1.76%)</title><rect x="0.3359%" y="517" width="1.7590%" height="15" fill="rgb(230,49,44)" fg:x="487" fg:w="2550"/><text x="0.5859%" y="527.50"></text></g><g><title>main`std::panicking::try (2,549 samples, 1.76%)</title><rect x="0.3366%" y="501" width="1.7584%" height="15" fill="rgb(229,67,23)" fg:x="488" fg:w="2549"/><text x="0.5866%" y="511.50"></text></g><g><title>main`winit::platform_impl::platform::app_state::AppState::cleared (2,546 samples, 1.76%)</title><rect x="0.3387%" y="485" width="1.7563%" height="15" fill="rgb(249,83,47)" fg:x="491" fg:w="2546"/><text x="0.5887%" y="495.50"></text></g><g><title>main`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (2,540 samples, 1.75%)</title><rect x="0.3428%" y="469" width="1.7521%" height="15" fill="rgb(215,43,3)" fg:x="497" fg:w="2540"/><text x="0.5928%" y="479.50"></text></g><g><title>main`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (2,539 samples, 1.75%)</title><rect x="0.3435%" y="453" width="1.7515%" height="15" fill="rgb(238,154,13)" fg:x="498" fg:w="2539"/><text x="0.5935%" y="463.50"></text></g><g><title>main`bevy_winit::winit_runner::_{{closure}} (2,532 samples, 1.75%)</title><rect x="0.3484%" y="437" width="1.7466%" height="15" fill="rgb(219,56,2)" fg:x="505" fg:w="2532"/><text x="0.5984%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,665 samples, 1.84%)</title><rect x="0.2614%" y="549" width="1.8384%" height="15" fill="rgb(233,0,4)" fg:x="379" fg:w="2665"/><text x="0.5114%" y="559.50">C..</text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (38 samples, 0.03%)</title><rect x="2.5723%" y="517" width="0.0262%" height="15" fill="rgb(235,30,7)" fg:x="3729" fg:w="38"/><text x="2.8223%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (27 samples, 0.02%)</title><rect x="2.5799%" y="501" width="0.0186%" height="15" fill="rgb(250,79,13)" fg:x="3740" fg:w="27"/><text x="2.8299%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (730 samples, 0.50%)</title><rect x="2.1074%" y="533" width="0.5036%" height="15" fill="rgb(211,146,34)" fg:x="3055" fg:w="730"/><text x="2.3574%" y="543.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (737 samples, 0.51%)</title><rect x="2.1040%" y="549" width="0.5084%" height="15" fill="rgb(228,22,38)" fg:x="3050" fg:w="737"/><text x="2.3540%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (20 samples, 0.01%)</title><rect x="2.6137%" y="549" width="0.0138%" height="15" fill="rgb(235,168,5)" fg:x="3789" fg:w="20"/><text x="2.8637%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (20 samples, 0.01%)</title><rect x="2.6137%" y="533" width="0.0138%" height="15" fill="rgb(221,155,16)" fg:x="3789" fg:w="20"/><text x="2.8637%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (20 samples, 0.01%)</title><rect x="2.6137%" y="517" width="0.0138%" height="15" fill="rgb(215,215,53)" fg:x="3789" fg:w="20"/><text x="2.8637%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (19 samples, 0.01%)</title><rect x="2.6144%" y="501" width="0.0131%" height="15" fill="rgb(223,4,10)" fg:x="3790" fg:w="19"/><text x="2.8644%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (3,494 samples, 2.41%)</title><rect x="0.2332%" y="565" width="2.4102%" height="15" fill="rgb(234,103,6)" fg:x="338" fg:w="3494"/><text x="0.4832%" y="575.50">Co..</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (3,597 samples, 2.48%)</title><rect x="0.1662%" y="581" width="2.4813%" height="15" fill="rgb(227,97,0)" fg:x="241" fg:w="3597"/><text x="0.4162%" y="591.50">Co..</text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (34 samples, 0.02%)</title><rect x="2.6544%" y="549" width="0.0235%" height="15" fill="rgb(234,150,53)" fg:x="3848" fg:w="34"/><text x="2.9044%" y="559.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (39 samples, 0.03%)</title><rect x="2.6524%" y="581" width="0.0269%" height="15" fill="rgb(228,201,54)" fg:x="3845" fg:w="39"/><text x="2.9024%" y="591.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (36 samples, 0.02%)</title><rect x="2.6544%" y="565" width="0.0248%" height="15" fill="rgb(222,22,37)" fg:x="3848" fg:w="36"/><text x="2.9044%" y="575.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (3,645 samples, 2.51%)</title><rect x="0.1656%" y="597" width="2.5144%" height="15" fill="rgb(237,53,32)" fg:x="240" fg:w="3645"/><text x="0.4156%" y="607.50">HI..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (3,664 samples, 2.53%)</title><rect x="0.1628%" y="613" width="2.5275%" height="15" fill="rgb(233,25,53)" fg:x="236" fg:w="3664"/><text x="0.4128%" y="623.50">HI..</text></g><g><title>AppKit`_DPSNextEvent (3,710 samples, 2.56%)</title><rect x="0.1318%" y="645" width="2.5592%" height="15" fill="rgb(210,40,34)" fg:x="191" fg:w="3710"/><text x="0.3818%" y="655.50">Ap..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (3,665 samples, 2.53%)</title><rect x="0.1628%" y="629" width="2.5282%" height="15" fill="rgb(241,220,44)" fg:x="236" fg:w="3665"/><text x="0.4128%" y="639.50">HI..</text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isAutoShowHideAllowed] (24 samples, 0.02%)</title><rect x="2.7062%" y="549" width="0.0166%" height="15" fill="rgb(235,28,35)" fg:x="3923" fg:w="24"/><text x="2.9562%" y="559.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isMenuBarOwner] (21 samples, 0.01%)</title><rect x="2.7082%" y="533" width="0.0145%" height="15" fill="rgb(210,56,17)" fg:x="3926" fg:w="21"/><text x="2.9582%" y="543.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachWindowDo:withBlock:] (19 samples, 0.01%)</title><rect x="2.7227%" y="517" width="0.0131%" height="15" fill="rgb(224,130,29)" fg:x="3947" fg:w="19"/><text x="2.9727%" y="527.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachBoundsDo:] (20 samples, 0.01%)</title><rect x="2.7227%" y="533" width="0.0138%" height="15" fill="rgb(235,212,8)" fg:x="3947" fg:w="20"/><text x="2.9727%" y="543.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isMouseInMenuBarHotRegion:makeVisibleBoundsPtr:keepVisibleBoundsPtr:displayPtr:] (23 samples, 0.02%)</title><rect x="2.7227%" y="549" width="0.0159%" height="15" fill="rgb(223,33,50)" fg:x="3947" fg:w="23"/><text x="2.9727%" y="559.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _updateAutoShowVisibility:immediateChanges:] (49 samples, 0.03%)</title><rect x="2.7062%" y="565" width="0.0338%" height="15" fill="rgb(219,149,13)" fg:x="3923" fg:w="49"/><text x="2.9562%" y="575.50"></text></g><g><title>AppKit`__64+[NSMenuBarPresentationInstance _autoShowHideObserverWithEvent:]_block_invoke (55 samples, 0.04%)</title><rect x="2.7027%" y="581" width="0.0379%" height="15" fill="rgb(250,156,29)" fg:x="3918" fg:w="55"/><text x="2.9527%" y="591.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance forEachMenuBarDo:] (58 samples, 0.04%)</title><rect x="2.7020%" y="597" width="0.0400%" height="15" fill="rgb(216,193,19)" fg:x="3917" fg:w="58"/><text x="2.9520%" y="607.50"></text></g><g><title>AppKit`-[NSMenuBarTrackingSession handleEvent:] (72 samples, 0.05%)</title><rect x="2.7020%" y="613" width="0.0497%" height="15" fill="rgb(216,135,14)" fg:x="3917" fg:w="72"/><text x="2.9520%" y="623.50"></text></g><g><title>AppKit`__61-[NSMenuBarTrackingSession _addMouseDownEventMonitorIfNeeded]_block_invoke (75 samples, 0.05%)</title><rect x="2.7007%" y="629" width="0.0517%" height="15" fill="rgb(241,47,5)" fg:x="3915" fg:w="75"/><text x="2.9507%" y="639.50"></text></g><g><title>AppKit`_NSSendEventToDequeuingObservers (78 samples, 0.05%)</title><rect x="2.7007%" y="645" width="0.0538%" height="15" fill="rgb(233,42,35)" fg:x="3915" fg:w="78"/><text x="2.9507%" y="655.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (3,853 samples, 2.66%)</title><rect x="0.1042%" y="661" width="2.6579%" height="15" fill="rgb(231,13,6)" fg:x="151" fg:w="3853"/><text x="0.3542%" y="671.50">Ap..</text></g><g><title>AppKit`-[NSApplication run] (4,006 samples, 2.76%)</title><rect x="0.0062%" y="677" width="2.7634%" height="15" fill="rgb(207,181,40)" fg:x="9" fg:w="4006"/><text x="0.2562%" y="687.50">Ap..</text></g><g><title>main`bevy_app::app::App::run (4,014 samples, 2.77%)</title><rect x="0.0021%" y="757" width="2.7689%" height="15" fill="rgb(254,173,49)" fg:x="3" fg:w="4014"/><text x="0.2521%" y="767.50">ma..</text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (4,014 samples, 2.77%)</title><rect x="0.0021%" y="741" width="2.7689%" height="15" fill="rgb(221,1,38)" fg:x="3" fg:w="4014"/><text x="0.2521%" y="751.50">ma..</text></g><g><title>main`bevy_winit::winit_runner (4,014 samples, 2.77%)</title><rect x="0.0021%" y="725" width="2.7689%" height="15" fill="rgb(206,124,46)" fg:x="3" fg:w="4014"/><text x="0.2521%" y="735.50">ma..</text></g><g><title>main`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (4,014 samples, 2.77%)</title><rect x="0.0021%" y="709" width="2.7689%" height="15" fill="rgb(249,21,11)" fg:x="3" fg:w="4014"/><text x="0.2521%" y="719.50">ma..</text></g><g><title>main`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (4,009 samples, 2.77%)</title><rect x="0.0055%" y="693" width="2.7655%" height="15" fill="rgb(222,201,40)" fg:x="8" fg:w="4009"/><text x="0.2555%" y="703.50">ma..</text></g><g><title>main`&lt;bevy_core_pipeline::CorePipelinePlugin as bevy_app::plugin::Plugin&gt;::build (18 samples, 0.01%)</title><rect x="2.7800%" y="725" width="0.0124%" height="15" fill="rgb(235,61,29)" fg:x="4030" fg:w="18"/><text x="3.0300%" y="735.50"></text></g><g><title>main`bevy_app::app::App::add_boxed_plugin (18 samples, 0.01%)</title><rect x="2.7800%" y="709" width="0.0124%" height="15" fill="rgb(219,207,3)" fg:x="4030" fg:w="18"/><text x="3.0300%" y="719.50"></text></g><g><title>main`&lt;bevy_core_pipeline::tonemapping::TonemappingPlugin as bevy_app::plugin::Plugin&gt;::build (17 samples, 0.01%)</title><rect x="2.7807%" y="693" width="0.0117%" height="15" fill="rgb(222,56,46)" fg:x="4031" fg:w="17"/><text x="3.0307%" y="703.50"></text></g><g><title>main`bevy_core_pipeline::tonemapping::setup_tonemapping_lut_image (17 samples, 0.01%)</title><rect x="2.7807%" y="677" width="0.0117%" height="15" fill="rgb(239,76,54)" fg:x="4031" fg:w="17"/><text x="3.0307%" y="687.50"></text></g><g><title>main`bevy_render::texture::image::Image::from_buffer (17 samples, 0.01%)</title><rect x="2.7807%" y="661" width="0.0117%" height="15" fill="rgb(231,124,27)" fg:x="4031" fg:w="17"/><text x="3.0307%" y="671.50"></text></g><g><title>main`bevy_render::texture::ktx2::ktx2_buffer_to_image (16 samples, 0.01%)</title><rect x="2.7814%" y="645" width="0.0110%" height="15" fill="rgb(249,195,6)" fg:x="4032" fg:w="16"/><text x="3.0314%" y="655.50"></text></g><g><title>dyld`start (4,071 samples, 2.81%)</title><rect x="0.0000%" y="853" width="2.8083%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="4071"/><text x="0.2500%" y="863.50">dy..</text></g><g><title>main`main (4,071 samples, 2.81%)</title><rect x="0.0000%" y="837" width="2.8083%" height="15" fill="rgb(206,201,31)" fg:x="0" fg:w="4071"/><text x="0.2500%" y="847.50">ma..</text></g><g><title>main`std::rt::lang_start_internal (4,071 samples, 2.81%)</title><rect x="0.0000%" y="821" width="2.8083%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="4071"/><text x="0.2500%" y="831.50">ma..</text></g><g><title>main`std::rt::lang_start::_{{closure}} (4,071 samples, 2.81%)</title><rect x="0.0000%" y="805" width="2.8083%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="4071"/><text x="0.2500%" y="815.50">ma..</text></g><g><title>main`std::sys_common::backtrace::__rust_begin_short_backtrace (4,071 samples, 2.81%)</title><rect x="0.0000%" y="789" width="2.8083%" height="15" fill="rgb(215,211,37)" fg:x="0" fg:w="4071"/><text x="0.2500%" y="799.50">ma..</text></g><g><title>main`main::main (4,071 samples, 2.81%)</title><rect x="0.0000%" y="773" width="2.8083%" height="15" fill="rgb(241,128,51)" fg:x="0" fg:w="4071"/><text x="0.2500%" y="783.50">ma..</text></g><g><title>main`bevy_app::plugin_group::PluginGroupBuilder::finish (54 samples, 0.04%)</title><rect x="2.7710%" y="757" width="0.0373%" height="15" fill="rgb(227,165,31)" fg:x="4017" fg:w="54"/><text x="3.0210%" y="767.50"></text></g><g><title>main`bevy_app::app::App::add_boxed_plugin (54 samples, 0.04%)</title><rect x="2.7710%" y="741" width="0.0373%" height="15" fill="rgb(228,167,24)" fg:x="4017" fg:w="54"/><text x="3.0210%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (660 samples, 0.46%)</title><rect x="2.8476%" y="837" width="0.4553%" height="15" fill="rgb(228,143,12)" fg:x="4128" fg:w="660"/><text x="3.0976%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (25 samples, 0.02%)</title><rect x="3.3153%" y="805" width="0.0172%" height="15" fill="rgb(249,149,8)" fg:x="4806" fg:w="25"/><text x="3.5653%" y="815.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (17 samples, 0.01%)</title><rect x="3.3622%" y="709" width="0.0117%" height="15" fill="rgb(243,35,44)" fg:x="4874" fg:w="17"/><text x="3.6122%" y="719.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (54 samples, 0.04%)</title><rect x="3.3512%" y="725" width="0.0373%" height="15" fill="rgb(246,89,9)" fg:x="4858" fg:w="54"/><text x="3.6012%" y="735.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (76 samples, 0.05%)</title><rect x="3.3456%" y="741" width="0.0524%" height="15" fill="rgb(233,213,13)" fg:x="4850" fg:w="76"/><text x="3.5956%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (84 samples, 0.06%)</title><rect x="3.3449%" y="757" width="0.0579%" height="15" fill="rgb(233,141,41)" fg:x="4849" fg:w="84"/><text x="3.5949%" y="767.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (76 samples, 0.05%)</title><rect x="3.4512%" y="533" width="0.0524%" height="15" fill="rgb(239,167,4)" fg:x="5003" fg:w="76"/><text x="3.7012%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (72 samples, 0.05%)</title><rect x="3.4539%" y="517" width="0.0497%" height="15" fill="rgb(209,217,16)" fg:x="5007" fg:w="72"/><text x="3.7039%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (72 samples, 0.05%)</title><rect x="3.4539%" y="501" width="0.0497%" height="15" fill="rgb(219,88,35)" fg:x="5007" fg:w="72"/><text x="3.7039%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (72 samples, 0.05%)</title><rect x="3.4539%" y="485" width="0.0497%" height="15" fill="rgb(220,193,23)" fg:x="5007" fg:w="72"/><text x="3.7039%" y="495.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (100 samples, 0.07%)</title><rect x="3.4422%" y="549" width="0.0690%" height="15" fill="rgb(230,90,52)" fg:x="4990" fg:w="100"/><text x="3.6922%" y="559.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (110 samples, 0.08%)</title><rect x="3.4401%" y="565" width="0.0759%" height="15" fill="rgb(252,106,19)" fg:x="4987" fg:w="110"/><text x="3.6901%" y="575.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (139 samples, 0.10%)</title><rect x="3.4353%" y="581" width="0.0959%" height="15" fill="rgb(206,74,20)" fg:x="4980" fg:w="139"/><text x="3.6853%" y="591.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (149 samples, 0.10%)</title><rect x="3.4298%" y="597" width="0.1028%" height="15" fill="rgb(230,138,44)" fg:x="4972" fg:w="149"/><text x="3.6798%" y="607.50"></text></g><g><title>Metal`MTLDispatchListApply (160 samples, 0.11%)</title><rect x="3.4284%" y="613" width="0.1104%" height="15" fill="rgb(235,182,43)" fg:x="4970" fg:w="160"/><text x="3.6784%" y="623.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (172 samples, 0.12%)</title><rect x="3.4250%" y="629" width="0.1186%" height="15" fill="rgb(242,16,51)" fg:x="4965" fg:w="172"/><text x="3.6750%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (18 samples, 0.01%)</title><rect x="3.5788%" y="549" width="0.0124%" height="15" fill="rgb(248,9,4)" fg:x="5188" fg:w="18"/><text x="3.8288%" y="559.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseCurrentResources (51 samples, 0.04%)</title><rect x="3.5567%" y="565" width="0.0352%" height="15" fill="rgb(210,31,22)" fg:x="5156" fg:w="51"/><text x="3.8067%" y="575.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (101 samples, 0.07%)</title><rect x="3.5512%" y="581" width="0.0697%" height="15" fill="rgb(239,54,39)" fg:x="5148" fg:w="101"/><text x="3.8012%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (37 samples, 0.03%)</title><rect x="3.5954%" y="565" width="0.0255%" height="15" fill="rgb(230,99,41)" fg:x="5212" fg:w="37"/><text x="3.8454%" y="575.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (113 samples, 0.08%)</title><rect x="3.5498%" y="597" width="0.0779%" height="15" fill="rgb(253,106,12)" fg:x="5146" fg:w="113"/><text x="3.7998%" y="607.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (128 samples, 0.09%)</title><rect x="3.5498%" y="613" width="0.0883%" height="15" fill="rgb(213,46,41)" fg:x="5146" fg:w="128"/><text x="3.7998%" y="623.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (145 samples, 0.10%)</title><rect x="3.5436%" y="629" width="0.1000%" height="15" fill="rgb(215,133,35)" fg:x="5137" fg:w="145"/><text x="3.7936%" y="639.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (33 samples, 0.02%)</title><rect x="3.6492%" y="629" width="0.0228%" height="15" fill="rgb(213,28,5)" fg:x="5290" fg:w="33"/><text x="3.8992%" y="639.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (382 samples, 0.26%)</title><rect x="3.4132%" y="645" width="0.2635%" height="15" fill="rgb(215,77,49)" fg:x="4948" fg:w="382"/><text x="3.6632%" y="655.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (399 samples, 0.28%)</title><rect x="3.4125%" y="661" width="0.2752%" height="15" fill="rgb(248,100,22)" fg:x="4947" fg:w="399"/><text x="3.6625%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (401 samples, 0.28%)</title><rect x="3.4119%" y="677" width="0.2766%" height="15" fill="rgb(208,67,9)" fg:x="4946" fg:w="401"/><text x="3.6619%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (409 samples, 0.28%)</title><rect x="3.4098%" y="693" width="0.2821%" height="15" fill="rgb(219,133,21)" fg:x="4943" fg:w="409"/><text x="3.6598%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (410 samples, 0.28%)</title><rect x="3.4098%" y="709" width="0.2828%" height="15" fill="rgb(246,46,29)" fg:x="4943" fg:w="410"/><text x="3.6598%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (421 samples, 0.29%)</title><rect x="3.4029%" y="757" width="0.2904%" height="15" fill="rgb(246,185,52)" fg:x="4933" fg:w="421"/><text x="3.6529%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (418 samples, 0.29%)</title><rect x="3.4050%" y="741" width="0.2883%" height="15" fill="rgb(252,136,11)" fg:x="4936" fg:w="418"/><text x="3.6550%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (415 samples, 0.29%)</title><rect x="3.4070%" y="725" width="0.2863%" height="15" fill="rgb(219,138,53)" fg:x="4939" fg:w="415"/><text x="3.6570%" y="735.50"></text></g><g><title>IOKit`io_connect_method (1,681 samples, 1.16%)</title><rect x="3.7278%" y="613" width="1.1596%" height="15" fill="rgb(211,51,23)" fg:x="5404" fg:w="1681"/><text x="3.9778%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,681 samples, 1.16%)</title><rect x="3.7278%" y="597" width="1.1596%" height="15" fill="rgb(247,221,28)" fg:x="5404" fg:w="1681"/><text x="3.9778%" y="607.50"></text></g><g><title>IOKit`IOConnectCallMethod (1,683 samples, 1.16%)</title><rect x="3.7278%" y="629" width="1.1610%" height="15" fill="rgb(251,222,45)" fg:x="5404" fg:w="1683"/><text x="3.9778%" y="639.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (1,688 samples, 1.16%)</title><rect x="3.7257%" y="645" width="1.1644%" height="15" fill="rgb(217,162,53)" fg:x="5401" fg:w="1688"/><text x="3.9757%" y="655.50"></text></g><g><title>IOKit`iokit_user_client_trap (164 samples, 0.11%)</title><rect x="4.8901%" y="645" width="0.1131%" height="15" fill="rgb(229,93,14)" fg:x="7089" fg:w="164"/><text x="5.1401%" y="655.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (1,873 samples, 1.29%)</title><rect x="3.7140%" y="677" width="1.2920%" height="15" fill="rgb(209,67,49)" fg:x="5384" fg:w="1873"/><text x="3.9640%" y="687.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (1,871 samples, 1.29%)</title><rect x="3.7154%" y="661" width="1.2907%" height="15" fill="rgb(213,87,29)" fg:x="5386" fg:w="1871"/><text x="3.9654%" y="671.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (1,892 samples, 1.31%)</title><rect x="3.7071%" y="693" width="1.3051%" height="15" fill="rgb(205,151,52)" fg:x="5374" fg:w="1892"/><text x="3.9571%" y="703.50"></text></g><g><title>QuartzCore`invoke_collectable_callback(void*) (19 samples, 0.01%)</title><rect x="5.0157%" y="645" width="0.0131%" height="15" fill="rgb(253,215,39)" fg:x="7271" fg:w="19"/><text x="5.2657%" y="655.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.11074) (19 samples, 0.01%)</title><rect x="5.0157%" y="629" width="0.0131%" height="15" fill="rgb(221,220,41)" fg:x="7271" fg:w="19"/><text x="5.2657%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (17 samples, 0.01%)</title><rect x="5.0171%" y="613" width="0.0117%" height="15" fill="rgb(218,133,21)" fg:x="7273" fg:w="17"/><text x="5.2671%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (17 samples, 0.01%)</title><rect x="5.0171%" y="597" width="0.0117%" height="15" fill="rgb(221,193,43)" fg:x="7273" fg:w="17"/><text x="5.2671%" y="607.50"></text></g><g><title>QuartzCore`_XImageQueueCollectable (21 samples, 0.01%)</title><rect x="5.0150%" y="661" width="0.0145%" height="15" fill="rgb(240,128,52)" fg:x="7270" fg:w="21"/><text x="5.2650%" y="671.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (15 samples, 0.01%)</title><rect x="5.0350%" y="629" width="0.0103%" height="15" fill="rgb(253,114,12)" fg:x="7299" fg:w="15"/><text x="5.2850%" y="639.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (31 samples, 0.02%)</title><rect x="5.0295%" y="645" width="0.0214%" height="15" fill="rgb(215,223,47)" fg:x="7291" fg:w="31"/><text x="5.2795%" y="655.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (32 samples, 0.02%)</title><rect x="5.0295%" y="661" width="0.0221%" height="15" fill="rgb(248,225,23)" fg:x="7291" fg:w="32"/><text x="5.2795%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (35 samples, 0.02%)</title><rect x="5.0523%" y="645" width="0.0241%" height="15" fill="rgb(250,108,0)" fg:x="7324" fg:w="35"/><text x="5.3023%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (33 samples, 0.02%)</title><rect x="5.0536%" y="629" width="0.0228%" height="15" fill="rgb(228,208,7)" fg:x="7326" fg:w="33"/><text x="5.3036%" y="639.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (37 samples, 0.03%)</title><rect x="5.0516%" y="661" width="0.0255%" height="15" fill="rgb(244,45,10)" fg:x="7323" fg:w="37"/><text x="5.3016%" y="671.50"></text></g><g><title>QuartzCore`CARenderClient_server (95 samples, 0.07%)</title><rect x="5.0136%" y="677" width="0.0655%" height="15" fill="rgb(207,125,25)" fg:x="7268" fg:w="95"/><text x="5.2636%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (48 samples, 0.03%)</title><rect x="5.0819%" y="677" width="0.0331%" height="15" fill="rgb(210,195,18)" fg:x="7367" fg:w="48"/><text x="5.3319%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (48 samples, 0.03%)</title><rect x="5.0819%" y="661" width="0.0331%" height="15" fill="rgb(249,80,12)" fg:x="7367" fg:w="48"/><text x="5.3319%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (48 samples, 0.03%)</title><rect x="5.0819%" y="645" width="0.0331%" height="15" fill="rgb(221,65,9)" fg:x="7367" fg:w="48"/><text x="5.3319%" y="655.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (149 samples, 0.10%)</title><rect x="5.0136%" y="693" width="0.1028%" height="15" fill="rgb(235,49,36)" fg:x="7268" fg:w="149"/><text x="5.2636%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2,054 samples, 1.42%)</title><rect x="3.7057%" y="709" width="1.4169%" height="15" fill="rgb(225,32,20)" fg:x="5372" fg:w="2054"/><text x="3.9557%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (2,071 samples, 1.43%)</title><rect x="3.6954%" y="757" width="1.4286%" height="15" fill="rgb(215,141,46)" fg:x="5357" fg:w="2071"/><text x="3.9454%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (2,066 samples, 1.43%)</title><rect x="3.6988%" y="741" width="1.4252%" height="15" fill="rgb(250,160,47)" fg:x="5362" fg:w="2066"/><text x="3.9488%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (2,062 samples, 1.42%)</title><rect x="3.7016%" y="725" width="1.4224%" height="15" fill="rgb(216,222,40)" fg:x="5366" fg:w="2062"/><text x="3.9516%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (2,583 samples, 1.78%)</title><rect x="3.3436%" y="773" width="1.7818%" height="15" fill="rgb(234,217,39)" fg:x="4847" fg:w="2583"/><text x="3.5936%" y="783.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (2,600 samples, 1.79%)</title><rect x="3.3387%" y="789" width="1.7935%" height="15" fill="rgb(207,178,40)" fg:x="4840" fg:w="2600"/><text x="3.5887%" y="799.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (2,605 samples, 1.80%)</title><rect x="3.3360%" y="805" width="1.7970%" height="15" fill="rgb(221,136,13)" fg:x="4836" fg:w="2605"/><text x="3.5860%" y="815.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (2,651 samples, 1.83%)</title><rect x="3.3077%" y="821" width="1.8287%" height="15" fill="rgb(249,199,10)" fg:x="4795" fg:w="2651"/><text x="3.5577%" y="831.50">l..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (3,361 samples, 2.32%)</title><rect x="2.8186%" y="853" width="2.3185%" height="15" fill="rgb(249,222,13)" fg:x="4086" fg:w="3361"/><text x="3.0686%" y="863.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (2,658 samples, 1.83%)</title><rect x="3.3036%" y="837" width="1.8335%" height="15" fill="rgb(244,185,38)" fg:x="4789" fg:w="2658"/><text x="3.5536%" y="847.50">l..</text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (17 samples, 0.01%)</title><rect x="5.1764%" y="613" width="0.0117%" height="15" fill="rgb(236,202,9)" fg:x="7504" fg:w="17"/><text x="5.4264%" y="623.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (22 samples, 0.02%)</title><rect x="5.1750%" y="629" width="0.0152%" height="15" fill="rgb(250,229,37)" fg:x="7502" fg:w="22"/><text x="5.4250%" y="639.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (23 samples, 0.02%)</title><rect x="5.1750%" y="645" width="0.0159%" height="15" fill="rgb(206,174,23)" fg:x="7502" fg:w="23"/><text x="5.4250%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (72 samples, 0.05%)</title><rect x="5.1923%" y="645" width="0.0497%" height="15" fill="rgb(211,33,43)" fg:x="7527" fg:w="72"/><text x="5.4423%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (72 samples, 0.05%)</title><rect x="5.1923%" y="629" width="0.0497%" height="15" fill="rgb(245,58,50)" fg:x="7527" fg:w="72"/><text x="5.4423%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (72 samples, 0.05%)</title><rect x="5.1923%" y="613" width="0.0497%" height="15" fill="rgb(244,68,36)" fg:x="7527" fg:w="72"/><text x="5.4423%" y="623.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (112 samples, 0.08%)</title><rect x="5.1661%" y="661" width="0.0773%" height="15" fill="rgb(232,229,15)" fg:x="7489" fg:w="112"/><text x="5.4161%" y="671.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (134 samples, 0.09%)</title><rect x="5.1543%" y="693" width="0.0924%" height="15" fill="rgb(254,30,23)" fg:x="7472" fg:w="134"/><text x="5.4043%" y="703.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (134 samples, 0.09%)</title><rect x="5.1543%" y="677" width="0.0924%" height="15" fill="rgb(235,160,14)" fg:x="7472" fg:w="134"/><text x="5.4043%" y="687.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (154 samples, 0.11%)</title><rect x="5.1419%" y="709" width="0.1062%" height="15" fill="rgb(212,155,44)" fg:x="7454" fg:w="154"/><text x="5.3919%" y="719.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (157 samples, 0.11%)</title><rect x="5.1406%" y="725" width="0.1083%" height="15" fill="rgb(226,2,50)" fg:x="7452" fg:w="157"/><text x="5.3906%" y="735.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (162 samples, 0.11%)</title><rect x="5.1385%" y="757" width="0.1118%" height="15" fill="rgb(234,177,6)" fg:x="7449" fg:w="162"/><text x="5.3885%" y="767.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (162 samples, 0.11%)</title><rect x="5.1385%" y="741" width="0.1118%" height="15" fill="rgb(217,24,9)" fg:x="7449" fg:w="162"/><text x="5.3885%" y="751.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (163 samples, 0.11%)</title><rect x="5.1385%" y="773" width="0.1124%" height="15" fill="rgb(220,13,46)" fg:x="7449" fg:w="163"/><text x="5.3885%" y="783.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (34 samples, 0.02%)</title><rect x="5.2509%" y="773" width="0.0235%" height="15" fill="rgb(239,221,27)" fg:x="7612" fg:w="34"/><text x="5.5009%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (28 samples, 0.02%)</title><rect x="5.2551%" y="757" width="0.0193%" height="15" fill="rgb(222,198,25)" fg:x="7618" fg:w="28"/><text x="5.5051%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (28 samples, 0.02%)</title><rect x="5.2551%" y="741" width="0.0193%" height="15" fill="rgb(211,99,13)" fg:x="7618" fg:w="28"/><text x="5.5051%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (28 samples, 0.02%)</title><rect x="5.2551%" y="725" width="0.0193%" height="15" fill="rgb(232,111,31)" fg:x="7618" fg:w="28"/><text x="5.5051%" y="735.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (200 samples, 0.14%)</title><rect x="5.1378%" y="789" width="0.1380%" height="15" fill="rgb(245,82,37)" fg:x="7448" fg:w="200"/><text x="5.3878%" y="799.50"></text></g><g><title>AppKit`_NSEventThread (202 samples, 0.14%)</title><rect x="5.1371%" y="821" width="0.1393%" height="15" fill="rgb(227,149,46)" fg:x="7447" fg:w="202"/><text x="5.3871%" y="831.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (202 samples, 0.14%)</title><rect x="5.1371%" y="805" width="0.1393%" height="15" fill="rgb(218,36,50)" fg:x="7447" fg:w="202"/><text x="5.3871%" y="815.50"></text></g><g><title>main`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.01%)</title><rect x="5.4027%" y="709" width="0.0138%" height="15" fill="rgb(226,80,48)" fg:x="7832" fg:w="20"/><text x="5.6527%" y="719.50"></text></g><g><title>main`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_render_callback::_{{closure}} (302 samples, 0.21%)</title><rect x="5.3061%" y="725" width="0.2083%" height="15" fill="rgb(238,224,15)" fg:x="7692" fg:w="302"/><text x="5.5561%" y="735.50"></text></g><g><title>main`rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (137 samples, 0.09%)</title><rect x="5.4199%" y="709" width="0.0945%" height="15" fill="rgb(241,136,10)" fg:x="7857" fg:w="137"/><text x="5.6699%" y="719.50"></text></g><g><title>main`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.04%)</title><rect x="5.4758%" y="693" width="0.0386%" height="15" fill="rgb(208,32,45)" fg:x="7938" fg:w="56"/><text x="5.7258%" y="703.50"></text></g><g><title>CoreAudio`0x00000001085d2530 (348 samples, 0.24%)</title><rect x="5.3006%" y="741" width="0.2401%" height="15" fill="rgb(207,135,9)" fg:x="7684" fg:w="348"/><text x="5.5506%" y="751.50"></text></g><g><title>main`rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (36 samples, 0.02%)</title><rect x="5.5158%" y="725" width="0.0248%" height="15" fill="rgb(206,86,44)" fg:x="7996" fg:w="36"/><text x="5.7658%" y="735.50"></text></g><g><title>CoreAudio`0x00000001086d122c (371 samples, 0.26%)</title><rect x="5.2965%" y="757" width="0.2559%" height="15" fill="rgb(245,177,15)" fg:x="7678" fg:w="371"/><text x="5.5465%" y="767.50"></text></g><g><title>CoreAudio`0x00000001085d655c (390 samples, 0.27%)</title><rect x="5.2896%" y="773" width="0.2690%" height="15" fill="rgb(206,64,50)" fg:x="7668" fg:w="390"/><text x="5.5396%" y="783.50"></text></g><g><title>CoreAudio`HALB_MachPort::SendSimpleMessageWithSimpleReply (133 samples, 0.09%)</title><rect x="5.5655%" y="773" width="0.0917%" height="15" fill="rgb(234,36,40)" fg:x="8068" fg:w="133"/><text x="5.8155%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (132 samples, 0.09%)</title><rect x="5.5662%" y="757" width="0.0911%" height="15" fill="rgb(213,64,8)" fg:x="8069" fg:w="132"/><text x="5.8162%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (131 samples, 0.09%)</title><rect x="5.5669%" y="741" width="0.0904%" height="15" fill="rgb(210,75,36)" fg:x="8070" fg:w="131"/><text x="5.8169%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (129 samples, 0.09%)</title><rect x="5.5682%" y="725" width="0.0890%" height="15" fill="rgb(229,88,21)" fg:x="8072" fg:w="129"/><text x="5.8182%" y="735.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::IOWorkLoop (560 samples, 0.39%)</title><rect x="5.2771%" y="789" width="0.3863%" height="15" fill="rgb(252,204,47)" fg:x="7650" fg:w="560"/><text x="5.5271%" y="799.50"></text></g><g><title>CoreAudio`HALC_IOThread::Entry (572 samples, 0.39%)</title><rect x="5.2764%" y="821" width="0.3946%" height="15" fill="rgb(208,77,27)" fg:x="7649" fg:w="572"/><text x="5.5264%" y="831.50"></text></g><g><title>CoreAudio`invocation function for block in HALC_ProxyIOContext::HALC_ProxyIOContext (572 samples, 0.39%)</title><rect x="5.2764%" y="805" width="0.3946%" height="15" fill="rgb(221,76,26)" fg:x="7649" fg:w="572"/><text x="5.5264%" y="815.50"></text></g><g><title>libgomp.1.dylib`__aarch64_ldadd4_sync (15 samples, 0.01%)</title><rect x="5.6793%" y="805" width="0.0103%" height="15" fill="rgb(225,139,18)" fg:x="8233" fg:w="15"/><text x="5.9293%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (67 samples, 0.05%)</title><rect x="5.6896%" y="789" width="0.0462%" height="15" fill="rgb(230,137,11)" fg:x="8248" fg:w="67"/><text x="5.9396%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (66 samples, 0.05%)</title><rect x="5.6903%" y="773" width="0.0455%" height="15" fill="rgb(212,28,1)" fg:x="8249" fg:w="66"/><text x="5.9403%" y="783.50"></text></g><g><title>libgomp.1.dylib`gomp_barrier_wait (79 samples, 0.05%)</title><rect x="5.6896%" y="805" width="0.0545%" height="15" fill="rgb(248,164,17)" fg:x="8248" fg:w="79"/><text x="5.9396%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (4,686 samples, 3.23%)</title><rect x="5.7752%" y="773" width="3.2325%" height="15" fill="rgb(222,171,42)" fg:x="8372" fg:w="4686"/><text x="6.0252%" y="783.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (16 samples, 0.01%)</title><rect x="9.0222%" y="757" width="0.0110%" height="15" fill="rgb(243,84,45)" fg:x="13079" fg:w="16"/><text x="9.2722%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (172 samples, 0.12%)</title><rect x="9.0332%" y="757" width="0.1186%" height="15" fill="rgb(252,49,23)" fg:x="13095" fg:w="172"/><text x="9.2832%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (165 samples, 0.11%)</title><rect x="9.0380%" y="741" width="0.1138%" height="15" fill="rgb(215,19,7)" fg:x="13102" fg:w="165"/><text x="9.2880%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (225 samples, 0.16%)</title><rect x="9.0077%" y="773" width="0.1552%" height="15" fill="rgb(238,81,41)" fg:x="13058" fg:w="225"/><text x="9.2577%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (16 samples, 0.01%)</title><rect x="9.1519%" y="757" width="0.0110%" height="15" fill="rgb(210,199,37)" fg:x="13267" fg:w="16"/><text x="9.4019%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (67 samples, 0.05%)</title><rect x="9.1629%" y="773" width="0.0462%" height="15" fill="rgb(244,192,49)" fg:x="13283" fg:w="67"/><text x="9.4129%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (65 samples, 0.04%)</title><rect x="9.1643%" y="757" width="0.0448%" height="15" fill="rgb(226,211,11)" fg:x="13285" fg:w="65"/><text x="9.4143%" y="767.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (5,005 samples, 3.45%)</title><rect x="5.7641%" y="789" width="3.4526%" height="15" fill="rgb(236,162,54)" fg:x="8356" fg:w="5005"/><text x="6.0141%" y="799.50">lib..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (36 samples, 0.02%)</title><rect x="9.2167%" y="789" width="0.0248%" height="15" fill="rgb(220,229,9)" fg:x="13361" fg:w="36"/><text x="9.4667%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (161 samples, 0.11%)</title><rect x="9.2422%" y="789" width="0.1111%" height="15" fill="rgb(250,87,22)" fg:x="13398" fg:w="161"/><text x="9.4922%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (160 samples, 0.11%)</title><rect x="9.2429%" y="773" width="0.1104%" height="15" fill="rgb(239,43,17)" fg:x="13399" fg:w="160"/><text x="9.4929%" y="783.50"></text></g><g><title>libgomp.1.dylib`gomp_barrier_wait_end (5,251 samples, 3.62%)</title><rect x="5.7441%" y="805" width="3.6223%" height="15" fill="rgb(231,177,25)" fg:x="8327" fg:w="5251"/><text x="5.9941%" y="815.50">libg..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (17 samples, 0.01%)</title><rect x="9.3547%" y="789" width="0.0117%" height="15" fill="rgb(219,179,1)" fg:x="13561" fg:w="17"/><text x="9.6047%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (97 samples, 0.07%)</title><rect x="9.3685%" y="789" width="0.0669%" height="15" fill="rgb(238,219,53)" fg:x="13581" fg:w="97"/><text x="9.6185%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (95 samples, 0.07%)</title><rect x="9.3698%" y="773" width="0.0655%" height="15" fill="rgb(232,167,36)" fg:x="13583" fg:w="95"/><text x="9.6198%" y="783.50"></text></g><g><title>libgomp.1.dylib`gomp_team_barrier_wait (107 samples, 0.07%)</title><rect x="9.3678%" y="805" width="0.0738%" height="15" fill="rgb(244,19,51)" fg:x="13580" fg:w="107"/><text x="9.6178%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (4,836 samples, 3.34%)</title><rect x="9.4706%" y="773" width="3.3360%" height="15" fill="rgb(224,6,22)" fg:x="13729" fg:w="4836"/><text x="9.7206%" y="783.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (142 samples, 0.10%)</title><rect x="12.8259%" y="757" width="0.0980%" height="15" fill="rgb(224,145,5)" fg:x="18593" fg:w="142"/><text x="13.0759%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (138 samples, 0.10%)</title><rect x="12.8286%" y="741" width="0.0952%" height="15" fill="rgb(234,130,49)" fg:x="18597" fg:w="138"/><text x="13.0786%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (17 samples, 0.01%)</title><rect x="12.9238%" y="757" width="0.0117%" height="15" fill="rgb(254,6,2)" fg:x="18735" fg:w="17"/><text x="13.1738%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (188 samples, 0.13%)</title><rect x="12.8065%" y="773" width="0.1297%" height="15" fill="rgb(208,96,46)" fg:x="18565" fg:w="188"/><text x="13.0565%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (92 samples, 0.06%)</title><rect x="12.9369%" y="757" width="0.0635%" height="15" fill="rgb(239,3,39)" fg:x="18754" fg:w="92"/><text x="13.1869%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (94 samples, 0.06%)</title><rect x="12.9362%" y="773" width="0.0648%" height="15" fill="rgb(233,210,1)" fg:x="18753" fg:w="94"/><text x="13.1862%" y="783.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (5,127 samples, 3.54%)</title><rect x="9.4671%" y="789" width="3.5367%" height="15" fill="rgb(244,137,37)" fg:x="13724" fg:w="5127"/><text x="9.7171%" y="799.50">lib..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (135 samples, 0.09%)</title><rect x="13.0038%" y="789" width="0.0931%" height="15" fill="rgb(240,136,2)" fg:x="18851" fg:w="135"/><text x="13.2538%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (181 samples, 0.12%)</title><rect x="13.0976%" y="773" width="0.1249%" height="15" fill="rgb(239,18,37)" fg:x="18987" fg:w="181"/><text x="13.3476%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (183 samples, 0.13%)</title><rect x="13.0976%" y="789" width="0.1262%" height="15" fill="rgb(218,185,22)" fg:x="18987" fg:w="183"/><text x="13.3476%" y="799.50"></text></g><g><title>libgomp.1.dylib`gomp_team_barrier_wait_end (5,495 samples, 3.79%)</title><rect x="9.4416%" y="805" width="3.7906%" height="15" fill="rgb(225,218,4)" fg:x="13687" fg:w="5495"/><text x="9.6916%" y="815.50">libg..</text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_n_kernel_F320 (263 samples, 0.18%)</title><rect x="13.2701%" y="773" width="0.1814%" height="15" fill="rgb(230,182,32)" fg:x="19237" fg:w="263"/><text x="13.5201%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_n_kernel_F40 (18 samples, 0.01%)</title><rect x="13.4529%" y="773" width="0.0124%" height="15" fill="rgb(242,56,43)" fg:x="19502" fg:w="18"/><text x="13.7029%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_t_kernel_F1 (15 samples, 0.01%)</title><rect x="13.4695%" y="773" width="0.0103%" height="15" fill="rgb(233,99,24)" fg:x="19526" fg:w="15"/><text x="13.7195%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_t_kernel_F320 (528 samples, 0.36%)</title><rect x="13.4798%" y="773" width="0.3642%" height="15" fill="rgb(234,209,42)" fg:x="19541" fg:w="528"/><text x="13.7298%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_t_kernel_F_END (17 samples, 0.01%)</title><rect x="13.8440%" y="773" width="0.0117%" height="15" fill="rgb(227,7,12)" fg:x="20069" fg:w="17"/><text x="14.0940%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lsgemm_kernel_L1_M16_22 (19 samples, 0.01%)</title><rect x="13.8654%" y="773" width="0.0131%" height="15" fill="rgb(245,203,43)" fg:x="20100" fg:w="19"/><text x="14.1154%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lsgemm_tcopy_L8_M16_20 (29 samples, 0.02%)</title><rect x="13.8861%" y="773" width="0.0200%" height="15" fill="rgb(238,205,33)" fg:x="20130" fg:w="29"/><text x="14.1361%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`inner_thread (47 samples, 0.03%)</title><rect x="13.9075%" y="773" width="0.0324%" height="15" fill="rgb(231,56,7)" fg:x="20161" fg:w="47"/><text x="14.1575%" y="783.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_threads (986 samples, 0.68%)</title><rect x="13.2611%" y="789" width="0.6802%" height="15" fill="rgb(244,186,29)" fg:x="19224" fg:w="986"/><text x="13.5111%" y="799.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas._omp_fn.1 (1,049 samples, 0.72%)</title><rect x="13.2342%" y="805" width="0.7236%" height="15" fill="rgb(234,111,31)" fg:x="19185" fg:w="1049"/><text x="13.4842%" y="815.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`gemv_kernel (24 samples, 0.02%)</title><rect x="13.9413%" y="789" width="0.0166%" height="15" fill="rgb(241,149,10)" fg:x="20210" fg:w="24"/><text x="14.1913%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (260 samples, 0.18%)</title><rect x="13.9585%" y="805" width="0.1794%" height="15" fill="rgb(249,206,44)" fg:x="20235" fg:w="260"/><text x="14.2085%" y="815.50"></text></g><g><title>libgomp.1.dylib`gomp_thread_start (12,280 samples, 8.47%)</title><rect x="5.6710%" y="821" width="8.4710%" height="15" fill="rgb(251,153,30)" fg:x="8221" fg:w="12280"/><text x="5.9210%" y="831.50">libgomp.1.dy..</text></g><g><title>main`&lt;async_executor::Ticker as core::ops::drop::Drop&gt;::drop (30 samples, 0.02%)</title><rect x="14.1979%" y="645" width="0.0207%" height="15" fill="rgb(239,152,38)" fg:x="20582" fg:w="30"/><text x="14.4479%" y="655.50"></text></g><g><title>main`&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="14.2200%" y="645" width="0.0179%" height="15" fill="rgb(249,139,47)" fg:x="20614" fg:w="26"/><text x="14.4700%" y="655.50"></text></g><g><title>main`bevy_ecs::world::World::insert_or_spawn_batch (28 samples, 0.02%)</title><rect x="14.3414%" y="533" width="0.0193%" height="15" fill="rgb(244,64,35)" fg:x="20790" fg:w="28"/><text x="14.5914%" y="543.50"></text></g><g><title>main`bevy_ecs::system::commands::_::_&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (90 samples, 0.06%)</title><rect x="14.3007%" y="565" width="0.0621%" height="15" fill="rgb(216,46,15)" fg:x="20731" fg:w="90"/><text x="14.5507%" y="575.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once (76 samples, 0.05%)</title><rect x="14.3104%" y="549" width="0.0524%" height="15" fill="rgb(250,74,19)" fg:x="20745" fg:w="76"/><text x="14.5604%" y="559.50"></text></g><g><title>main`bevy_ecs::schedule::schedule::Schedule::apply_deferred (113 samples, 0.08%)</title><rect x="14.2972%" y="581" width="0.0779%" height="15" fill="rgb(249,42,33)" fg:x="20726" fg:w="113"/><text x="14.5472%" y="591.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once (18 samples, 0.01%)</title><rect x="14.3628%" y="565" width="0.0124%" height="15" fill="rgb(242,149,17)" fg:x="20821" fg:w="18"/><text x="14.6128%" y="575.50"></text></g><g><title>main`bevy_ecs::world::World::resource_scope (130 samples, 0.09%)</title><rect x="14.2876%" y="597" width="0.0897%" height="15" fill="rgb(244,29,21)" fg:x="20712" fg:w="130"/><text x="14.5376%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (231 samples, 0.16%)</title><rect x="14.4042%" y="549" width="0.1593%" height="15" fill="rgb(220,130,37)" fg:x="20881" fg:w="231"/><text x="14.6542%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (73 samples, 0.05%)</title><rect x="14.6663%" y="533" width="0.0504%" height="15" fill="rgb(211,67,2)" fg:x="21261" fg:w="73"/><text x="14.9163%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (70 samples, 0.05%)</title><rect x="14.6684%" y="517" width="0.0483%" height="15" fill="rgb(235,68,52)" fg:x="21264" fg:w="70"/><text x="14.9184%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (68 samples, 0.05%)</title><rect x="14.7325%" y="501" width="0.0469%" height="15" fill="rgb(246,142,3)" fg:x="21357" fg:w="68"/><text x="14.9825%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (70 samples, 0.05%)</title><rect x="14.7318%" y="517" width="0.0483%" height="15" fill="rgb(241,25,7)" fg:x="21356" fg:w="70"/><text x="14.9818%" y="527.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.06%)</title><rect x="14.7298%" y="533" width="0.0566%" height="15" fill="rgb(242,119,39)" fg:x="21353" fg:w="82"/><text x="14.9798%" y="543.50"></text></g><g><title>main`bevy_ecs::query::state::QueryState&lt;Q,F&gt;::new (18 samples, 0.01%)</title><rect x="14.7877%" y="533" width="0.0124%" height="15" fill="rgb(241,98,45)" fg:x="21437" fg:w="18"/><text x="15.0377%" y="543.50"></text></g><g><title>main`&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (345 samples, 0.24%)</title><rect x="14.5663%" y="549" width="0.2380%" height="15" fill="rgb(254,28,30)" fg:x="21116" fg:w="345"/><text x="14.8163%" y="559.50"></text></g><g><title>main`bevy_render::render_graph::graph::RenderGraph::update (19 samples, 0.01%)</title><rect x="14.8119%" y="549" width="0.0131%" height="15" fill="rgb(241,142,54)" fg:x="21472" fg:w="19"/><text x="15.0619%" y="559.50"></text></g><g><title>main`bevy_ecs::world::World::resource_scope (630 samples, 0.43%)</title><rect x="14.3917%" y="581" width="0.4346%" height="15" fill="rgb(222,85,15)" fg:x="20863" fg:w="630"/><text x="14.6417%" y="591.50"></text></g><g><title>main`bevy_render::render_graph::graph::RenderGraph::update (622 samples, 0.43%)</title><rect x="14.3973%" y="565" width="0.4291%" height="15" fill="rgb(210,85,47)" fg:x="20871" fg:w="622"/><text x="14.6473%" y="575.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G14X::VertexProgramVariant const*, AGX::G14X::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14X::Encoders, AGX::G14X::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G14X::Encoders, AGX::G14X::Classes&gt;&amp;, AGX::RenderDirtyBits (39 samples, 0.03%)</title><rect x="14.8677%" y="469" width="0.0269%" height="15" fill="rgb(224,206,25)" fg:x="21553" fg:w="39"/><text x="15.1177%" y="479.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (44 samples, 0.03%)</title><rect x="14.8657%" y="485" width="0.0304%" height="15" fill="rgb(243,201,19)" fg:x="21550" fg:w="44"/><text x="15.1157%" y="495.50"></text></g><g><title>AGXMetalG14X`AGX::ContextCommon&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::newCommand (19 samples, 0.01%)</title><rect x="14.9498%" y="389" width="0.0131%" height="15" fill="rgb(236,59,4)" fg:x="21672" fg:w="19"/><text x="15.1998%" y="399.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::beginRenderPass (34 samples, 0.02%)</title><rect x="14.9429%" y="405" width="0.0235%" height="15" fill="rgb(254,179,45)" fg:x="21662" fg:w="34"/><text x="15.1929%" y="415.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (86 samples, 0.06%)</title><rect x="14.9215%" y="421" width="0.0593%" height="15" fill="rgb(226,14,10)" fg:x="21631" fg:w="86"/><text x="15.1715%" y="431.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (108 samples, 0.07%)</title><rect x="14.9215%" y="437" width="0.0745%" height="15" fill="rgb(244,27,41)" fg:x="21631" fg:w="108"/><text x="15.1715%" y="447.50"></text></g><g><title>main`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (140 samples, 0.10%)</title><rect x="14.9119%" y="485" width="0.0966%" height="15" fill="rgb(235,35,32)" fg:x="21617" fg:w="140"/><text x="15.1619%" y="495.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (126 samples, 0.09%)</title><rect x="14.9215%" y="469" width="0.0869%" height="15" fill="rgb(218,68,31)" fg:x="21631" fg:w="126"/><text x="15.1715%" y="479.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (126 samples, 0.09%)</title><rect x="14.9215%" y="453" width="0.0869%" height="15" fill="rgb(207,120,37)" fg:x="21631" fg:w="126"/><text x="15.1715%" y="463.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (20 samples, 0.01%)</title><rect x="15.0222%" y="453" width="0.0138%" height="15" fill="rgb(227,98,0)" fg:x="21777" fg:w="20"/><text x="15.2722%" y="463.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (37 samples, 0.03%)</title><rect x="15.0195%" y="485" width="0.0255%" height="15" fill="rgb(207,7,3)" fg:x="21773" fg:w="37"/><text x="15.2695%" y="495.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (34 samples, 0.02%)</title><rect x="15.0216%" y="469" width="0.0235%" height="15" fill="rgb(206,98,19)" fg:x="21776" fg:w="34"/><text x="15.2716%" y="479.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (15 samples, 0.01%)</title><rect x="15.0491%" y="485" width="0.0103%" height="15" fill="rgb(217,5,26)" fg:x="21816" fg:w="15"/><text x="15.2991%" y="495.50"></text></g><g><title>main`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (307 samples, 0.21%)</title><rect x="14.8505%" y="501" width="0.2118%" height="15" fill="rgb(235,190,38)" fg:x="21528" fg:w="307"/><text x="15.1005%" y="511.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (318 samples, 0.22%)</title><rect x="14.8450%" y="533" width="0.2194%" height="15" fill="rgb(247,86,24)" fg:x="21520" fg:w="318"/><text x="15.0950%" y="543.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (318 samples, 0.22%)</title><rect x="14.8450%" y="517" width="0.2194%" height="15" fill="rgb(205,101,16)" fg:x="21520" fg:w="318"/><text x="15.0950%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,046 samples, 0.72%)</title><rect x="15.0712%" y="485" width="0.7216%" height="15" fill="rgb(246,168,33)" fg:x="21848" fg:w="1046"/><text x="15.3212%" y="495.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::blitCDMBuffer (28 samples, 0.02%)</title><rect x="15.7955%" y="437" width="0.0193%" height="15" fill="rgb(231,114,1)" fg:x="22898" fg:w="28"/><text x="16.0455%" y="447.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (35 samples, 0.02%)</title><rect x="15.7955%" y="453" width="0.0241%" height="15" fill="rgb(207,184,53)" fg:x="22898" fg:w="35"/><text x="16.0455%" y="463.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (43 samples, 0.03%)</title><rect x="15.7948%" y="469" width="0.0297%" height="15" fill="rgb(224,95,51)" fg:x="22897" fg:w="43"/><text x="16.0448%" y="479.50"></text></g><g><title>IOKit`io_connect_method (549 samples, 0.38%)</title><rect x="15.8431%" y="325" width="0.3787%" height="15" fill="rgb(212,188,45)" fg:x="22967" fg:w="549"/><text x="16.0931%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (546 samples, 0.38%)</title><rect x="15.8452%" y="309" width="0.3766%" height="15" fill="rgb(223,154,38)" fg:x="22970" fg:w="546"/><text x="16.0952%" y="319.50"></text></g><g><title>IOKit`IOConnectCallMethod (550 samples, 0.38%)</title><rect x="15.8431%" y="341" width="0.3794%" height="15" fill="rgb(251,22,52)" fg:x="22967" fg:w="550"/><text x="16.0931%" y="351.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (559 samples, 0.39%)</title><rect x="15.8376%" y="357" width="0.3856%" height="15" fill="rgb(229,209,22)" fg:x="22959" fg:w="559"/><text x="16.0876%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (568 samples, 0.39%)</title><rect x="15.8355%" y="373" width="0.3918%" height="15" fill="rgb(234,138,34)" fg:x="22956" fg:w="568"/><text x="16.0855%" y="383.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (579 samples, 0.40%)</title><rect x="15.8328%" y="405" width="0.3994%" height="15" fill="rgb(212,95,11)" fg:x="22952" fg:w="579"/><text x="16.0828%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (577 samples, 0.40%)</title><rect x="15.8342%" y="389" width="0.3980%" height="15" fill="rgb(240,179,47)" fg:x="22954" fg:w="577"/><text x="16.0842%" y="399.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (582 samples, 0.40%)</title><rect x="15.8321%" y="421" width="0.4015%" height="15" fill="rgb(240,163,11)" fg:x="22951" fg:w="582"/><text x="16.0821%" y="431.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (613 samples, 0.42%)</title><rect x="15.8245%" y="469" width="0.4229%" height="15" fill="rgb(236,37,12)" fg:x="22940" fg:w="613"/><text x="16.0745%" y="479.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (609 samples, 0.42%)</title><rect x="15.8273%" y="453" width="0.4201%" height="15" fill="rgb(232,164,16)" fg:x="22944" fg:w="609"/><text x="16.0773%" y="463.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (602 samples, 0.42%)</title><rect x="15.8321%" y="437" width="0.4153%" height="15" fill="rgb(244,205,15)" fg:x="22951" fg:w="602"/><text x="16.0821%" y="447.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (664 samples, 0.46%)</title><rect x="15.7928%" y="485" width="0.4580%" height="15" fill="rgb(223,117,47)" fg:x="22894" fg:w="664"/><text x="16.0428%" y="495.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (1,712 samples, 1.18%)</title><rect x="15.0705%" y="501" width="1.1810%" height="15" fill="rgb(244,107,35)" fg:x="21847" fg:w="1712"/><text x="15.3205%" y="511.50"></text></g><g><title>main`wgpu::Queue::write_buffer (1,715 samples, 1.18%)</title><rect x="15.0692%" y="533" width="1.1830%" height="15" fill="rgb(205,140,8)" fg:x="21845" fg:w="1715"/><text x="15.3192%" y="543.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (1,715 samples, 1.18%)</title><rect x="15.0692%" y="517" width="1.1830%" height="15" fill="rgb(228,84,46)" fg:x="21845" fg:w="1715"/><text x="15.3192%" y="527.50"></text></g><g><title>main`&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::run (2,068 samples, 1.43%)</title><rect x="14.8408%" y="549" width="1.4266%" height="15" fill="rgb(254,188,9)" fg:x="21514" fg:w="2068"/><text x="15.0908%" y="559.50"></text></g><g><title>AGXMetalG14X`AGX::Framebuffer&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::Framebuffer (36 samples, 0.02%)</title><rect x="16.3446%" y="389" width="0.0248%" height="15" fill="rgb(206,112,54)" fg:x="23694" fg:w="36"/><text x="16.5946%" y="399.50"></text></g><g><title>AGXMetalG14X`AGX::FramebufferGen3_3&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::FramebufferGen3_3 (40 samples, 0.03%)</title><rect x="16.3426%" y="405" width="0.0276%" height="15" fill="rgb(216,84,49)" fg:x="23691" fg:w="40"/><text x="16.5926%" y="415.50"></text></g><g><title>AGXMetalG14X`AGX::DataBufferAllocator&lt;34ul&gt;::initializeDataBuffer (20 samples, 0.01%)</title><rect x="16.3777%" y="373" width="0.0138%" height="15" fill="rgb(214,194,35)" fg:x="23742" fg:w="20"/><text x="16.6277%" y="383.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (17 samples, 0.01%)</title><rect x="16.3798%" y="357" width="0.0117%" height="15" fill="rgb(249,28,3)" fg:x="23745" fg:w="17"/><text x="16.6298%" y="367.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginSegment (15 samples, 0.01%)</title><rect x="16.3922%" y="373" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="23763" fg:w="15"/><text x="16.6422%" y="383.50"></text></g><g><title>AGXMetalG14X`AGX::ContextCommon&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::newCommand (41 samples, 0.03%)</title><rect x="16.3771%" y="389" width="0.0283%" height="15" fill="rgb(245,217,50)" fg:x="23741" fg:w="41"/><text x="16.6271%" y="399.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::beginRenderPass (75 samples, 0.05%)</title><rect x="16.3708%" y="405" width="0.0517%" height="15" fill="rgb(213,201,24)" fg:x="23732" fg:w="75"/><text x="16.6208%" y="415.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (170 samples, 0.12%)</title><rect x="16.3177%" y="421" width="0.1173%" height="15" fill="rgb(248,116,28)" fg:x="23655" fg:w="170"/><text x="16.5677%" y="431.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (199 samples, 0.14%)</title><rect x="16.3164%" y="437" width="0.1373%" height="15" fill="rgb(219,72,43)" fg:x="23653" fg:w="199"/><text x="16.5664%" y="447.50"></text></g><g><title>main`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (258 samples, 0.18%)</title><rect x="16.2929%" y="485" width="0.1780%" height="15" fill="rgb(209,138,14)" fg:x="23619" fg:w="258"/><text x="16.5429%" y="495.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (234 samples, 0.16%)</title><rect x="16.3095%" y="469" width="0.1614%" height="15" fill="rgb(222,18,33)" fg:x="23643" fg:w="234"/><text x="16.5595%" y="479.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (225 samples, 0.16%)</title><rect x="16.3157%" y="453" width="0.1552%" height="15" fill="rgb(213,199,7)" fg:x="23652" fg:w="225"/><text x="16.5657%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (15 samples, 0.01%)</title><rect x="16.4847%" y="421" width="0.0103%" height="15" fill="rgb(250,110,10)" fg:x="23897" fg:w="15"/><text x="16.7347%" y="431.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (27 samples, 0.02%)</title><rect x="16.4819%" y="437" width="0.0186%" height="15" fill="rgb(248,123,6)" fg:x="23893" fg:w="27"/><text x="16.7319%" y="447.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (46 samples, 0.03%)</title><rect x="16.4819%" y="453" width="0.0317%" height="15" fill="rgb(206,91,31)" fg:x="23893" fg:w="46"/><text x="16.7319%" y="463.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (71 samples, 0.05%)</title><rect x="16.4798%" y="485" width="0.0490%" height="15" fill="rgb(211,154,13)" fg:x="23890" fg:w="71"/><text x="16.7298%" y="495.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (68 samples, 0.05%)</title><rect x="16.4819%" y="469" width="0.0469%" height="15" fill="rgb(225,148,7)" fg:x="23893" fg:w="68"/><text x="16.7319%" y="479.50"></text></g><g><title>main`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (363 samples, 0.25%)</title><rect x="16.2791%" y="501" width="0.2504%" height="15" fill="rgb(220,160,43)" fg:x="23599" fg:w="363"/><text x="16.5291%" y="511.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (372 samples, 0.26%)</title><rect x="16.2743%" y="517" width="0.2566%" height="15" fill="rgb(213,52,39)" fg:x="23592" fg:w="372"/><text x="16.5243%" y="527.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (373 samples, 0.26%)</title><rect x="16.2743%" y="533" width="0.2573%" height="15" fill="rgb(243,137,7)" fg:x="23592" fg:w="373"/><text x="16.5243%" y="543.50"></text></g><g><title>main`&lt;bevy_render::camera::camera_driver_node::CameraDriverNode as bevy_render::render_graph::node::Node&gt;::run (413 samples, 0.28%)</title><rect x="16.2674%" y="549" width="0.2849%" height="15" fill="rgb(230,79,13)" fg:x="23582" fg:w="413"/><text x="16.5174%" y="559.50"></text></g><g><title>main`wgpu::Device::create_command_encoder (19 samples, 0.01%)</title><rect x="16.5392%" y="533" width="0.0131%" height="15" fill="rgb(247,105,23)" fg:x="23976" fg:w="19"/><text x="16.7892%" y="543.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (19 samples, 0.01%)</title><rect x="16.5392%" y="517" width="0.0131%" height="15" fill="rgb(223,179,41)" fg:x="23976" fg:w="19"/><text x="16.7892%" y="527.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_command_encoder (19 samples, 0.01%)</title><rect x="16.5392%" y="501" width="0.0131%" height="15" fill="rgb(218,9,34)" fg:x="23976" fg:w="19"/><text x="16.7892%" y="511.50"></text></g><g><title>main`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (2,510 samples, 1.73%)</title><rect x="14.8346%" y="565" width="1.7315%" height="15" fill="rgb(222,106,8)" fg:x="21505" fg:w="2510"/><text x="15.0846%" y="575.50"></text></g><g><title>AGXMetalG14X`AGX::RenderContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::endRenderPassCommon (37 samples, 0.03%)</title><rect x="16.6185%" y="437" width="0.0255%" height="15" fill="rgb(211,220,0)" fg:x="24091" fg:w="37"/><text x="16.8685%" y="447.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext deferredEndEncoding:] (49 samples, 0.03%)</title><rect x="16.6178%" y="453" width="0.0338%" height="15" fill="rgb(229,52,16)" fg:x="24090" fg:w="49"/><text x="16.8678%" y="463.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer commitEncoder] (74 samples, 0.05%)</title><rect x="16.6054%" y="469" width="0.0510%" height="15" fill="rgb(212,155,18)" fg:x="24072" fg:w="74"/><text x="16.8554%" y="479.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (24 samples, 0.02%)</title><rect x="16.6599%" y="453" width="0.0166%" height="15" fill="rgb(242,21,14)" fg:x="24151" fg:w="24"/><text x="16.9099%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (47 samples, 0.03%)</title><rect x="16.6771%" y="437" width="0.0324%" height="15" fill="rgb(222,19,48)" fg:x="24176" fg:w="47"/><text x="16.9271%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (47 samples, 0.03%)</title><rect x="16.6771%" y="421" width="0.0324%" height="15" fill="rgb(232,45,27)" fg:x="24176" fg:w="47"/><text x="16.9271%" y="431.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (53 samples, 0.04%)</title><rect x="16.6771%" y="453" width="0.0366%" height="15" fill="rgb(249,103,42)" fg:x="24176" fg:w="53"/><text x="16.9271%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (90 samples, 0.06%)</title><rect x="16.6585%" y="469" width="0.0621%" height="15" fill="rgb(246,81,33)" fg:x="24149" fg:w="90"/><text x="16.9085%" y="479.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer commit] (182 samples, 0.13%)</title><rect x="16.6047%" y="485" width="0.1255%" height="15" fill="rgb(252,33,42)" fg:x="24071" fg:w="182"/><text x="16.8547%" y="495.50"></text></g><g><title>main`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (198 samples, 0.14%)</title><rect x="16.6012%" y="517" width="0.1366%" height="15" fill="rgb(209,212,41)" fg:x="24066" fg:w="198"/><text x="16.8512%" y="527.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (194 samples, 0.13%)</title><rect x="16.6040%" y="501" width="0.1338%" height="15" fill="rgb(207,154,6)" fg:x="24070" fg:w="194"/><text x="16.8540%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (16 samples, 0.01%)</title><rect x="16.7744%" y="453" width="0.0110%" height="15" fill="rgb(223,64,47)" fg:x="24317" fg:w="16"/><text x="17.0244%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (21 samples, 0.01%)</title><rect x="16.7737%" y="469" width="0.0145%" height="15" fill="rgb(211,161,38)" fg:x="24316" fg:w="21"/><text x="17.0237%" y="479.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer dealloc] (28 samples, 0.02%)</title><rect x="16.7709%" y="485" width="0.0193%" height="15" fill="rgb(219,138,40)" fg:x="24312" fg:w="28"/><text x="17.0209%" y="495.50"></text></g><g><title>main`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (51 samples, 0.04%)</title><rect x="16.7668%" y="501" width="0.0352%" height="15" fill="rgb(241,228,46)" fg:x="24306" fg:w="51"/><text x="17.0168%" y="511.50"></text></g><g><title>main`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (28 samples, 0.02%)</title><rect x="16.8020%" y="501" width="0.0193%" height="15" fill="rgb(223,209,38)" fg:x="24357" fg:w="28"/><text x="17.0520%" y="511.50"></text></g><g><title>IOKit`iokit_user_client_trap (433 samples, 0.30%)</title><rect x="16.8372%" y="405" width="0.2987%" height="15" fill="rgb(236,164,45)" fg:x="24408" fg:w="433"/><text x="17.0872%" y="415.50"></text></g><g><title>CoreFoundation`_CFRelease (441 samples, 0.30%)</title><rect x="16.8337%" y="421" width="0.3042%" height="15" fill="rgb(231,15,5)" fg:x="24403" fg:w="441"/><text x="17.0837%" y="431.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (16 samples, 0.01%)</title><rect x="17.1386%" y="421" width="0.0110%" height="15" fill="rgb(252,35,15)" fg:x="24845" fg:w="16"/><text x="17.3886%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (474 samples, 0.33%)</title><rect x="16.8303%" y="437" width="0.3270%" height="15" fill="rgb(248,181,18)" fg:x="24398" fg:w="474"/><text x="17.0803%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (492 samples, 0.34%)</title><rect x="16.8241%" y="453" width="0.3394%" height="15" fill="rgb(233,39,42)" fg:x="24389" fg:w="492"/><text x="17.0741%" y="463.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer dealloc] (499 samples, 0.34%)</title><rect x="16.8241%" y="469" width="0.3442%" height="15" fill="rgb(238,110,33)" fg:x="24389" fg:w="499"/><text x="17.0741%" y="479.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBuffer dealloc] (503 samples, 0.35%)</title><rect x="16.8220%" y="485" width="0.3470%" height="15" fill="rgb(233,195,10)" fg:x="24386" fg:w="503"/><text x="17.0720%" y="495.50"></text></g><g><title>main`wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (505 samples, 0.35%)</title><rect x="16.8213%" y="501" width="0.3484%" height="15" fill="rgb(254,105,3)" fg:x="24385" fg:w="505"/><text x="17.0713%" y="511.50"></text></g><g><title>main`wgpu_core::device::Device&lt;A&gt;::maintain (607 samples, 0.42%)</title><rect x="16.7537%" y="517" width="0.4187%" height="15" fill="rgb(221,225,9)" fg:x="24287" fg:w="607"/><text x="17.0037%" y="527.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (17 samples, 0.01%)</title><rect x="17.1917%" y="485" width="0.0117%" height="15" fill="rgb(224,227,45)" fg:x="24922" fg:w="17"/><text x="17.4417%" y="495.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (25 samples, 0.02%)</title><rect x="17.1917%" y="517" width="0.0172%" height="15" fill="rgb(229,198,43)" fg:x="24922" fg:w="25"/><text x="17.4417%" y="527.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (25 samples, 0.02%)</title><rect x="17.1917%" y="501" width="0.0172%" height="15" fill="rgb(206,209,35)" fg:x="24922" fg:w="25"/><text x="17.4417%" y="511.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (912 samples, 0.63%)</title><rect x="16.5806%" y="533" width="0.6291%" height="15" fill="rgb(245,195,53)" fg:x="24036" fg:w="912"/><text x="16.8306%" y="543.50"></text></g><g><title>main`bevy_render::renderer::graph_runner::RenderGraphRunner::run (3,457 samples, 2.38%)</title><rect x="14.8270%" y="581" width="2.3847%" height="15" fill="rgb(240,92,26)" fg:x="21494" fg:w="3457"/><text x="15.0770%" y="591.50">ma..</text></g><g><title>main`wgpu::Queue::submit (932 samples, 0.64%)</title><rect x="16.5688%" y="565" width="0.6429%" height="15" fill="rgb(207,40,23)" fg:x="24019" fg:w="932"/><text x="16.8188%" y="575.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_submit (931 samples, 0.64%)</title><rect x="16.5695%" y="549" width="0.6422%" height="15" fill="rgb(223,111,35)" fg:x="24020" fg:w="931"/><text x="16.8195%" y="559.50"></text></g><g><title>main`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (27 samples, 0.02%)</title><rect x="17.2359%" y="549" width="0.0186%" height="15" fill="rgb(229,147,28)" fg:x="24986" fg:w="27"/><text x="17.4859%" y="559.50"></text></g><g><title>main`tracing::span::Span::new (30 samples, 0.02%)</title><rect x="17.2345%" y="581" width="0.0207%" height="15" fill="rgb(211,29,28)" fg:x="24984" fg:w="30"/><text x="17.4845%" y="591.50"></text></g><g><title>main`tracing_core::dispatcher::get_default (29 samples, 0.02%)</title><rect x="17.2352%" y="565" width="0.0200%" height="15" fill="rgb(228,72,33)" fg:x="24985" fg:w="29"/><text x="17.4852%" y="575.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBuffer] (19 samples, 0.01%)</title><rect x="17.2655%" y="485" width="0.0131%" height="15" fill="rgb(205,214,31)" fg:x="25029" fg:w="19"/><text x="17.5155%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (19 samples, 0.01%)</title><rect x="17.2793%" y="485" width="0.0131%" height="15" fill="rgb(224,111,15)" fg:x="25049" fg:w="19"/><text x="17.5293%" y="495.50"></text></g><g><title>main`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (61 samples, 0.04%)</title><rect x="17.2580%" y="517" width="0.0421%" height="15" fill="rgb(253,21,26)" fg:x="25018" fg:w="61"/><text x="17.5080%" y="527.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (60 samples, 0.04%)</title><rect x="17.2586%" y="501" width="0.0414%" height="15" fill="rgb(245,139,43)" fg:x="25019" fg:w="60"/><text x="17.5086%" y="511.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (72 samples, 0.05%)</title><rect x="17.2559%" y="549" width="0.0497%" height="15" fill="rgb(252,170,7)" fg:x="25015" fg:w="72"/><text x="17.5059%" y="559.50"></text></g><g><title>main`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (71 samples, 0.05%)</title><rect x="17.2566%" y="533" width="0.0490%" height="15" fill="rgb(231,118,14)" fg:x="25016" fg:w="71"/><text x="17.5066%" y="543.50"></text></g><g><title>main`bevy_render::renderer::render_system (4,246 samples, 2.93%)</title><rect x="14.3773%" y="597" width="2.9290%" height="15" fill="rgb(238,83,0)" fg:x="20842" fg:w="4246"/><text x="14.6273%" y="607.50">ma..</text></g><g><title>main`wgpu::SurfaceTexture::present (73 samples, 0.05%)</title><rect x="17.2559%" y="581" width="0.0504%" height="15" fill="rgb(221,39,39)" fg:x="25015" fg:w="73"/><text x="17.5059%" y="591.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::surface_present (73 samples, 0.05%)</title><rect x="17.2559%" y="565" width="0.0504%" height="15" fill="rgb(222,119,46)" fg:x="25015" fg:w="73"/><text x="17.5059%" y="575.50"></text></g><g><title>main`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (4,395 samples, 3.03%)</title><rect x="14.2793%" y="613" width="3.0318%" height="15" fill="rgb(222,165,49)" fg:x="20700" fg:w="4395"/><text x="14.5293%" y="623.50">mai..</text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (27 samples, 0.02%)</title><rect x="17.3111%" y="613" width="0.0186%" height="15" fill="rgb(219,113,52)" fg:x="25095" fg:w="27"/><text x="17.5611%" y="623.50"></text></g><g><title>main`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (25 samples, 0.02%)</title><rect x="17.3518%" y="533" width="0.0172%" height="15" fill="rgb(214,7,15)" fg:x="25154" fg:w="25"/><text x="17.6018%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (100 samples, 0.07%)</title><rect x="17.3718%" y="501" width="0.0690%" height="15" fill="rgb(235,32,4)" fg:x="25183" fg:w="100"/><text x="17.6218%" y="511.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (135 samples, 0.09%)</title><rect x="17.3511%" y="565" width="0.0931%" height="15" fill="rgb(238,90,54)" fg:x="25153" fg:w="135"/><text x="17.6011%" y="575.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (135 samples, 0.09%)</title><rect x="17.3511%" y="549" width="0.0931%" height="15" fill="rgb(213,208,19)" fg:x="25153" fg:w="135"/><text x="17.6011%" y="559.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (107 samples, 0.07%)</title><rect x="17.3704%" y="533" width="0.0738%" height="15" fill="rgb(233,156,4)" fg:x="25181" fg:w="107"/><text x="17.6204%" y="543.50"></text></g><g><title>main`parking::Unparker::unpark (107 samples, 0.07%)</title><rect x="17.3704%" y="517" width="0.0738%" height="15" fill="rgb(207,194,5)" fg:x="25181" fg:w="107"/><text x="17.6204%" y="527.50"></text></g><g><title>main`event_listener::Event::notify_additional (164 samples, 0.11%)</title><rect x="17.3318%" y="597" width="0.1131%" height="15" fill="rgb(206,111,30)" fg:x="25125" fg:w="164"/><text x="17.5818%" y="607.50"></text></g><g><title>main`event_listener::List::notify_additional (149 samples, 0.10%)</title><rect x="17.3421%" y="581" width="0.1028%" height="15" fill="rgb(243,70,54)" fg:x="25140" fg:w="149"/><text x="17.5921%" y="591.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (168 samples, 0.12%)</title><rect x="17.3297%" y="613" width="0.1159%" height="15" fill="rgb(242,28,8)" fg:x="25122" fg:w="168"/><text x="17.5797%" y="623.50"></text></g><g><title>main`bevy_ecs::system::commands::_::_&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (28 samples, 0.02%)</title><rect x="17.4504%" y="597" width="0.0193%" height="15" fill="rgb(219,106,18)" fg:x="25297" fg:w="28"/><text x="17.7004%" y="607.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="17.4587%" y="581" width="0.0110%" height="15" fill="rgb(244,222,10)" fg:x="25309" fg:w="16"/><text x="17.7087%" y="591.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::apply_deferred (40 samples, 0.03%)</title><rect x="17.4456%" y="613" width="0.0276%" height="15" fill="rgb(236,179,52)" fg:x="25290" fg:w="40"/><text x="17.6956%" y="623.50"></text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,638 samples, 3.20%)</title><rect x="14.2745%" y="629" width="3.1994%" height="15" fill="rgb(213,23,39)" fg:x="20693" fg:w="4638"/><text x="14.5245%" y="639.50">mai..</text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (4,690 samples, 3.24%)</title><rect x="14.2400%" y="645" width="3.2353%" height="15" fill="rgb(238,48,10)" fg:x="20643" fg:w="4690"/><text x="14.4900%" y="655.50">mai..</text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,762 samples, 3.28%)</title><rect x="14.1917%" y="661" width="3.2849%" height="15" fill="rgb(251,196,23)" fg:x="20573" fg:w="4762"/><text x="14.4417%" y="671.50">mai..</text></g><g><title>main`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.05%)</title><rect x="17.4911%" y="645" width="0.0504%" height="15" fill="rgb(250,152,24)" fg:x="25356" fg:w="73"/><text x="17.7411%" y="655.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (4,870 samples, 3.36%)</title><rect x="14.1883%" y="677" width="3.3594%" height="15" fill="rgb(209,150,17)" fg:x="20568" fg:w="4870"/><text x="14.4383%" y="687.50">mai..</text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (101 samples, 0.07%)</title><rect x="17.4780%" y="661" width="0.0697%" height="15" fill="rgb(234,202,34)" fg:x="25337" fg:w="101"/><text x="17.7280%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (429 samples, 0.30%)</title><rect x="17.5546%" y="661" width="0.2959%" height="15" fill="rgb(253,148,53)" fg:x="25448" fg:w="429"/><text x="17.8046%" y="671.50"></text></g><g><title>main`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (5,359 samples, 3.70%)</title><rect x="14.1607%" y="741" width="3.6968%" height="15" fill="rgb(218,129,16)" fg:x="20528" fg:w="5359"/><text x="14.4107%" y="751.50">main..</text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor (5,357 samples, 3.70%)</title><rect x="14.1620%" y="725" width="3.6954%" height="15" fill="rgb(216,85,19)" fg:x="20530" fg:w="5357"/><text x="14.4120%" y="735.50">main..</text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (5,357 samples, 3.70%)</title><rect x="14.1620%" y="709" width="3.6954%" height="15" fill="rgb(235,228,7)" fg:x="20530" fg:w="5357"/><text x="14.4120%" y="719.50">main..</text></g><g><title>main`futures_lite::future::block_on (5,327 samples, 3.67%)</title><rect x="14.1827%" y="693" width="3.6747%" height="15" fill="rgb(245,175,0)" fg:x="20560" fg:w="5327"/><text x="14.4327%" y="703.50">main..</text></g><g><title>main`parking::Inner::park (449 samples, 0.31%)</title><rect x="17.5477%" y="677" width="0.3097%" height="15" fill="rgb(208,168,36)" fg:x="25438" fg:w="449"/><text x="17.7977%" y="687.50"></text></g><g><title>main`bevy_app::app::SubApp::run (5,382 samples, 3.71%)</title><rect x="14.1517%" y="773" width="3.7126%" height="15" fill="rgb(246,171,24)" fg:x="20515" fg:w="5382"/><text x="14.4017%" y="783.50">main..</text></g><g><title>main`bevy_ecs::world::World::schedule_scope (5,380 samples, 3.71%)</title><rect x="14.1531%" y="757" width="3.7112%" height="15" fill="rgb(215,142,24)" fg:x="20517" fg:w="5380"/><text x="14.4031%" y="767.50">main..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (23 samples, 0.02%)</title><rect x="17.9347%" y="661" width="0.0159%" height="15" fill="rgb(250,187,7)" fg:x="25999" fg:w="23"/><text x="18.1847%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (23 samples, 0.02%)</title><rect x="17.9347%" y="645" width="0.0159%" height="15" fill="rgb(228,66,33)" fg:x="25999" fg:w="23"/><text x="18.1847%" y="655.50"></text></g><g><title>main`async_executor::Ticker::sleep (45 samples, 0.03%)</title><rect x="17.9319%" y="677" width="0.0310%" height="15" fill="rgb(234,215,21)" fg:x="25995" fg:w="45"/><text x="18.1819%" y="687.50"></text></g><g><title>main`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (15 samples, 0.01%)</title><rect x="17.9774%" y="677" width="0.0103%" height="15" fill="rgb(222,191,20)" fg:x="26061" fg:w="15"/><text x="18.2274%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (68 samples, 0.05%)</title><rect x="17.9954%" y="645" width="0.0469%" height="15" fill="rgb(245,79,54)" fg:x="26087" fg:w="68"/><text x="18.2454%" y="655.50"></text></g><g><title>main`async_executor::Runner::runnable::_{{closure}} (196 samples, 0.14%)</title><rect x="17.9092%" y="693" width="0.1352%" height="15" fill="rgb(240,10,37)" fg:x="25962" fg:w="196"/><text x="18.1592%" y="703.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (73 samples, 0.05%)</title><rect x="17.9940%" y="677" width="0.0504%" height="15" fill="rgb(214,192,32)" fg:x="26085" fg:w="73"/><text x="18.2440%" y="687.50"></text></g><g><title>main`parking::Unparker::unpark (72 samples, 0.05%)</title><rect x="17.9947%" y="661" width="0.0497%" height="15" fill="rgb(209,36,54)" fg:x="26086" fg:w="72"/><text x="18.2447%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (28 samples, 0.02%)</title><rect x="18.0761%" y="677" width="0.0193%" height="15" fill="rgb(220,10,11)" fg:x="26204" fg:w="28"/><text x="18.3261%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (27 samples, 0.02%)</title><rect x="18.0768%" y="661" width="0.0186%" height="15" fill="rgb(221,106,17)" fg:x="26205" fg:w="27"/><text x="18.3268%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (82 samples, 0.06%)</title><rect x="18.0989%" y="661" width="0.0566%" height="15" fill="rgb(251,142,44)" fg:x="26237" fg:w="82"/><text x="18.3489%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (81 samples, 0.06%)</title><rect x="18.0995%" y="645" width="0.0559%" height="15" fill="rgb(238,13,15)" fg:x="26238" fg:w="81"/><text x="18.3495%" y="655.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.06%)</title><rect x="18.0975%" y="677" width="0.0607%" height="15" fill="rgb(208,107,27)" fg:x="26235" fg:w="88"/><text x="18.3475%" y="687.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (17 samples, 0.01%)</title><rect x="18.1582%" y="677" width="0.0117%" height="15" fill="rgb(205,136,37)" fg:x="26323" fg:w="17"/><text x="18.4082%" y="687.50"></text></g><g><title>main`epaint::tessellator::Path::fill (21 samples, 0.01%)</title><rect x="18.2396%" y="549" width="0.0145%" height="15" fill="rgb(250,205,27)" fg:x="26441" fg:w="21"/><text x="18.4896%" y="559.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_rect (31 samples, 0.02%)</title><rect x="18.2341%" y="565" width="0.0214%" height="15" fill="rgb(210,80,43)" fg:x="26433" fg:w="31"/><text x="18.4841%" y="575.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.02%)</title><rect x="18.2603%" y="549" width="0.0186%" height="15" fill="rgb(247,160,36)" fg:x="26471" fg:w="27"/><text x="18.5103%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (19 samples, 0.01%)</title><rect x="18.2796%" y="501" width="0.0131%" height="15" fill="rgb(234,13,49)" fg:x="26499" fg:w="19"/><text x="18.5296%" y="511.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.01%)</title><rect x="18.2789%" y="549" width="0.0145%" height="15" fill="rgb(234,122,0)" fg:x="26498" fg:w="21"/><text x="18.5289%" y="559.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (20 samples, 0.01%)</title><rect x="18.2796%" y="533" width="0.0138%" height="15" fill="rgb(207,146,38)" fg:x="26499" fg:w="20"/><text x="18.5296%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (20 samples, 0.01%)</title><rect x="18.2796%" y="517" width="0.0138%" height="15" fill="rgb(207,177,25)" fg:x="26499" fg:w="20"/><text x="18.5296%" y="527.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_text (56 samples, 0.04%)</title><rect x="18.2554%" y="565" width="0.0386%" height="15" fill="rgb(211,178,42)" fg:x="26464" fg:w="56"/><text x="18.5054%" y="575.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_shape (99 samples, 0.07%)</title><rect x="18.2306%" y="581" width="0.0683%" height="15" fill="rgb(230,69,54)" fg:x="26428" fg:w="99"/><text x="18.4806%" y="591.50"></text></g><g><title>main`bevy_egui::systems::process_output_system (135 samples, 0.09%)</title><rect x="18.2065%" y="645" width="0.0931%" height="15" fill="rgb(214,135,41)" fg:x="26393" fg:w="135"/><text x="18.4565%" y="655.50"></text></g><g><title>main`egui::context::Context::tessellate (123 samples, 0.08%)</title><rect x="18.2147%" y="629" width="0.0848%" height="15" fill="rgb(237,67,25)" fg:x="26405" fg:w="123"/><text x="18.4647%" y="639.50"></text></g><g><title>main`epaint::tessellator::tessellate_shapes (113 samples, 0.08%)</title><rect x="18.2216%" y="613" width="0.0779%" height="15" fill="rgb(222,189,50)" fg:x="26415" fg:w="113"/><text x="18.4716%" y="623.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_clipped_shape (104 samples, 0.07%)</title><rect x="18.2278%" y="597" width="0.0717%" height="15" fill="rgb(245,148,34)" fg:x="26424" fg:w="104"/><text x="18.4778%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.04%)</title><rect x="18.3161%" y="613" width="0.0421%" height="15" fill="rgb(222,29,6)" fg:x="26552" fg:w="61"/><text x="18.5661%" y="623.50"></text></g><g><title>main`&lt;bevy_egui::EguiRenderOutput as bevy_render::extract_component::ExtractComponent&gt;::extract_component (66 samples, 0.05%)</title><rect x="18.3155%" y="629" width="0.0455%" height="15" fill="rgb(221,189,43)" fg:x="26551" fg:w="66"/><text x="18.5655%" y="639.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (79 samples, 0.05%)</title><rect x="18.3079%" y="645" width="0.0545%" height="15" fill="rgb(207,36,27)" fg:x="26540" fg:w="79"/><text x="18.5579%" y="655.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (255 samples, 0.18%)</title><rect x="18.1878%" y="661" width="0.1759%" height="15" fill="rgb(217,90,24)" fg:x="26366" fg:w="255"/><text x="18.4378%" y="671.50"></text></g><g><title>main`event_listener::Inner::lock (19 samples, 0.01%)</title><rect x="18.3989%" y="629" width="0.0131%" height="15" fill="rgb(224,66,35)" fg:x="26672" fg:w="19"/><text x="18.6489%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (18 samples, 0.01%)</title><rect x="18.3996%" y="613" width="0.0124%" height="15" fill="rgb(221,13,50)" fg:x="26673" fg:w="18"/><text x="18.6496%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (18 samples, 0.01%)</title><rect x="18.3996%" y="597" width="0.0124%" height="15" fill="rgb(236,68,49)" fg:x="26673" fg:w="18"/><text x="18.6496%" y="607.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (53 samples, 0.04%)</title><rect x="18.3844%" y="661" width="0.0366%" height="15" fill="rgb(229,146,28)" fg:x="26651" fg:w="53"/><text x="18.6344%" y="671.50"></text></g><g><title>main`event_listener::Event::notify_additional (41 samples, 0.03%)</title><rect x="18.3927%" y="645" width="0.0283%" height="15" fill="rgb(225,31,38)" fg:x="26663" fg:w="41"/><text x="18.6427%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (33 samples, 0.02%)</title><rect x="18.4548%" y="613" width="0.0228%" height="15" fill="rgb(250,208,3)" fg:x="26753" fg:w="33"/><text x="18.7048%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (33 samples, 0.02%)</title><rect x="18.4548%" y="597" width="0.0228%" height="15" fill="rgb(246,54,23)" fg:x="26753" fg:w="33"/><text x="18.7048%" y="607.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (18 samples, 0.01%)</title><rect x="18.4789%" y="613" width="0.0124%" height="15" fill="rgb(243,76,11)" fg:x="26788" fg:w="18"/><text x="18.7289%" y="623.50"></text></g><g><title>main`async_executor::Executor::spawn (81 samples, 0.06%)</title><rect x="18.4431%" y="629" width="0.0559%" height="15" fill="rgb(245,21,50)" fg:x="26736" fg:w="81"/><text x="18.6931%" y="639.50"></text></g><g><title>main`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (83 samples, 0.06%)</title><rect x="18.4424%" y="645" width="0.0573%" height="15" fill="rgb(228,9,43)" fg:x="26735" fg:w="83"/><text x="18.6924%" y="655.50"></text></g><g><title>main`async_executor::Executor::spawn (17 samples, 0.01%)</title><rect x="18.5086%" y="629" width="0.0117%" height="15" fill="rgb(208,100,47)" fg:x="26831" fg:w="17"/><text x="18.7586%" y="639.50"></text></g><g><title>main`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_scope (18 samples, 0.01%)</title><rect x="18.5086%" y="645" width="0.0124%" height="15" fill="rgb(232,26,8)" fg:x="26831" fg:w="18"/><text x="18.7586%" y="655.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (144 samples, 0.10%)</title><rect x="18.4300%" y="661" width="0.0993%" height="15" fill="rgb(216,166,38)" fg:x="26717" fg:w="144"/><text x="18.6800%" y="671.50"></text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (535 samples, 0.37%)</title><rect x="18.1699%" y="677" width="0.3691%" height="15" fill="rgb(251,202,51)" fg:x="26340" fg:w="535"/><text x="18.4199%" y="687.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (729 samples, 0.50%)</title><rect x="18.0478%" y="693" width="0.5029%" height="15" fill="rgb(254,216,34)" fg:x="26163" fg:w="729"/><text x="18.2978%" y="703.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (15 samples, 0.01%)</title><rect x="18.5403%" y="677" width="0.0103%" height="15" fill="rgb(251,32,27)" fg:x="26877" fg:w="15"/><text x="18.7903%" y="687.50"></text></g><g><title>main`parking::Unparker::unpark (15 samples, 0.01%)</title><rect x="18.5403%" y="661" width="0.0103%" height="15" fill="rgb(208,127,28)" fg:x="26877" fg:w="15"/><text x="18.7903%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (15 samples, 0.01%)</title><rect x="18.5403%" y="645" width="0.0103%" height="15" fill="rgb(224,137,22)" fg:x="26877" fg:w="15"/><text x="18.7903%" y="655.50"></text></g><g><title>main`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (958 samples, 0.66%)</title><rect x="17.8995%" y="709" width="0.6608%" height="15" fill="rgb(254,70,32)" fg:x="25948" fg:w="958"/><text x="18.1495%" y="719.50"></text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (987 samples, 0.68%)</title><rect x="17.8954%" y="725" width="0.6809%" height="15" fill="rgb(229,75,37)" fg:x="25942" fg:w="987"/><text x="18.1454%" y="735.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (1,016 samples, 0.70%)</title><rect x="17.8871%" y="741" width="0.7009%" height="15" fill="rgb(252,64,23)" fg:x="25930" fg:w="1016"/><text x="18.1371%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (202 samples, 0.14%)</title><rect x="18.5935%" y="725" width="0.1393%" height="15" fill="rgb(232,162,48)" fg:x="26954" fg:w="202"/><text x="18.8435%" y="735.50"></text></g><g><title>main`futures_lite::future::block_on (1,236 samples, 0.85%)</title><rect x="17.8822%" y="757" width="0.8526%" height="15" fill="rgb(246,160,12)" fg:x="25923" fg:w="1236"/><text x="18.1322%" y="767.50"></text></g><g><title>main`parking::Inner::park (213 samples, 0.15%)</title><rect x="18.5879%" y="741" width="0.1469%" height="15" fill="rgb(247,166,0)" fg:x="26946" fg:w="213"/><text x="18.8379%" y="751.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope (1,264 samples, 0.87%)</title><rect x="17.8643%" y="773" width="0.8719%" height="15" fill="rgb(249,219,21)" fg:x="25897" fg:w="1264"/><text x="18.1143%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (35 samples, 0.02%)</title><rect x="18.7604%" y="757" width="0.0241%" height="15" fill="rgb(205,209,3)" fg:x="27196" fg:w="35"/><text x="19.0104%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (31 samples, 0.02%)</title><rect x="18.7845%" y="757" width="0.0214%" height="15" fill="rgb(243,44,1)" fg:x="27231" fg:w="31"/><text x="19.0345%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (27 samples, 0.02%)</title><rect x="19.0894%" y="741" width="0.0186%" height="15" fill="rgb(206,159,16)" fg:x="27673" fg:w="27"/><text x="19.3394%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (27 samples, 0.02%)</title><rect x="19.0894%" y="725" width="0.0186%" height="15" fill="rgb(244,77,30)" fg:x="27673" fg:w="27"/><text x="19.3394%" y="735.50"></text></g><g><title>main`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (90 samples, 0.06%)</title><rect x="19.1336%" y="709" width="0.0621%" height="15" fill="rgb(218,69,12)" fg:x="27737" fg:w="90"/><text x="19.3836%" y="719.50"></text></g><g><title>main`event_listener::Inner::lock (48 samples, 0.03%)</title><rect x="19.1626%" y="693" width="0.0331%" height="15" fill="rgb(212,87,7)" fg:x="27779" fg:w="48"/><text x="19.4126%" y="703.50"></text></g><g><title>main`&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (94 samples, 0.06%)</title><rect x="19.1322%" y="725" width="0.0648%" height="15" fill="rgb(245,114,25)" fg:x="27735" fg:w="94"/><text x="19.3822%" y="735.50"></text></g><g><title>main`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (112 samples, 0.08%)</title><rect x="19.1260%" y="741" width="0.0773%" height="15" fill="rgb(210,61,42)" fg:x="27726" fg:w="112"/><text x="19.3760%" y="751.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="19.2033%" y="741" width="0.0103%" height="15" fill="rgb(211,52,33)" fg:x="27838" fg:w="15"/><text x="19.4533%" y="751.50"></text></g><g><title>main`async_executor::State::notify (70 samples, 0.05%)</title><rect x="19.2233%" y="741" width="0.0483%" height="15" fill="rgb(234,58,33)" fg:x="27867" fg:w="70"/><text x="19.4733%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (302 samples, 0.21%)</title><rect x="19.3205%" y="709" width="0.2083%" height="15" fill="rgb(220,115,36)" fg:x="28008" fg:w="302"/><text x="19.5705%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (309 samples, 0.21%)</title><rect x="19.3171%" y="725" width="0.2132%" height="15" fill="rgb(243,153,54)" fg:x="28003" fg:w="309"/><text x="19.5671%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (239 samples, 0.16%)</title><rect x="19.5302%" y="725" width="0.1649%" height="15" fill="rgb(251,47,18)" fg:x="28312" fg:w="239"/><text x="19.7802%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (235 samples, 0.16%)</title><rect x="19.5330%" y="709" width="0.1621%" height="15" fill="rgb(242,102,42)" fg:x="28316" fg:w="235"/><text x="19.7830%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (23 samples, 0.02%)</title><rect x="19.6951%" y="725" width="0.0159%" height="15" fill="rgb(234,31,38)" fg:x="28551" fg:w="23"/><text x="19.9451%" y="735.50"></text></g><g><title>main`async_executor::Ticker::sleep (657 samples, 0.45%)</title><rect x="19.2715%" y="741" width="0.4532%" height="15" fill="rgb(221,117,51)" fg:x="27937" fg:w="657"/><text x="19.5215%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (20 samples, 0.01%)</title><rect x="19.7110%" y="725" width="0.0138%" height="15" fill="rgb(212,20,18)" fg:x="28574" fg:w="20"/><text x="19.9610%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (26 samples, 0.02%)</title><rect x="19.7441%" y="725" width="0.0179%" height="15" fill="rgb(245,133,36)" fg:x="28622" fg:w="26"/><text x="19.9941%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (24 samples, 0.02%)</title><rect x="19.7455%" y="709" width="0.0166%" height="15" fill="rgb(212,6,19)" fg:x="28624" fg:w="24"/><text x="19.9955%" y="719.50"></text></g><g><title>main`async_executor::Ticker::wake (62 samples, 0.04%)</title><rect x="19.7248%" y="741" width="0.0428%" height="15" fill="rgb(218,1,36)" fg:x="28594" fg:w="62"/><text x="19.9748%" y="751.50"></text></g><g><title>main`concurrent_queue::bounded::Bounded&lt;T&gt;::push (39 samples, 0.03%)</title><rect x="19.8206%" y="725" width="0.0269%" height="15" fill="rgb(246,84,54)" fg:x="28733" fg:w="39"/><text x="20.0706%" y="735.50"></text></g><g><title>main`async_executor::steal (159 samples, 0.11%)</title><rect x="19.7675%" y="741" width="0.1097%" height="15" fill="rgb(242,110,6)" fg:x="28656" fg:w="159"/><text x="20.0175%" y="751.50"></text></g><g><title>main`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (43 samples, 0.03%)</title><rect x="19.8475%" y="725" width="0.0297%" height="15" fill="rgb(214,47,5)" fg:x="28772" fg:w="43"/><text x="20.0975%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (415 samples, 0.29%)</title><rect x="20.2745%" y="725" width="0.2863%" height="15" fill="rgb(218,159,25)" fg:x="29391" fg:w="415"/><text x="20.5245%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (415 samples, 0.29%)</title><rect x="20.2745%" y="709" width="0.2863%" height="15" fill="rgb(215,211,28)" fg:x="29391" fg:w="415"/><text x="20.5245%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (34 samples, 0.02%)</title><rect x="20.5636%" y="725" width="0.0235%" height="15" fill="rgb(238,59,32)" fg:x="29810" fg:w="34"/><text x="20.8136%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1,215 samples, 0.84%)</title><rect x="20.6443%" y="693" width="0.8381%" height="15" fill="rgb(226,82,3)" fg:x="29927" fg:w="1215"/><text x="20.8943%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1,245 samples, 0.86%)</title><rect x="20.6298%" y="709" width="0.8588%" height="15" fill="rgb(240,164,32)" fg:x="29906" fg:w="1245"/><text x="20.8798%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (88 samples, 0.06%)</title><rect x="21.4886%" y="709" width="0.0607%" height="15" fill="rgb(232,46,7)" fg:x="31151" fg:w="88"/><text x="21.7386%" y="719.50"></text></g><g><title>main`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (1,405 samples, 0.97%)</title><rect x="20.5884%" y="725" width="0.9692%" height="15" fill="rgb(229,129,53)" fg:x="29846" fg:w="1405"/><text x="20.8384%" y="735.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (188 samples, 0.13%)</title><rect x="21.5576%" y="725" width="0.1297%" height="15" fill="rgb(234,188,29)" fg:x="31251" fg:w="188"/><text x="21.8076%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (35 samples, 0.02%)</title><rect x="21.7611%" y="709" width="0.0241%" height="15" fill="rgb(246,141,4)" fg:x="31546" fg:w="35"/><text x="22.0111%" y="719.50"></text></g><g><title>main`&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="21.7984%" y="677" width="0.0193%" height="15" fill="rgb(229,23,39)" fg:x="31600" fg:w="28"/><text x="22.0484%" y="687.50"></text></g><g><title>main`&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (30 samples, 0.02%)</title><rect x="21.7984%" y="693" width="0.0207%" height="15" fill="rgb(206,12,3)" fg:x="31600" fg:w="30"/><text x="22.0484%" y="703.50"></text></g><g><title>main`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (37 samples, 0.03%)</title><rect x="21.8294%" y="693" width="0.0255%" height="15" fill="rgb(252,226,20)" fg:x="31645" fg:w="37"/><text x="22.0794%" y="703.50"></text></g><g><title>main`event_listener::Event::listen (21 samples, 0.01%)</title><rect x="21.8549%" y="693" width="0.0145%" height="15" fill="rgb(216,123,35)" fg:x="31682" fg:w="21"/><text x="22.1049%" y="703.50"></text></g><g><title>main`&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (124 samples, 0.09%)</title><rect x="21.7880%" y="709" width="0.0855%" height="15" fill="rgb(212,68,40)" fg:x="31585" fg:w="124"/><text x="22.0380%" y="719.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (58 samples, 0.04%)</title><rect x="21.8846%" y="709" width="0.0400%" height="15" fill="rgb(254,125,32)" fg:x="31725" fg:w="58"/><text x="22.1346%" y="719.50"></text></g><g><title>main`&lt;bevy_render::extract_param::Extract&lt;P&gt; as bevy_ecs::system::system_param::SystemParam&gt;::get_param (44 samples, 0.03%)</title><rect x="22.1012%" y="693" width="0.0304%" height="15" fill="rgb(253,97,22)" fg:x="32039" fg:w="44"/><text x="22.3512%" y="703.50"></text></g><g><title>main`bevy_tasks::task_pool::TaskPool::scope (17 samples, 0.01%)</title><rect x="22.1336%" y="677" width="0.0117%" height="15" fill="rgb(241,101,14)" fg:x="32086" fg:w="17"/><text x="22.3836%" y="687.50"></text></g><g><title>main`bevy_animation::animation_player (19 samples, 0.01%)</title><rect x="22.1329%" y="693" width="0.0131%" height="15" fill="rgb(238,103,29)" fg:x="32085" fg:w="19"/><text x="22.3829%" y="703.50"></text></g><g><title>main`crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (15 samples, 0.01%)</title><rect x="22.1729%" y="677" width="0.0103%" height="15" fill="rgb(233,195,47)" fg:x="32143" fg:w="15"/><text x="22.4229%" y="687.50"></text></g><g><title>main`bevy_asset::asset_server::AssetServer::update_asset_storage (49 samples, 0.03%)</title><rect x="22.1502%" y="693" width="0.0338%" height="15" fill="rgb(246,218,30)" fg:x="32110" fg:w="49"/><text x="22.4002%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (35 samples, 0.02%)</title><rect x="22.1992%" y="597" width="0.0241%" height="15" fill="rgb(219,145,47)" fg:x="32181" fg:w="35"/><text x="22.4492%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (36 samples, 0.02%)</title><rect x="22.2233%" y="597" width="0.0248%" height="15" fill="rgb(243,12,26)" fg:x="32216" fg:w="36"/><text x="22.4733%" y="607.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (86 samples, 0.06%)</title><rect x="22.1957%" y="613" width="0.0593%" height="15" fill="rgb(214,87,16)" fg:x="32176" fg:w="86"/><text x="22.4457%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (29 samples, 0.02%)</title><rect x="22.2571%" y="597" width="0.0200%" height="15" fill="rgb(208,99,42)" fg:x="32265" fg:w="29"/><text x="22.5071%" y="607.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (36 samples, 0.02%)</title><rect x="22.2550%" y="613" width="0.0248%" height="15" fill="rgb(253,99,2)" fg:x="32262" fg:w="36"/><text x="22.5050%" y="623.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (64 samples, 0.04%)</title><rect x="22.2930%" y="501" width="0.0441%" height="15" fill="rgb(220,168,23)" fg:x="32317" fg:w="64"/><text x="22.5430%" y="511.50"></text></g><g><title>IOKit`IOConnectCallMethod (62 samples, 0.04%)</title><rect x="22.2943%" y="485" width="0.0428%" height="15" fill="rgb(242,38,24)" fg:x="32319" fg:w="62"/><text x="22.5443%" y="495.50"></text></g><g><title>IOKit`io_connect_method (62 samples, 0.04%)</title><rect x="22.2943%" y="469" width="0.0428%" height="15" fill="rgb(225,182,9)" fg:x="32319" fg:w="62"/><text x="22.5443%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (62 samples, 0.04%)</title><rect x="22.2943%" y="453" width="0.0428%" height="15" fill="rgb(243,178,37)" fg:x="32319" fg:w="62"/><text x="22.5443%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (70 samples, 0.05%)</title><rect x="22.2923%" y="517" width="0.0483%" height="15" fill="rgb(232,139,19)" fg:x="32316" fg:w="70"/><text x="22.5423%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (73 samples, 0.05%)</title><rect x="22.2923%" y="533" width="0.0504%" height="15" fill="rgb(225,201,24)" fg:x="32316" fg:w="73"/><text x="22.5423%" y="543.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (82 samples, 0.06%)</title><rect x="22.2923%" y="565" width="0.0566%" height="15" fill="rgb(221,47,46)" fg:x="32316" fg:w="82"/><text x="22.5423%" y="575.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (82 samples, 0.06%)</title><rect x="22.2923%" y="549" width="0.0566%" height="15" fill="rgb(249,23,13)" fg:x="32316" fg:w="82"/><text x="22.5423%" y="559.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (234 samples, 0.16%)</title><rect x="22.1950%" y="629" width="0.1614%" height="15" fill="rgb(219,9,5)" fg:x="32175" fg:w="234"/><text x="22.4450%" y="639.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (94 samples, 0.06%)</title><rect x="22.2916%" y="613" width="0.0648%" height="15" fill="rgb(254,171,16)" fg:x="32315" fg:w="94"/><text x="22.5416%" y="623.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (94 samples, 0.06%)</title><rect x="22.2916%" y="597" width="0.0648%" height="15" fill="rgb(230,171,20)" fg:x="32315" fg:w="94"/><text x="22.5416%" y="607.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (93 samples, 0.06%)</title><rect x="22.2923%" y="581" width="0.0642%" height="15" fill="rgb(210,71,41)" fg:x="32316" fg:w="93"/><text x="22.5423%" y="591.50"></text></g><g><title>main`bevy_egui::render_systems::prepare_egui_transforms_system (239 samples, 0.16%)</title><rect x="22.1923%" y="693" width="0.1649%" height="15" fill="rgb(206,173,20)" fg:x="32171" fg:w="239"/><text x="22.4423%" y="703.50"></text></g><g><title>main`wgpu::Queue::write_buffer (235 samples, 0.16%)</title><rect x="22.1950%" y="677" width="0.1621%" height="15" fill="rgb(233,88,34)" fg:x="32175" fg:w="235"/><text x="22.4450%" y="687.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (235 samples, 0.16%)</title><rect x="22.1950%" y="661" width="0.1621%" height="15" fill="rgb(223,209,46)" fg:x="32175" fg:w="235"/><text x="22.4450%" y="671.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (235 samples, 0.16%)</title><rect x="22.1950%" y="645" width="0.1621%" height="15" fill="rgb(250,43,18)" fg:x="32175" fg:w="235"/><text x="22.4450%" y="655.50"></text></g><g><title>main`wgpu_core::device::Device&lt;A&gt;::create_bind_group (22 samples, 0.02%)</title><rect x="22.3702%" y="581" width="0.0152%" height="15" fill="rgb(208,13,10)" fg:x="32429" fg:w="22"/><text x="22.6202%" y="591.50"></text></g><g><title>main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (32 samples, 0.02%)</title><rect x="22.3654%" y="597" width="0.0221%" height="15" fill="rgb(212,200,36)" fg:x="32422" fg:w="32"/><text x="22.6154%" y="607.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (42 samples, 0.03%)</title><rect x="22.3606%" y="613" width="0.0290%" height="15" fill="rgb(225,90,30)" fg:x="32415" fg:w="42"/><text x="22.6106%" y="623.50"></text></g><g><title>main`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 0.03%)</title><rect x="22.3571%" y="677" width="0.0331%" height="15" fill="rgb(236,182,39)" fg:x="32410" fg:w="48"/><text x="22.6071%" y="687.50"></text></g><g><title>main`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (46 samples, 0.03%)</title><rect x="22.3585%" y="661" width="0.0317%" height="15" fill="rgb(212,144,35)" fg:x="32412" fg:w="46"/><text x="22.6085%" y="671.50"></text></g><g><title>main`wgpu::Device::create_bind_group (44 samples, 0.03%)</title><rect x="22.3599%" y="645" width="0.0304%" height="15" fill="rgb(228,63,44)" fg:x="32414" fg:w="44"/><text x="22.6099%" y="655.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (43 samples, 0.03%)</title><rect x="22.3606%" y="629" width="0.0297%" height="15" fill="rgb(228,109,6)" fg:x="32415" fg:w="43"/><text x="22.6106%" y="639.50"></text></g><g><title>main`bevy_egui::render_systems::queue_bind_groups_system (49 samples, 0.03%)</title><rect x="22.3571%" y="693" width="0.0338%" height="15" fill="rgb(238,117,24)" fg:x="32410" fg:w="49"/><text x="22.6071%" y="703.50"></text></g><g><title>main`epaint::text::font::Font::preload_common_characters (66 samples, 0.05%)</title><rect x="22.4158%" y="661" width="0.0455%" height="15" fill="rgb(242,26,26)" fg:x="32495" fg:w="66"/><text x="22.6658%" y="671.50"></text></g><g><title>main`epaint::text::font::Font::glyph_info (65 samples, 0.04%)</title><rect x="22.4164%" y="645" width="0.0448%" height="15" fill="rgb(221,92,48)" fg:x="32496" fg:w="65"/><text x="22.6664%" y="655.50"></text></g><g><title>main`egui::context::Context::begin_frame (104 samples, 0.07%)</title><rect x="22.4006%" y="677" width="0.0717%" height="15" fill="rgb(209,209,32)" fg:x="32473" fg:w="104"/><text x="22.6506%" y="687.50"></text></g><g><title>main`bevy_egui::systems::begin_frame_system (114 samples, 0.08%)</title><rect x="22.3971%" y="693" width="0.0786%" height="15" fill="rgb(221,70,22)" fg:x="32468" fg:w="114"/><text x="22.6471%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (90 samples, 0.06%)</title><rect x="22.4937%" y="661" width="0.0621%" height="15" fill="rgb(248,145,5)" fg:x="32608" fg:w="90"/><text x="22.7437%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`madvise (88 samples, 0.06%)</title><rect x="22.4951%" y="645" width="0.0607%" height="15" fill="rgb(226,116,26)" fg:x="32610" fg:w="88"/><text x="22.7451%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free_small (15 samples, 0.01%)</title><rect x="22.5558%" y="661" width="0.0103%" height="15" fill="rgb(244,5,17)" fg:x="32698" fg:w="15"/><text x="22.8058%" y="671.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.08%)</title><rect x="22.4909%" y="677" width="0.0759%" height="15" fill="rgb(252,159,33)" fg:x="32604" fg:w="110"/><text x="22.7409%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.01%)</title><rect x="22.5689%" y="661" width="0.0145%" height="15" fill="rgb(206,71,0)" fg:x="32717" fg:w="21"/><text x="22.8189%" y="671.50"></text></g><g><title>main`egui::context::Context::end_frame (35 samples, 0.02%)</title><rect x="22.5668%" y="677" width="0.0241%" height="15" fill="rgb(233,118,54)" fg:x="32714" fg:w="35"/><text x="22.8168%" y="687.50"></text></g><g><title>main`epaint::stats::PaintStats::from_shapes (89 samples, 0.06%)</title><rect x="22.6034%" y="661" width="0.0614%" height="15" fill="rgb(234,83,48)" fg:x="32767" fg:w="89"/><text x="22.8534%" y="671.50"></text></g><g><title>main`epaint::stats::PaintStats::add (88 samples, 0.06%)</title><rect x="22.6041%" y="645" width="0.0607%" height="15" fill="rgb(228,3,54)" fg:x="32768" fg:w="88"/><text x="22.8541%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (29 samples, 0.02%)</title><rect x="22.6731%" y="645" width="0.0200%" height="15" fill="rgb(226,155,13)" fg:x="32868" fg:w="29"/><text x="22.9231%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`madvise (29 samples, 0.02%)</title><rect x="22.6731%" y="629" width="0.0200%" height="15" fill="rgb(241,28,37)" fg:x="32868" fg:w="29"/><text x="22.9231%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.01%)</title><rect x="22.7821%" y="597" width="0.0124%" height="15" fill="rgb(233,93,10)" fg:x="33026" fg:w="18"/><text x="23.0321%" y="607.50"></text></g><g><title>main`alloc::sync::Arc&lt;T&gt;::drop_slow (37 samples, 0.03%)</title><rect x="22.7724%" y="613" width="0.0255%" height="15" fill="rgb(225,113,19)" fg:x="33012" fg:w="37"/><text x="23.0224%" y="623.50"></text></g><g><title>libsystem_m.dylib`hypotf (17 samples, 0.01%)</title><rect x="22.8262%" y="597" width="0.0117%" height="15" fill="rgb(241,2,18)" fg:x="33090" fg:w="17"/><text x="23.0762%" y="607.50"></text></g><g><title>main`epaint::tessellator::Path::add_line_loop (70 samples, 0.05%)</title><rect x="22.8407%" y="597" width="0.0483%" height="15" fill="rgb(228,207,21)" fg:x="33111" fg:w="70"/><text x="23.0907%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (36 samples, 0.02%)</title><rect x="23.0325%" y="501" width="0.0248%" height="15" fill="rgb(213,211,35)" fg:x="33389" fg:w="36"/><text x="23.2825%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (35 samples, 0.02%)</title><rect x="23.0331%" y="485" width="0.0241%" height="15" fill="rgb(209,83,10)" fg:x="33390" fg:w="35"/><text x="23.2831%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (56 samples, 0.04%)</title><rect x="23.0283%" y="517" width="0.0386%" height="15" fill="rgb(209,164,1)" fg:x="33383" fg:w="56"/><text x="23.2783%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (114 samples, 0.08%)</title><rect x="23.0256%" y="533" width="0.0786%" height="15" fill="rgb(213,184,43)" fg:x="33379" fg:w="114"/><text x="23.2756%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.04%)</title><rect x="23.0669%" y="517" width="0.0373%" height="15" fill="rgb(231,61,34)" fg:x="33439" fg:w="54"/><text x="23.3169%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (117 samples, 0.08%)</title><rect x="23.0256%" y="549" width="0.0807%" height="15" fill="rgb(235,75,3)" fg:x="33379" fg:w="117"/><text x="23.2756%" y="559.50"></text></g><g><title>main`epaint::tessellator::Path::fill (327 samples, 0.23%)</title><rect x="22.8890%" y="597" width="0.2256%" height="15" fill="rgb(220,106,47)" fg:x="33181" fg:w="327"/><text x="23.1390%" y="607.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (135 samples, 0.09%)</title><rect x="23.0214%" y="581" width="0.0931%" height="15" fill="rgb(210,196,33)" fg:x="33373" fg:w="135"/><text x="23.2714%" y="591.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (130 samples, 0.09%)</title><rect x="23.0249%" y="565" width="0.0897%" height="15" fill="rgb(229,154,42)" fg:x="33378" fg:w="130"/><text x="23.2749%" y="575.50"></text></g><g><title>main`epaint::tessellator::path::rounded_rectangle (22 samples, 0.02%)</title><rect x="23.1166%" y="597" width="0.0152%" height="15" fill="rgb(228,114,26)" fg:x="33511" fg:w="22"/><text x="23.3666%" y="607.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_rect (462 samples, 0.32%)</title><rect x="22.8172%" y="613" width="0.3187%" height="15" fill="rgb(208,144,1)" fg:x="33077" fg:w="462"/><text x="23.0672%" y="623.50"></text></g><g><title>main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (508 samples, 0.35%)</title><rect x="23.2297%" y="597" width="0.3504%" height="15" fill="rgb(239,112,37)" fg:x="33675" fg:w="508"/><text x="23.4797%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (19 samples, 0.01%)</title><rect x="23.6395%" y="501" width="0.0131%" height="15" fill="rgb(210,96,50)" fg:x="34269" fg:w="19"/><text x="23.8895%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (16 samples, 0.01%)</title><rect x="23.6416%" y="485" width="0.0110%" height="15" fill="rgb(222,178,2)" fg:x="34272" fg:w="16"/><text x="23.8916%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.02%)</title><rect x="23.6319%" y="517" width="0.0214%" height="15" fill="rgb(226,74,18)" fg:x="34258" fg:w="31"/><text x="23.8819%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (89 samples, 0.06%)</title><rect x="23.5960%" y="533" width="0.0614%" height="15" fill="rgb(225,67,54)" fg:x="34206" fg:w="89"/><text x="23.8460%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (283 samples, 0.20%)</title><rect x="23.5919%" y="549" width="0.1952%" height="15" fill="rgb(251,92,32)" fg:x="34200" fg:w="283"/><text x="23.8419%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (188 samples, 0.13%)</title><rect x="23.6574%" y="533" width="0.1297%" height="15" fill="rgb(228,149,22)" fg:x="34295" fg:w="188"/><text x="23.9074%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (300 samples, 0.21%)</title><rect x="23.5898%" y="565" width="0.2069%" height="15" fill="rgb(243,54,13)" fg:x="34197" fg:w="300"/><text x="23.8398%" y="575.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (313 samples, 0.22%)</title><rect x="23.5829%" y="597" width="0.2159%" height="15" fill="rgb(243,180,28)" fg:x="34187" fg:w="313"/><text x="23.8329%" y="607.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (307 samples, 0.21%)</title><rect x="23.5871%" y="581" width="0.2118%" height="15" fill="rgb(208,167,24)" fg:x="34193" fg:w="307"/><text x="23.8371%" y="591.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_text (967 samples, 0.67%)</title><rect x="23.1359%" y="613" width="0.6671%" height="15" fill="rgb(245,73,45)" fg:x="33539" fg:w="967"/><text x="23.3859%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (19 samples, 0.01%)</title><rect x="23.9127%" y="549" width="0.0131%" height="15" fill="rgb(237,203,48)" fg:x="34665" fg:w="19"/><text x="24.1627%" y="559.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_shape (1,719 samples, 1.19%)</title><rect x="22.7420%" y="629" width="1.1858%" height="15" fill="rgb(211,197,16)" fg:x="32968" fg:w="1719"/><text x="22.9920%" y="639.50"></text></g><g><title>main`epaint::tessellator::stroke_path (181 samples, 0.12%)</title><rect x="23.8030%" y="613" width="0.1249%" height="15" fill="rgb(243,99,51)" fg:x="34506" fg:w="181"/><text x="24.0530%" y="623.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.02%)</title><rect x="23.9127%" y="597" width="0.0152%" height="15" fill="rgb(215,123,29)" fg:x="34665" fg:w="22"/><text x="24.1627%" y="607.50"></text></g><g><title>main`alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="23.9127%" y="581" width="0.0152%" height="15" fill="rgb(239,186,37)" fg:x="34665" fg:w="22"/><text x="24.1627%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (22 samples, 0.02%)</title><rect x="23.9127%" y="565" width="0.0152%" height="15" fill="rgb(252,136,39)" fg:x="34665" fg:w="22"/><text x="24.1627%" y="575.50"></text></g><g><title>main`epaint::tessellator::Tessellator::tessellate_clipped_shape (1,790 samples, 1.23%)</title><rect x="22.6986%" y="645" width="1.2348%" height="15" fill="rgb(223,213,32)" fg:x="32905" fg:w="1790"/><text x="22.9486%" y="655.50"></text></g><g><title>main`epaint::tessellator::tessellate_shapes (1,843 samples, 1.27%)</title><rect x="22.6662%" y="661" width="1.2713%" height="15" fill="rgb(233,115,5)" fg:x="32858" fg:w="1843"/><text x="22.9162%" y="671.50"></text></g><g><title>main`egui::context::Context::tessellate (1,954 samples, 1.35%)</title><rect x="22.5910%" y="677" width="1.3479%" height="15" fill="rgb(207,226,44)" fg:x="32749" fg:w="1954"/><text x="22.8410%" y="687.50"></text></g><g><title>main`bevy_egui::systems::process_output_system (2,114 samples, 1.46%)</title><rect x="22.4827%" y="693" width="1.4583%" height="15" fill="rgb(208,126,0)" fg:x="32592" fg:w="2114"/><text x="22.7327%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (36 samples, 0.02%)</title><rect x="23.9734%" y="613" width="0.0248%" height="15" fill="rgb(244,66,21)" fg:x="34753" fg:w="36"/><text x="24.2234%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (23 samples, 0.02%)</title><rect x="23.9982%" y="613" width="0.0159%" height="15" fill="rgb(222,97,12)" fg:x="34789" fg:w="23"/><text x="24.2482%" y="623.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::device_limits (68 samples, 0.05%)</title><rect x="23.9679%" y="677" width="0.0469%" height="15" fill="rgb(219,213,19)" fg:x="34745" fg:w="68"/><text x="24.2179%" y="687.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_limits (68 samples, 0.05%)</title><rect x="23.9679%" y="661" width="0.0469%" height="15" fill="rgb(252,169,30)" fg:x="34745" fg:w="68"/><text x="24.2179%" y="671.50"></text></g><g><title>main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_limits (67 samples, 0.05%)</title><rect x="23.9685%" y="645" width="0.0462%" height="15" fill="rgb(206,32,51)" fg:x="34746" fg:w="67"/><text x="24.2185%" y="655.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (65 samples, 0.04%)</title><rect x="23.9699%" y="629" width="0.0448%" height="15" fill="rgb(250,172,42)" fg:x="34748" fg:w="65"/><text x="24.2199%" y="639.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (27 samples, 0.02%)</title><rect x="24.0168%" y="613" width="0.0186%" height="15" fill="rgb(209,34,43)" fg:x="34816" fg:w="27"/><text x="24.2668%" y="623.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::wait_for_readers (21 samples, 0.01%)</title><rect x="24.0210%" y="597" width="0.0145%" height="15" fill="rgb(223,11,35)" fg:x="34822" fg:w="21"/><text x="24.2710%" y="607.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (21 samples, 0.01%)</title><rect x="24.0430%" y="597" width="0.0145%" height="15" fill="rgb(251,219,26)" fg:x="34854" fg:w="21"/><text x="24.2930%" y="607.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::blitCDMBuffer (19 samples, 0.01%)</title><rect x="24.0444%" y="581" width="0.0131%" height="15" fill="rgb(231,119,3)" fg:x="34856" fg:w="19"/><text x="24.2944%" y="591.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (29 samples, 0.02%)</title><rect x="24.0403%" y="613" width="0.0200%" height="15" fill="rgb(216,97,11)" fg:x="34850" fg:w="29"/><text x="24.2903%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (86 samples, 0.06%)</title><rect x="24.0693%" y="453" width="0.0593%" height="15" fill="rgb(223,59,9)" fg:x="34892" fg:w="86"/><text x="24.3193%" y="463.50"></text></g><g><title>IOKit`io_connect_method (88 samples, 0.06%)</title><rect x="24.0686%" y="469" width="0.0607%" height="15" fill="rgb(233,93,31)" fg:x="34891" fg:w="88"/><text x="24.3186%" y="479.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (93 samples, 0.06%)</title><rect x="24.0658%" y="501" width="0.0642%" height="15" fill="rgb(239,81,33)" fg:x="34887" fg:w="93"/><text x="24.3158%" y="511.50"></text></g><g><title>IOKit`IOConnectCallMethod (89 samples, 0.06%)</title><rect x="24.0686%" y="485" width="0.0614%" height="15" fill="rgb(213,120,34)" fg:x="34891" fg:w="89"/><text x="24.3186%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (99 samples, 0.07%)</title><rect x="24.0630%" y="533" width="0.0683%" height="15" fill="rgb(243,49,53)" fg:x="34883" fg:w="99"/><text x="24.3130%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (98 samples, 0.07%)</title><rect x="24.0637%" y="517" width="0.0676%" height="15" fill="rgb(247,216,33)" fg:x="34884" fg:w="98"/><text x="24.3137%" y="527.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (108 samples, 0.07%)</title><rect x="24.0630%" y="549" width="0.0745%" height="15" fill="rgb(226,26,14)" fg:x="34883" fg:w="108"/><text x="24.3130%" y="559.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (110 samples, 0.08%)</title><rect x="24.0630%" y="565" width="0.0759%" height="15" fill="rgb(215,49,53)" fg:x="34883" fg:w="110"/><text x="24.3130%" y="575.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (123 samples, 0.08%)</title><rect x="24.0603%" y="613" width="0.0848%" height="15" fill="rgb(245,162,40)" fg:x="34879" fg:w="123"/><text x="24.3103%" y="623.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (123 samples, 0.08%)</title><rect x="24.0603%" y="597" width="0.0848%" height="15" fill="rgb(229,68,17)" fg:x="34879" fg:w="123"/><text x="24.3103%" y="607.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (119 samples, 0.08%)</title><rect x="24.0630%" y="581" width="0.0821%" height="15" fill="rgb(213,182,10)" fg:x="34883" fg:w="119"/><text x="24.3130%" y="591.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (188 samples, 0.13%)</title><rect x="24.0168%" y="629" width="0.1297%" height="15" fill="rgb(245,125,30)" fg:x="34816" fg:w="188"/><text x="24.2668%" y="639.50"></text></g><g><title>main`bevy_pbr::render::light::prepare_lights (276 samples, 0.19%)</title><rect x="23.9575%" y="693" width="0.1904%" height="15" fill="rgb(232,202,2)" fg:x="34730" fg:w="276"/><text x="24.2075%" y="703.50"></text></g><g><title>main`wgpu::Queue::write_buffer (190 samples, 0.13%)</title><rect x="24.0168%" y="677" width="0.1311%" height="15" fill="rgb(237,140,51)" fg:x="34816" fg:w="190"/><text x="24.2668%" y="687.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (190 samples, 0.13%)</title><rect x="24.0168%" y="661" width="0.1311%" height="15" fill="rgb(236,157,25)" fg:x="34816" fg:w="190"/><text x="24.2668%" y="671.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (190 samples, 0.13%)</title><rect x="24.0168%" y="645" width="0.1311%" height="15" fill="rgb(219,209,0)" fg:x="34816" fg:w="190"/><text x="24.2668%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (78 samples, 0.05%)</title><rect x="24.1638%" y="629" width="0.0538%" height="15" fill="rgb(240,116,54)" fg:x="35029" fg:w="78"/><text x="24.4138%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (30 samples, 0.02%)</title><rect x="24.2231%" y="597" width="0.0207%" height="15" fill="rgb(216,10,36)" fg:x="35115" fg:w="30"/><text x="24.4731%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (48 samples, 0.03%)</title><rect x="24.2438%" y="597" width="0.0331%" height="15" fill="rgb(222,72,44)" fg:x="35145" fg:w="48"/><text x="24.4938%" y="607.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (87 samples, 0.06%)</title><rect x="24.2203%" y="613" width="0.0600%" height="15" fill="rgb(232,159,9)" fg:x="35111" fg:w="87"/><text x="24.4703%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (23 samples, 0.02%)</title><rect x="24.2810%" y="597" width="0.0159%" height="15" fill="rgb(210,39,32)" fg:x="35199" fg:w="23"/><text x="24.5310%" y="607.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (28 samples, 0.02%)</title><rect x="24.2803%" y="613" width="0.0193%" height="15" fill="rgb(216,194,45)" fg:x="35198" fg:w="28"/><text x="24.5303%" y="623.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (19 samples, 0.01%)</title><rect x="24.2997%" y="613" width="0.0131%" height="15" fill="rgb(218,18,35)" fg:x="35226" fg:w="19"/><text x="24.5497%" y="623.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (318 samples, 0.22%)</title><rect x="24.3155%" y="501" width="0.2194%" height="15" fill="rgb(207,83,51)" fg:x="35249" fg:w="318"/><text x="24.5655%" y="511.50"></text></g><g><title>IOKit`IOConnectCallMethod (318 samples, 0.22%)</title><rect x="24.3155%" y="485" width="0.2194%" height="15" fill="rgb(225,63,43)" fg:x="35249" fg:w="318"/><text x="24.5655%" y="495.50"></text></g><g><title>IOKit`io_connect_method (318 samples, 0.22%)</title><rect x="24.3155%" y="469" width="0.2194%" height="15" fill="rgb(207,57,36)" fg:x="35249" fg:w="318"/><text x="24.5655%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (317 samples, 0.22%)</title><rect x="24.3162%" y="453" width="0.2187%" height="15" fill="rgb(216,99,33)" fg:x="35250" fg:w="317"/><text x="24.5662%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (325 samples, 0.22%)</title><rect x="24.3148%" y="517" width="0.2242%" height="15" fill="rgb(225,42,16)" fg:x="35248" fg:w="325"/><text x="24.5648%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (326 samples, 0.22%)</title><rect x="24.3148%" y="533" width="0.2249%" height="15" fill="rgb(220,201,45)" fg:x="35248" fg:w="326"/><text x="24.5648%" y="543.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (328 samples, 0.23%)</title><rect x="24.3141%" y="549" width="0.2263%" height="15" fill="rgb(225,33,4)" fg:x="35247" fg:w="328"/><text x="24.5641%" y="559.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (330 samples, 0.23%)</title><rect x="24.3135%" y="565" width="0.2276%" height="15" fill="rgb(224,33,50)" fg:x="35246" fg:w="330"/><text x="24.5635%" y="575.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (351 samples, 0.24%)</title><rect x="24.3128%" y="613" width="0.2421%" height="15" fill="rgb(246,198,51)" fg:x="35245" fg:w="351"/><text x="24.5628%" y="623.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (351 samples, 0.24%)</title><rect x="24.3128%" y="597" width="0.2421%" height="15" fill="rgb(205,22,4)" fg:x="35245" fg:w="351"/><text x="24.5628%" y="607.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (350 samples, 0.24%)</title><rect x="24.3135%" y="581" width="0.2414%" height="15" fill="rgb(206,3,8)" fg:x="35246" fg:w="350"/><text x="24.5635%" y="591.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (490 samples, 0.34%)</title><rect x="24.2176%" y="629" width="0.3380%" height="15" fill="rgb(251,23,15)" fg:x="35107" fg:w="490"/><text x="24.4676%" y="639.50"></text></g><g><title>main`bevy_render::render_resource::buffer_vec::BufferVec&lt;T&gt;::write_buffer (573 samples, 0.40%)</title><rect x="24.1617%" y="693" width="0.3953%" height="15" fill="rgb(252,88,28)" fg:x="35026" fg:w="573"/><text x="24.4117%" y="703.50"></text></g><g><title>main`wgpu::Queue::write_buffer (572 samples, 0.39%)</title><rect x="24.1624%" y="677" width="0.3946%" height="15" fill="rgb(212,127,14)" fg:x="35027" fg:w="572"/><text x="24.4124%" y="687.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (571 samples, 0.39%)</title><rect x="24.1631%" y="661" width="0.3939%" height="15" fill="rgb(247,145,37)" fg:x="35028" fg:w="571"/><text x="24.4131%" y="671.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (571 samples, 0.39%)</title><rect x="24.1631%" y="645" width="0.3939%" height="15" fill="rgb(209,117,53)" fg:x="35028" fg:w="571"/><text x="24.4131%" y="655.50"></text></g><g><title>main`bevy_ui::layout::ui_layout_system (16 samples, 0.01%)</title><rect x="24.5949%" y="693" width="0.0110%" height="15" fill="rgb(212,90,42)" fg:x="35654" fg:w="16"/><text x="24.8449%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (225 samples, 0.16%)</title><rect x="24.6791%" y="661" width="0.1552%" height="15" fill="rgb(218,164,37)" fg:x="35776" fg:w="225"/><text x="24.9291%" y="671.50"></text></g><g><title>main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.01%)</title><rect x="24.8343%" y="661" width="0.0145%" height="15" fill="rgb(246,65,34)" fg:x="36001" fg:w="21"/><text x="25.0843%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.01%)</title><rect x="24.8363%" y="645" width="0.0124%" height="15" fill="rgb(231,100,33)" fg:x="36004" fg:w="18"/><text x="25.0863%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (15 samples, 0.01%)</title><rect x="24.8384%" y="629" width="0.0103%" height="15" fill="rgb(228,126,14)" fg:x="36007" fg:w="15"/><text x="25.0884%" y="639.50"></text></g><g><title>main`&lt;bevy_egui::EguiRenderOutput as bevy_render::extract_component::ExtractComponent&gt;::extract_component (247 samples, 0.17%)</title><rect x="24.6791%" y="677" width="0.1704%" height="15" fill="rgb(215,173,21)" fg:x="35776" fg:w="247"/><text x="24.9291%" y="687.50"></text></g><g><title>main`egui::painter::Painter::add (15 samples, 0.01%)</title><rect x="24.8964%" y="389" width="0.0103%" height="15" fill="rgb(210,6,40)" fg:x="36091" fg:w="15"/><text x="25.1464%" y="399.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (49 samples, 0.03%)</title><rect x="24.8957%" y="405" width="0.0338%" height="15" fill="rgb(212,48,18)" fg:x="36090" fg:w="49"/><text x="25.1457%" y="415.50"></text></g><g><title>main`egui::widgets::label::Label::layout_in_ui (32 samples, 0.02%)</title><rect x="24.9074%" y="389" width="0.0221%" height="15" fill="rgb(230,214,11)" fg:x="36107" fg:w="32"/><text x="25.1574%" y="399.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (22 samples, 0.02%)</title><rect x="24.9357%" y="357" width="0.0152%" height="15" fill="rgb(254,105,39)" fg:x="36148" fg:w="22"/><text x="25.1857%" y="367.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (30 samples, 0.02%)</title><rect x="24.9322%" y="373" width="0.0207%" height="15" fill="rgb(245,158,5)" fg:x="36143" fg:w="30"/><text x="25.1822%" y="383.50"></text></g><g><title>main`egui::ui::Ui::horizontal_with_main_wrap_dyn (35 samples, 0.02%)</title><rect x="24.9295%" y="389" width="0.0241%" height="15" fill="rgb(249,208,11)" fg:x="36139" fg:w="35"/><text x="25.1795%" y="399.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (36 samples, 0.02%)</title><rect x="24.9295%" y="405" width="0.0248%" height="15" fill="rgb(210,39,28)" fg:x="36139" fg:w="36"/><text x="25.1795%" y="415.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (46 samples, 0.03%)</title><rect x="24.9750%" y="357" width="0.0317%" height="15" fill="rgb(211,56,53)" fg:x="36205" fg:w="46"/><text x="25.2250%" y="367.50"></text></g><g><title>main`alloc::fmt::format::format_inner (20 samples, 0.01%)</title><rect x="25.0178%" y="341" width="0.0138%" height="15" fill="rgb(226,201,30)" fg:x="36267" fg:w="20"/><text x="25.2678%" y="351.50"></text></g><g><title>main`core::fmt::write (19 samples, 0.01%)</title><rect x="25.0185%" y="325" width="0.0131%" height="15" fill="rgb(239,101,34)" fg:x="36268" fg:w="19"/><text x="25.2685%" y="335.50"></text></g><g><title>main`core::fmt::float::float_to_decimal_common_exact (19 samples, 0.01%)</title><rect x="25.0185%" y="309" width="0.0131%" height="15" fill="rgb(226,209,5)" fg:x="36268" fg:w="19"/><text x="25.2685%" y="319.50"></text></g><g><title>main`emath::format_with_decimals_in_range (23 samples, 0.02%)</title><rect x="25.0178%" y="357" width="0.0159%" height="15" fill="rgb(250,105,47)" fg:x="36267" fg:w="23"/><text x="25.2678%" y="367.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (95 samples, 0.07%)</title><rect x="24.9688%" y="373" width="0.0655%" height="15" fill="rgb(230,72,3)" fg:x="36196" fg:w="95"/><text x="25.2188%" y="383.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (106 samples, 0.07%)</title><rect x="24.9667%" y="389" width="0.0731%" height="15" fill="rgb(232,218,39)" fg:x="36193" fg:w="106"/><text x="25.2167%" y="399.50"></text></g><g><title>main`egui::ui::Ui::with_layout_dyn (111 samples, 0.08%)</title><rect x="24.9660%" y="405" width="0.0766%" height="15" fill="rgb(248,166,6)" fg:x="36192" fg:w="111"/><text x="25.2160%" y="415.50"></text></g><g><title>main`egui_extras::table::TableBody::row (242 samples, 0.17%)</title><rect x="24.8770%" y="437" width="0.1669%" height="15" fill="rgb(247,89,20)" fg:x="36063" fg:w="242"/><text x="25.1270%" y="447.50"></text></g><g><title>main`egui_extras::layout::StripLayout::add (227 samples, 0.16%)</title><rect x="24.8874%" y="421" width="0.1566%" height="15" fill="rgb(248,130,54)" fg:x="36078" fg:w="227"/><text x="25.1374%" y="431.50"></text></g><g><title>main`egui::painter::Painter::add (43 samples, 0.03%)</title><rect x="25.0971%" y="373" width="0.0297%" height="15" fill="rgb(234,196,4)" fg:x="36382" fg:w="43"/><text x="25.3471%" y="383.50"></text></g><g><title>main`epaint::shape_transform::adjust_colors (34 samples, 0.02%)</title><rect x="25.1033%" y="357" width="0.0235%" height="15" fill="rgb(250,143,31)" fg:x="36391" fg:w="34"/><text x="25.3533%" y="367.50"></text></g><g><title>main`egui::context::Context::read (42 samples, 0.03%)</title><rect x="25.1378%" y="357" width="0.0290%" height="15" fill="rgb(211,110,34)" fg:x="36441" fg:w="42"/><text x="25.3878%" y="367.50"></text></g><g><title>main`egui::widget_text::WidgetTextJob::into_galley (38 samples, 0.03%)</title><rect x="25.1406%" y="341" width="0.0262%" height="15" fill="rgb(215,124,48)" fg:x="36445" fg:w="38"/><text x="25.3906%" y="351.50"></text></g><g><title>main`epaint::text::fonts::FontsAndCache::layout_job (34 samples, 0.02%)</title><rect x="25.1433%" y="325" width="0.0235%" height="15" fill="rgb(216,46,13)" fg:x="36449" fg:w="34"/><text x="25.3933%" y="335.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_text_job (16 samples, 0.01%)</title><rect x="25.1778%" y="357" width="0.0110%" height="15" fill="rgb(205,184,25)" fg:x="36499" fg:w="16"/><text x="25.4278%" y="367.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (137 samples, 0.09%)</title><rect x="25.0957%" y="389" width="0.0945%" height="15" fill="rgb(228,1,10)" fg:x="36380" fg:w="137"/><text x="25.3457%" y="399.50"></text></g><g><title>main`egui::widgets::label::Label::layout_in_ui (90 samples, 0.06%)</title><rect x="25.1281%" y="373" width="0.0621%" height="15" fill="rgb(213,116,27)" fg:x="36427" fg:w="90"/><text x="25.3781%" y="383.50"></text></g><g><title>main`egui::context::Context::interact (23 samples, 0.02%)</title><rect x="25.2247%" y="293" width="0.0159%" height="15" fill="rgb(241,95,50)" fg:x="36567" fg:w="23"/><text x="25.4747%" y="303.50"></text></g><g><title>main`egui::ui::Ui::allocate_at_least (27 samples, 0.02%)</title><rect x="25.2247%" y="309" width="0.0186%" height="15" fill="rgb(238,48,32)" fg:x="36567" fg:w="27"/><text x="25.4747%" y="319.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_galley (17 samples, 0.01%)</title><rect x="25.2433%" y="309" width="0.0117%" height="15" fill="rgb(235,113,49)" fg:x="36594" fg:w="17"/><text x="25.4933%" y="319.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (62 samples, 0.04%)</title><rect x="25.2164%" y="325" width="0.0428%" height="15" fill="rgb(205,127,43)" fg:x="36555" fg:w="62"/><text x="25.4664%" y="335.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (96 samples, 0.07%)</title><rect x="25.2109%" y="341" width="0.0662%" height="15" fill="rgb(250,162,2)" fg:x="36547" fg:w="96"/><text x="25.4609%" y="351.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (136 samples, 0.09%)</title><rect x="25.2033%" y="357" width="0.0938%" height="15" fill="rgb(220,13,41)" fg:x="36536" fg:w="136"/><text x="25.4533%" y="367.50"></text></g><g><title>main`egui::ui::Ui::horizontal_with_main_wrap_dyn (151 samples, 0.10%)</title><rect x="25.1937%" y="373" width="0.1042%" height="15" fill="rgb(249,221,25)" fg:x="36522" fg:w="151"/><text x="25.4437%" y="383.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (157 samples, 0.11%)</title><rect x="25.1902%" y="389" width="0.1083%" height="15" fill="rgb(215,208,19)" fg:x="36517" fg:w="157"/><text x="25.4402%" y="399.50"></text></g><g><title>main`egui::ui::Ui::allocate_rect (15 samples, 0.01%)</title><rect x="25.3089%" y="389" width="0.0103%" height="15" fill="rgb(236,175,2)" fg:x="36689" fg:w="15"/><text x="25.5589%" y="399.50"></text></g><g><title>main`egui_extras::layout::StripLayout::add (374 samples, 0.26%)</title><rect x="25.0702%" y="405" width="0.2580%" height="15" fill="rgb(241,52,2)" fg:x="36343" fg:w="374"/><text x="25.3202%" y="415.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (658 samples, 0.45%)</title><rect x="24.8750%" y="453" width="0.4539%" height="15" fill="rgb(248,140,14)" fg:x="36060" fg:w="658"/><text x="25.1250%" y="463.50"></text></g><g><title>main`rusty_cde::ui::scenario::common::draw_ui_scenario_common (413 samples, 0.28%)</title><rect x="25.0440%" y="437" width="0.2849%" height="15" fill="rgb(253,22,42)" fg:x="36305" fg:w="413"/><text x="25.2940%" y="447.50"></text></g><g><title>main`egui_extras::table::TableBody::row (403 samples, 0.28%)</title><rect x="25.0509%" y="421" width="0.2780%" height="15" fill="rgb(234,61,47)" fg:x="36315" fg:w="403"/><text x="25.3009%" y="431.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (662 samples, 0.46%)</title><rect x="24.8736%" y="485" width="0.4567%" height="15" fill="rgb(208,226,15)" fg:x="36058" fg:w="662"/><text x="25.1236%" y="495.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (660 samples, 0.46%)</title><rect x="24.8750%" y="469" width="0.4553%" height="15" fill="rgb(217,221,4)" fg:x="36060" fg:w="660"/><text x="25.1250%" y="479.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (672 samples, 0.46%)</title><rect x="24.8736%" y="501" width="0.4636%" height="15" fill="rgb(212,174,34)" fg:x="36058" fg:w="672"/><text x="25.1236%" y="511.50"></text></g><g><title>main`egui_extras::table::Table::body (674 samples, 0.46%)</title><rect x="24.8729%" y="517" width="0.4649%" height="15" fill="rgb(253,83,4)" fg:x="36057" fg:w="674"/><text x="25.1229%" y="527.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 0.01%)</title><rect x="25.3420%" y="485" width="0.0110%" height="15" fill="rgb(250,195,49)" fg:x="36737" fg:w="16"/><text x="25.5920%" y="495.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (21 samples, 0.01%)</title><rect x="25.3399%" y="501" width="0.0145%" height="15" fill="rgb(241,192,25)" fg:x="36734" fg:w="21"/><text x="25.5899%" y="511.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (706 samples, 0.49%)</title><rect x="24.8701%" y="533" width="0.4870%" height="15" fill="rgb(208,124,10)" fg:x="36053" fg:w="706"/><text x="25.1201%" y="543.50"></text></g><g><title>main`egui_extras::table::TableBuilder::header (28 samples, 0.02%)</title><rect x="25.3378%" y="517" width="0.0193%" height="15" fill="rgb(222,33,0)" fg:x="36731" fg:w="28"/><text x="25.5878%" y="527.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (711 samples, 0.49%)</title><rect x="24.8681%" y="565" width="0.4905%" height="15" fill="rgb(234,209,28)" fg:x="36050" fg:w="711"/><text x="25.1181%" y="575.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (709 samples, 0.49%)</title><rect x="24.8695%" y="549" width="0.4891%" height="15" fill="rgb(224,11,23)" fg:x="36052" fg:w="709"/><text x="25.1195%" y="559.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (720 samples, 0.50%)</title><rect x="24.8681%" y="613" width="0.4967%" height="15" fill="rgb(232,99,1)" fg:x="36050" fg:w="720"/><text x="25.1181%" y="623.50"></text></g><g><title>main`rusty_cde::ui::scenario::data::draw_ui_scenario_data (720 samples, 0.50%)</title><rect x="24.8681%" y="597" width="0.4967%" height="15" fill="rgb(237,95,45)" fg:x="36050" fg:w="720"/><text x="25.1181%" y="607.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (720 samples, 0.50%)</title><rect x="24.8681%" y="581" width="0.4967%" height="15" fill="rgb(208,109,11)" fg:x="36050" fg:w="720"/><text x="25.1181%" y="591.50"></text></g><g><title>main`egui::painter::Painter::add (41 samples, 0.03%)</title><rect x="25.4151%" y="405" width="0.0283%" height="15" fill="rgb(216,190,48)" fg:x="36843" fg:w="41"/><text x="25.6651%" y="415.50"></text></g><g><title>main`epaint::shape_transform::adjust_colors (25 samples, 0.02%)</title><rect x="25.4261%" y="389" width="0.0172%" height="15" fill="rgb(251,171,36)" fg:x="36859" fg:w="25"/><text x="25.6761%" y="399.50"></text></g><g><title>main`egui::context::Context::read (22 samples, 0.02%)</title><rect x="25.4530%" y="389" width="0.0152%" height="15" fill="rgb(230,62,22)" fg:x="36898" fg:w="22"/><text x="25.7030%" y="399.50"></text></g><g><title>main`egui::widget_text::WidgetTextJob::into_galley (20 samples, 0.01%)</title><rect x="25.4544%" y="373" width="0.0138%" height="15" fill="rgb(225,114,35)" fg:x="36900" fg:w="20"/><text x="25.7044%" y="383.50"></text></g><g><title>main`epaint::text::fonts::FontsAndCache::layout_job (16 samples, 0.01%)</title><rect x="25.4572%" y="357" width="0.0110%" height="15" fill="rgb(215,118,42)" fg:x="36904" fg:w="16"/><text x="25.7072%" y="367.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (102 samples, 0.07%)</title><rect x="25.4144%" y="421" width="0.0704%" height="15" fill="rgb(243,119,21)" fg:x="36842" fg:w="102"/><text x="25.6644%" y="431.50"></text></g><g><title>main`egui::widgets::label::Label::layout_in_ui (58 samples, 0.04%)</title><rect x="25.4448%" y="405" width="0.0400%" height="15" fill="rgb(252,177,53)" fg:x="36886" fg:w="58"/><text x="25.6948%" y="415.50"></text></g><g><title>main`egui::ui::Ui::allocate_at_least (16 samples, 0.01%)</title><rect x="25.5089%" y="341" width="0.0110%" height="15" fill="rgb(237,209,29)" fg:x="36979" fg:w="16"/><text x="25.7589%" y="351.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_galley (15 samples, 0.01%)</title><rect x="25.5200%" y="341" width="0.0103%" height="15" fill="rgb(212,65,23)" fg:x="36995" fg:w="15"/><text x="25.7700%" y="351.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (47 samples, 0.03%)</title><rect x="25.5020%" y="357" width="0.0324%" height="15" fill="rgb(230,222,46)" fg:x="36969" fg:w="47"/><text x="25.7520%" y="367.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (72 samples, 0.05%)</title><rect x="25.4993%" y="373" width="0.0497%" height="15" fill="rgb(215,135,32)" fg:x="36965" fg:w="72"/><text x="25.7493%" y="383.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (124 samples, 0.09%)</title><rect x="25.4848%" y="421" width="0.0855%" height="15" fill="rgb(246,101,22)" fg:x="36944" fg:w="124"/><text x="25.7348%" y="431.50"></text></g><g><title>main`egui::ui::Ui::horizontal_with_main_wrap_dyn (123 samples, 0.08%)</title><rect x="25.4855%" y="405" width="0.0848%" height="15" fill="rgb(206,107,13)" fg:x="36945" fg:w="123"/><text x="25.7355%" y="415.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (118 samples, 0.08%)</title><rect x="25.4889%" y="389" width="0.0814%" height="15" fill="rgb(250,100,44)" fg:x="36950" fg:w="118"/><text x="25.7389%" y="399.50"></text></g><g><title>main`egui_extras::table::TableBody::row (326 samples, 0.22%)</title><rect x="25.3751%" y="453" width="0.2249%" height="15" fill="rgb(231,147,38)" fg:x="36785" fg:w="326"/><text x="25.6251%" y="463.50"></text></g><g><title>main`egui_extras::layout::StripLayout::add (300 samples, 0.21%)</title><rect x="25.3930%" y="437" width="0.2069%" height="15" fill="rgb(229,8,40)" fg:x="36811" fg:w="300"/><text x="25.6430%" y="447.50"></text></g><g><title>main`egui::widget_text::WidgetTextJob::into_galley (29 samples, 0.02%)</title><rect x="25.6352%" y="357" width="0.0200%" height="15" fill="rgb(221,135,30)" fg:x="37162" fg:w="29"/><text x="25.8852%" y="367.50"></text></g><g><title>main`epaint::text::fonts::FontsAndCache::layout_job (27 samples, 0.02%)</title><rect x="25.6365%" y="341" width="0.0186%" height="15" fill="rgb(249,193,18)" fg:x="37164" fg:w="27"/><text x="25.8865%" y="351.50"></text></g><g><title>main`egui::context::Context::read (34 samples, 0.02%)</title><rect x="25.6324%" y="373" width="0.0235%" height="15" fill="rgb(209,133,39)" fg:x="37158" fg:w="34"/><text x="25.8824%" y="383.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_text_job (16 samples, 0.01%)</title><rect x="25.6655%" y="373" width="0.0110%" height="15" fill="rgb(232,100,14)" fg:x="37206" fg:w="16"/><text x="25.9155%" y="383.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (86 samples, 0.06%)</title><rect x="25.6186%" y="405" width="0.0593%" height="15" fill="rgb(224,185,1)" fg:x="37138" fg:w="86"/><text x="25.8686%" y="415.50"></text></g><g><title>main`egui::widgets::label::Label::layout_in_ui (69 samples, 0.05%)</title><rect x="25.6303%" y="389" width="0.0476%" height="15" fill="rgb(223,139,8)" fg:x="37155" fg:w="69"/><text x="25.8803%" y="399.50"></text></g><g><title>main`egui::context::Context::read (17 samples, 0.01%)</title><rect x="25.7262%" y="309" width="0.0117%" height="15" fill="rgb(232,213,38)" fg:x="37294" fg:w="17"/><text x="25.9762%" y="319.50"></text></g><g><title>main`epaint::text::fonts::FontsAndCache::layout_job (15 samples, 0.01%)</title><rect x="25.7276%" y="293" width="0.0103%" height="15" fill="rgb(207,94,22)" fg:x="37296" fg:w="15"/><text x="25.9776%" y="303.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (48 samples, 0.03%)</title><rect x="25.7090%" y="341" width="0.0331%" height="15" fill="rgb(219,183,54)" fg:x="37269" fg:w="48"/><text x="25.9590%" y="351.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_galley (23 samples, 0.02%)</title><rect x="25.7262%" y="325" width="0.0159%" height="15" fill="rgb(216,185,54)" fg:x="37294" fg:w="23"/><text x="25.9762%" y="335.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (87 samples, 0.06%)</title><rect x="25.7028%" y="357" width="0.0600%" height="15" fill="rgb(254,217,39)" fg:x="37260" fg:w="87"/><text x="25.9528%" y="367.50"></text></g><g><title>main`egui::ui::Ui::allocate_response (16 samples, 0.01%)</title><rect x="25.7676%" y="357" width="0.0110%" height="15" fill="rgb(240,178,23)" fg:x="37354" fg:w="16"/><text x="26.0176%" y="367.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (127 samples, 0.09%)</title><rect x="25.6945%" y="373" width="0.0876%" height="15" fill="rgb(218,11,47)" fg:x="37248" fg:w="127"/><text x="25.9445%" y="383.50"></text></g><g><title>main`egui::ui::Ui::horizontal_with_main_wrap_dyn (147 samples, 0.10%)</title><rect x="25.6821%" y="389" width="0.1014%" height="15" fill="rgb(218,51,51)" fg:x="37230" fg:w="147"/><text x="25.9321%" y="399.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (155 samples, 0.11%)</title><rect x="25.6779%" y="405" width="0.1069%" height="15" fill="rgb(238,126,27)" fg:x="37224" fg:w="155"/><text x="25.9279%" y="415.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (646 samples, 0.45%)</title><rect x="25.3689%" y="469" width="0.4456%" height="15" fill="rgb(249,202,22)" fg:x="36776" fg:w="646"/><text x="25.6189%" y="479.50"></text></g><g><title>main`rusty_cde::ui::scenario::common::draw_ui_scenario_common (311 samples, 0.21%)</title><rect x="25.6000%" y="453" width="0.2145%" height="15" fill="rgb(254,195,49)" fg:x="37111" fg:w="311"/><text x="25.8500%" y="463.50"></text></g><g><title>main`egui_extras::table::TableBody::row (310 samples, 0.21%)</title><rect x="25.6007%" y="437" width="0.2138%" height="15" fill="rgb(208,123,14)" fg:x="37112" fg:w="310"/><text x="25.8507%" y="447.50"></text></g><g><title>main`egui_extras::layout::StripLayout::add (300 samples, 0.21%)</title><rect x="25.6076%" y="421" width="0.2069%" height="15" fill="rgb(224,200,8)" fg:x="37122" fg:w="300"/><text x="25.8576%" y="431.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (650 samples, 0.45%)</title><rect x="25.3689%" y="501" width="0.4484%" height="15" fill="rgb(217,61,36)" fg:x="36776" fg:w="650"/><text x="25.6189%" y="511.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (650 samples, 0.45%)</title><rect x="25.3689%" y="485" width="0.4484%" height="15" fill="rgb(206,35,45)" fg:x="36776" fg:w="650"/><text x="25.6189%" y="495.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (653 samples, 0.45%)</title><rect x="25.3689%" y="517" width="0.4505%" height="15" fill="rgb(217,65,33)" fg:x="36776" fg:w="653"/><text x="25.6189%" y="527.50"></text></g><g><title>main`egui_extras::table::Table::body (656 samples, 0.45%)</title><rect x="25.3682%" y="533" width="0.4525%" height="15" fill="rgb(222,158,48)" fg:x="36775" fg:w="656"/><text x="25.6182%" y="543.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (669 samples, 0.46%)</title><rect x="25.3682%" y="549" width="0.4615%" height="15" fill="rgb(254,2,54)" fg:x="36775" fg:w="669"/><text x="25.6182%" y="559.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (673 samples, 0.46%)</title><rect x="25.3661%" y="581" width="0.4642%" height="15" fill="rgb(250,143,38)" fg:x="36772" fg:w="673"/><text x="25.6161%" y="591.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (670 samples, 0.46%)</title><rect x="25.3682%" y="565" width="0.4622%" height="15" fill="rgb(248,25,0)" fg:x="36775" fg:w="670"/><text x="25.6182%" y="575.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,404 samples, 0.97%)</title><rect x="24.8626%" y="645" width="0.9685%" height="15" fill="rgb(206,152,27)" fg:x="36042" fg:w="1404"/><text x="25.1126%" y="655.50"></text></g><g><title>main`egui::ui::Ui::columns_dyn (1,401 samples, 0.97%)</title><rect x="24.8646%" y="629" width="0.9664%" height="15" fill="rgb(240,77,30)" fg:x="36045" fg:w="1401"/><text x="25.1146%" y="639.50"></text></g><g><title>main`rusty_cde::ui::scenario::algorithm::draw_ui_scenario_algoriothm (675 samples, 0.47%)</title><rect x="25.3654%" y="613" width="0.4656%" height="15" fill="rgb(231,5,3)" fg:x="36771" fg:w="675"/><text x="25.6154%" y="623.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (675 samples, 0.47%)</title><rect x="25.3654%" y="597" width="0.4656%" height="15" fill="rgb(207,226,32)" fg:x="36771" fg:w="675"/><text x="25.6154%" y="607.50"></text></g><g><title>main`egui::containers::frame::Frame::show_dyn (1,405 samples, 0.97%)</title><rect x="24.8626%" y="661" width="0.9692%" height="15" fill="rgb(222,207,47)" fg:x="36042" fg:w="1405"/><text x="25.1126%" y="671.50"></text></g><g><title>main`egui::containers::panel::CentralPanel::show_dyn (1,408 samples, 0.97%)</title><rect x="24.8626%" y="677" width="0.9713%" height="15" fill="rgb(229,115,45)" fg:x="36042" fg:w="1408"/><text x="25.1126%" y="687.50"></text></g><g><title>main`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (37 samples, 0.03%)</title><rect x="25.8642%" y="533" width="0.0255%" height="15" fill="rgb(224,191,6)" fg:x="37494" fg:w="37"/><text x="26.1142%" y="543.50"></text></g><g><title>main`egui::widgets::slider::Slider::add_contents (59 samples, 0.04%)</title><rect x="25.8580%" y="549" width="0.0407%" height="15" fill="rgb(230,227,24)" fg:x="37485" fg:w="59"/><text x="26.1080%" y="559.50"></text></g><g><title>main`egui::ui::Ui::horizontal_with_main_wrap_dyn (67 samples, 0.05%)</title><rect x="25.8545%" y="565" width="0.0462%" height="15" fill="rgb(228,80,19)" fg:x="37480" fg:w="67"/><text x="26.1045%" y="575.50"></text></g><g><title>main`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (70 samples, 0.05%)</title><rect x="25.8531%" y="581" width="0.0483%" height="15" fill="rgb(247,229,0)" fg:x="37478" fg:w="70"/><text x="26.1031%" y="591.50"></text></g><g><title>main`egui::context::Context::interact (18 samples, 0.01%)</title><rect x="25.9228%" y="533" width="0.0124%" height="15" fill="rgb(237,194,15)" fg:x="37579" fg:w="18"/><text x="26.1728%" y="543.50"></text></g><g><title>main`egui::ui::Ui::allocate_at_least (25 samples, 0.02%)</title><rect x="25.9214%" y="549" width="0.0172%" height="15" fill="rgb(219,203,20)" fg:x="37577" fg:w="25"/><text x="26.1714%" y="559.50"></text></g><g><title>main`egui::context::Context::read (17 samples, 0.01%)</title><rect x="25.9407%" y="533" width="0.0117%" height="15" fill="rgb(234,128,8)" fg:x="37605" fg:w="17"/><text x="26.1907%" y="543.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_galley (23 samples, 0.02%)</title><rect x="25.9394%" y="549" width="0.0159%" height="15" fill="rgb(248,202,8)" fg:x="37603" fg:w="23"/><text x="26.1894%" y="559.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (112 samples, 0.08%)</title><rect x="25.9035%" y="565" width="0.0773%" height="15" fill="rgb(206,104,37)" fg:x="37551" fg:w="112"/><text x="26.1535%" y="575.50"></text></g><g><title>main`egui::widget_text::WidgetTextGalley::paint_with_fallback_color (37 samples, 0.03%)</title><rect x="25.9552%" y="549" width="0.0255%" height="15" fill="rgb(223,8,27)" fg:x="37626" fg:w="37"/><text x="26.2052%" y="559.50"></text></g><g><title>main`egui::painter::Painter::add (33 samples, 0.02%)</title><rect x="25.9580%" y="533" width="0.0228%" height="15" fill="rgb(216,217,28)" fg:x="37630" fg:w="33"/><text x="26.2080%" y="543.50"></text></g><g><title>main`epaint::shape_transform::adjust_colors (21 samples, 0.01%)</title><rect x="25.9663%" y="517" width="0.0145%" height="15" fill="rgb(249,199,1)" fg:x="37642" fg:w="21"/><text x="26.2163%" y="527.50"></text></g><g><title>main`egui::ui::Ui::add_enabled (123 samples, 0.08%)</title><rect x="25.9028%" y="581" width="0.0848%" height="15" fill="rgb(240,85,17)" fg:x="37550" fg:w="123"/><text x="26.1528%" y="591.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (215 samples, 0.15%)</title><rect x="25.8414%" y="597" width="0.1483%" height="15" fill="rgb(206,108,45)" fg:x="37461" fg:w="215"/><text x="26.0914%" y="607.50"></text></g><g><title>main`egui::ui::Ui::horizontal_with_main_wrap_dyn (221 samples, 0.15%)</title><rect x="25.8407%" y="613" width="0.1525%" height="15" fill="rgb(245,210,41)" fg:x="37460" fg:w="221"/><text x="26.0907%" y="623.50"></text></g><g><title>main`egui::widgets::text_edit::builder::TextEdit::show (25 samples, 0.02%)</title><rect x="26.0070%" y="565" width="0.0172%" height="15" fill="rgb(206,13,37)" fg:x="37701" fg:w="25"/><text x="26.2570%" y="575.50"></text></g><g><title>main`egui::widgets::text_edit::builder::TextEdit::show_content (21 samples, 0.01%)</title><rect x="26.0097%" y="549" width="0.0145%" height="15" fill="rgb(250,61,18)" fg:x="37705" fg:w="21"/><text x="26.2597%" y="559.50"></text></g><g><title>main`&lt;egui::widgets::text_edit::builder::TextEdit as egui::widgets::Widget&gt;::ui (28 samples, 0.02%)</title><rect x="26.0056%" y="581" width="0.0193%" height="15" fill="rgb(235,172,48)" fg:x="37699" fg:w="28"/><text x="26.2556%" y="591.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (51 samples, 0.04%)</title><rect x="25.9932%" y="597" width="0.0352%" height="15" fill="rgb(249,201,17)" fg:x="37681" fg:w="51"/><text x="26.2432%" y="607.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (276 samples, 0.19%)</title><rect x="25.8387%" y="629" width="0.1904%" height="15" fill="rgb(219,208,6)" fg:x="37457" fg:w="276"/><text x="26.0887%" y="639.50"></text></g><g><title>main`egui::ui::Ui::with_layout_dyn (52 samples, 0.04%)</title><rect x="25.9932%" y="613" width="0.0359%" height="15" fill="rgb(248,31,23)" fg:x="37681" fg:w="52"/><text x="26.2432%" y="623.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (279 samples, 0.19%)</title><rect x="25.8380%" y="645" width="0.1925%" height="15" fill="rgb(245,15,42)" fg:x="37456" fg:w="279"/><text x="26.0880%" y="655.50"></text></g><g><title>main`egui::containers::frame::Frame::show_dyn (289 samples, 0.20%)</title><rect x="25.8359%" y="661" width="0.1994%" height="15" fill="rgb(222,217,39)" fg:x="37453" fg:w="289"/><text x="26.0859%" y="671.50"></text></g><g><title>main`egui::containers::panel::TopBottomPanel::show_dyn (320 samples, 0.22%)</title><rect x="25.8338%" y="677" width="0.2207%" height="15" fill="rgb(210,219,27)" fg:x="37450" fg:w="320"/><text x="26.0838%" y="687.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,097 samples, 1.45%)</title><rect x="24.6128%" y="693" width="1.4466%" height="15" fill="rgb(252,166,36)" fg:x="35680" fg:w="2097"/><text x="24.8628%" y="703.50"></text></g><g><title>main`egui::context::Context::interact_with_hovered (16 samples, 0.01%)</title><rect x="26.1877%" y="469" width="0.0110%" height="15" fill="rgb(245,132,34)" fg:x="37963" fg:w="16"/><text x="26.4377%" y="479.50"></text></g><g><title>main`egui::context::Context::interact (25 samples, 0.02%)</title><rect x="26.1843%" y="485" width="0.0172%" height="15" fill="rgb(236,54,3)" fg:x="37958" fg:w="25"/><text x="26.4343%" y="495.50"></text></g><g><title>main`egui::ui::Ui::allocate_at_least (29 samples, 0.02%)</title><rect x="26.1829%" y="501" width="0.0200%" height="15" fill="rgb(241,173,43)" fg:x="37956" fg:w="29"/><text x="26.4329%" y="511.50"></text></g><g><title>main`egui::context::Context::read (20 samples, 0.01%)</title><rect x="26.2056%" y="485" width="0.0138%" height="15" fill="rgb(215,190,9)" fg:x="37989" fg:w="20"/><text x="26.4556%" y="495.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_galley (32 samples, 0.02%)</title><rect x="26.2029%" y="501" width="0.0221%" height="15" fill="rgb(242,101,16)" fg:x="37985" fg:w="32"/><text x="26.4529%" y="511.50"></text></g><g><title>main`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (92 samples, 0.06%)</title><rect x="26.1642%" y="517" width="0.0635%" height="15" fill="rgb(223,190,21)" fg:x="37929" fg:w="92"/><text x="26.4142%" y="527.50"></text></g><g><title>main`egui::painter::Painter::add (49 samples, 0.03%)</title><rect x="26.2456%" y="501" width="0.0338%" height="15" fill="rgb(215,228,25)" fg:x="38047" fg:w="49"/><text x="26.4956%" y="511.50"></text></g><g><title>main`egui::context::Context::write (34 samples, 0.02%)</title><rect x="26.2560%" y="485" width="0.0235%" height="15" fill="rgb(225,36,22)" fg:x="38062" fg:w="34"/><text x="26.5060%" y="495.50"></text></g><g><title>main`egui::response::Response::has_focus (23 samples, 0.02%)</title><rect x="26.2794%" y="501" width="0.0159%" height="15" fill="rgb(251,106,46)" fg:x="38096" fg:w="23"/><text x="26.5294%" y="511.50"></text></g><g><title>main`egui::response::Response::widget_info (32 samples, 0.02%)</title><rect x="26.2953%" y="501" width="0.0221%" height="15" fill="rgb(208,90,1)" fg:x="38119" fg:w="32"/><text x="26.5453%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.02%)</title><rect x="26.4450%" y="437" width="0.0186%" height="15" fill="rgb(243,10,4)" fg:x="38336" fg:w="27"/><text x="26.6950%" y="447.50"></text></g><g><title>main`core::hash::Hash::hash_slice (79 samples, 0.05%)</title><rect x="26.4726%" y="437" width="0.0545%" height="15" fill="rgb(212,137,27)" fg:x="38376" fg:w="79"/><text x="26.7226%" y="447.50"></text></g><g><title>main`egui::widget_text::WidgetTextJob::into_galley (232 samples, 0.16%)</title><rect x="26.3822%" y="469" width="0.1600%" height="15" fill="rgb(231,220,49)" fg:x="38245" fg:w="232"/><text x="26.6322%" y="479.50"></text></g><g><title>main`epaint::text::fonts::FontsAndCache::layout_job (195 samples, 0.13%)</title><rect x="26.4078%" y="453" width="0.1345%" height="15" fill="rgb(237,96,20)" fg:x="38282" fg:w="195"/><text x="26.6578%" y="463.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;epaint::text::text_layout_types::LayoutJob&gt; (22 samples, 0.02%)</title><rect x="26.5271%" y="437" width="0.0152%" height="15" fill="rgb(239,229,30)" fg:x="38455" fg:w="22"/><text x="26.7771%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.01%)</title><rect x="26.5319%" y="421" width="0.0103%" height="15" fill="rgb(219,65,33)" fg:x="38462" fg:w="15"/><text x="26.7819%" y="431.50"></text></g><g><title>main`egui::context::Context::read (255 samples, 0.18%)</title><rect x="26.3684%" y="485" width="0.1759%" height="15" fill="rgb(243,134,7)" fg:x="38225" fg:w="255"/><text x="26.6184%" y="495.50"></text></g><g><title>main`egui::context::Context::interact_with_hovered (21 samples, 0.01%)</title><rect x="26.5850%" y="453" width="0.0145%" height="15" fill="rgb(216,177,54)" fg:x="38539" fg:w="21"/><text x="26.8350%" y="463.50"></text></g><g><title>main`egui::context::Context::interact (39 samples, 0.03%)</title><rect x="26.5774%" y="469" width="0.0269%" height="15" fill="rgb(211,160,20)" fg:x="38528" fg:w="39"/><text x="26.8274%" y="479.50"></text></g><g><title>main`egui::layout::Layout::next_frame_ignore_wrap (25 samples, 0.02%)</title><rect x="26.6147%" y="469" width="0.0172%" height="15" fill="rgb(239,85,39)" fg:x="38582" fg:w="25"/><text x="26.8647%" y="479.50"></text></g><g><title>main`egui::ui::Ui::allocate_exact_size (133 samples, 0.09%)</title><rect x="26.5478%" y="485" width="0.0917%" height="15" fill="rgb(232,125,22)" fg:x="38485" fg:w="133"/><text x="26.7978%" y="495.50"></text></g><g><title>main`egui::widget_text::RichText::into_text_job (92 samples, 0.06%)</title><rect x="26.6651%" y="469" width="0.0635%" height="15" fill="rgb(244,57,34)" fg:x="38655" fg:w="92"/><text x="26.9151%" y="479.50"></text></g><g><title>main`egui::widget_text::RichText::into_text_and_format (42 samples, 0.03%)</title><rect x="26.6995%" y="453" width="0.0290%" height="15" fill="rgb(214,203,32)" fg:x="38705" fg:w="42"/><text x="26.9495%" y="463.50"></text></g><g><title>main`egui::style::TextStyle::resolve (15 samples, 0.01%)</title><rect x="26.7182%" y="437" width="0.0103%" height="15" fill="rgb(207,58,43)" fg:x="38732" fg:w="15"/><text x="26.9682%" y="447.50"></text></g><g><title>main`egui::widget_text::WidgetText::into_text_job (132 samples, 0.09%)</title><rect x="26.6409%" y="485" width="0.0911%" height="15" fill="rgb(215,193,15)" fg:x="38620" fg:w="132"/><text x="26.8909%" y="495.50"></text></g><g><title>main`egui::widgets::label::Label::layout_in_ui (682 samples, 0.47%)</title><rect x="26.3222%" y="501" width="0.4705%" height="15" fill="rgb(232,15,44)" fg:x="38158" fg:w="682"/><text x="26.5722%" y="511.50"></text></g><g><title>main`emath::align::Align2::align_size_within_rect (85 samples, 0.06%)</title><rect x="26.7340%" y="485" width="0.0586%" height="15" fill="rgb(212,3,48)" fg:x="38755" fg:w="85"/><text x="26.9840%" y="495.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (820 samples, 0.57%)</title><rect x="26.2277%" y="517" width="0.5657%" height="15" fill="rgb(218,128,7)" fg:x="38021" fg:w="820"/><text x="26.4777%" y="527.50"></text></g><g><title>main`egui::widgets::text_edit::builder::TextEdit::show_content (70 samples, 0.05%)</title><rect x="26.8341%" y="485" width="0.0483%" height="15" fill="rgb(226,216,39)" fg:x="38900" fg:w="70"/><text x="27.0841%" y="495.50"></text></g><g><title>main`egui::widgets::text_edit::builder::TextEdit::show_content::_{{closure}} (15 samples, 0.01%)</title><rect x="26.8720%" y="469" width="0.0103%" height="15" fill="rgb(243,47,51)" fg:x="38955" fg:w="15"/><text x="27.1220%" y="479.50"></text></g><g><title>main`egui::widgets::text_edit::builder::TextEdit::show (123 samples, 0.08%)</title><rect x="26.8016%" y="501" width="0.0848%" height="15" fill="rgb(241,183,40)" fg:x="38853" fg:w="123"/><text x="27.0516%" y="511.50"></text></g><g><title>main`&lt;egui::widgets::text_edit::builder::TextEdit as egui::widgets::Widget&gt;::ui (134 samples, 0.09%)</title><rect x="26.7968%" y="517" width="0.0924%" height="15" fill="rgb(231,217,32)" fg:x="38846" fg:w="134"/><text x="27.0468%" y="527.50"></text></g><g><title>main`core::fmt::float::_&lt;impl core::fmt::LowerExp for f32&gt;::fmt (23 samples, 0.02%)</title><rect x="26.8996%" y="501" width="0.0159%" height="15" fill="rgb(229,61,38)" fg:x="38995" fg:w="23"/><text x="27.1496%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.01%)</title><rect x="26.9465%" y="453" width="0.0131%" height="15" fill="rgb(225,210,5)" fg:x="39063" fg:w="19"/><text x="27.1965%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="26.9679%" y="421" width="0.0103%" height="15" fill="rgb(231,79,45)" fg:x="39094" fg:w="15"/><text x="27.2179%" y="431.50"></text></g><g><title>main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.02%)</title><rect x="26.9644%" y="437" width="0.0166%" height="15" fill="rgb(224,100,7)" fg:x="39089" fg:w="24"/><text x="27.2144%" y="447.50"></text></g><g><title>main`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (34 samples, 0.02%)</title><rect x="26.9596%" y="453" width="0.0235%" height="15" fill="rgb(241,198,18)" fg:x="39082" fg:w="34"/><text x="27.2096%" y="463.50"></text></g><g><title>main`core::fmt::Formatter::write_formatted_parts (66 samples, 0.05%)</title><rect x="26.9410%" y="469" width="0.0455%" height="15" fill="rgb(252,97,53)" fg:x="39055" fg:w="66"/><text x="27.1910%" y="479.50"></text></g><g><title>main`alloc::fmt::format::format_inner (207 samples, 0.14%)</title><rect x="26.8892%" y="517" width="0.1428%" height="15" fill="rgb(220,88,7)" fg:x="38980" fg:w="207"/><text x="27.1392%" y="527.50"></text></g><g><title>main`core::fmt::write (167 samples, 0.12%)</title><rect x="26.9168%" y="501" width="0.1152%" height="15" fill="rgb(213,176,14)" fg:x="39020" fg:w="167"/><text x="27.1668%" y="511.50"></text></g><g><title>main`core::fmt::float::float_to_exponential_common_exact (152 samples, 0.10%)</title><rect x="26.9272%" y="485" width="0.1049%" height="15" fill="rgb(246,73,7)" fg:x="39035" fg:w="152"/><text x="27.1772%" y="495.50"></text></g><g><title>main`core::num::flt2dec::strategy::grisu::format_exact_opt (50 samples, 0.03%)</title><rect x="26.9976%" y="469" width="0.0345%" height="15" fill="rgb(245,64,36)" fg:x="39137" fg:w="50"/><text x="27.2476%" y="479.50"></text></g><g><title>main`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (15 samples, 0.01%)</title><rect x="27.0217%" y="453" width="0.0103%" height="15" fill="rgb(245,80,10)" fg:x="39172" fg:w="15"/><text x="27.2717%" y="463.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;egui::ui::Ui&gt; (27 samples, 0.02%)</title><rect x="27.0334%" y="517" width="0.0186%" height="15" fill="rgb(232,107,50)" fg:x="39189" fg:w="27"/><text x="27.2834%" y="527.50"></text></g><g><title>main`egui::context::Context::interact_with_hovered (24 samples, 0.02%)</title><rect x="27.0721%" y="485" width="0.0166%" height="15" fill="rgb(253,3,0)" fg:x="39245" fg:w="24"/><text x="27.3221%" y="495.50"></text></g><g><title>main`egui::context::Context::interact (54 samples, 0.04%)</title><rect x="27.0679%" y="501" width="0.0373%" height="15" fill="rgb(212,99,53)" fg:x="39239" fg:w="54"/><text x="27.3179%" y="511.50"></text></g><g><title>main`egui::context::Context::rect_contains_pointer (24 samples, 0.02%)</title><rect x="27.0886%" y="485" width="0.0166%" height="15" fill="rgb(249,111,54)" fg:x="39269" fg:w="24"/><text x="27.3386%" y="495.50"></text></g><g><title>main`egui::ui::Ui::allocate_rect (83 samples, 0.06%)</title><rect x="27.0624%" y="517" width="0.0573%" height="15" fill="rgb(249,55,30)" fg:x="39231" fg:w="83"/><text x="27.3124%" y="527.50"></text></g><g><title>main`egui::id::Id::with (32 samples, 0.02%)</title><rect x="27.1245%" y="501" width="0.0221%" height="15" fill="rgb(237,47,42)" fg:x="39321" fg:w="32"/><text x="27.3745%" y="511.50"></text></g><g><title>main`egui::layout::Layout::next_frame_ignore_wrap (17 samples, 0.01%)</title><rect x="27.1797%" y="469" width="0.0117%" height="15" fill="rgb(211,20,18)" fg:x="39401" fg:w="17"/><text x="27.4297%" y="479.50"></text></g><g><title>main`egui::layout::Layout::region_from_max_rect (42 samples, 0.03%)</title><rect x="27.1707%" y="485" width="0.0290%" height="15" fill="rgb(231,203,46)" fg:x="39388" fg:w="42"/><text x="27.4207%" y="495.50"></text></g><g><title>main`egui::ui::Ui::child_ui (127 samples, 0.09%)</title><rect x="27.1196%" y="517" width="0.0876%" height="15" fill="rgb(237,142,3)" fg:x="39314" fg:w="127"/><text x="27.3696%" y="527.50"></text></g><g><title>main`egui::ui::Ui::child_ui_with_id_source (87 samples, 0.06%)</title><rect x="27.1472%" y="501" width="0.0600%" height="15" fill="rgb(241,107,1)" fg:x="39354" fg:w="87"/><text x="27.3972%" y="511.50"></text></g><g><title>main`egui_extras::layout::StripLayout::add (1,603 samples, 1.11%)</title><rect x="26.1222%" y="533" width="1.1058%" height="15" fill="rgb(229,83,13)" fg:x="37868" fg:w="1603"/><text x="26.3722%" y="543.50"></text></g><g><title>main`egui_extras::layout::StripLayout::cell_rect (15 samples, 0.01%)</title><rect x="27.2280%" y="533" width="0.0103%" height="15" fill="rgb(241,91,40)" fg:x="39471" fg:w="15"/><text x="27.4780%" y="543.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,686 samples, 1.16%)</title><rect x="26.0759%" y="565" width="1.1630%" height="15" fill="rgb(225,3,45)" fg:x="37801" fg:w="1686"/><text x="26.3259%" y="575.50"></text></g><g><title>main`egui_extras::table::TableBody::row (1,677 samples, 1.16%)</title><rect x="26.0822%" y="549" width="1.1568%" height="15" fill="rgb(244,223,14)" fg:x="37810" fg:w="1677"/><text x="26.3322%" y="559.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,687 samples, 1.16%)</title><rect x="26.0759%" y="597" width="1.1637%" height="15" fill="rgb(224,124,37)" fg:x="37801" fg:w="1687"/><text x="26.3259%" y="607.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (1,687 samples, 1.16%)</title><rect x="26.0759%" y="581" width="1.1637%" height="15" fill="rgb(251,171,30)" fg:x="37801" fg:w="1687"/><text x="26.3259%" y="591.50"></text></g><g><title>main`egui::containers::scroll_area::ScrollArea::show_viewport_dyn (1,700 samples, 1.17%)</title><rect x="26.0759%" y="613" width="1.1727%" height="15" fill="rgb(236,46,54)" fg:x="37801" fg:w="1700"/><text x="26.3259%" y="623.50"></text></g><g><title>main`egui_extras::table::Table::body (1,726 samples, 1.19%)</title><rect x="26.0746%" y="629" width="1.1906%" height="15" fill="rgb(245,213,5)" fg:x="37799" fg:w="1726"/><text x="26.3246%" y="639.50"></text></g><g><title>main`egui::context::Context::read (24 samples, 0.02%)</title><rect x="27.3080%" y="501" width="0.0166%" height="15" fill="rgb(230,144,27)" fg:x="39587" fg:w="24"/><text x="27.5580%" y="511.50"></text></g><g><title>main`egui::widget_text::WidgetTextJob::into_galley (24 samples, 0.02%)</title><rect x="27.3080%" y="485" width="0.0166%" height="15" fill="rgb(220,86,6)" fg:x="39587" fg:w="24"/><text x="27.5580%" y="495.50"></text></g><g><title>main`epaint::text::fonts::FontsAndCache::layout_job (21 samples, 0.01%)</title><rect x="27.3100%" y="469" width="0.0145%" height="15" fill="rgb(240,20,13)" fg:x="39590" fg:w="21"/><text x="27.5600%" y="479.50"></text></g><g><title>main`egui::widgets::label::Label::layout_in_ui (54 samples, 0.04%)</title><rect x="27.3031%" y="517" width="0.0373%" height="15" fill="rgb(217,89,34)" fg:x="39580" fg:w="54"/><text x="27.5531%" y="527.50"></text></g><g><title>main`egui_extras::layout::StripLayout::add (87 samples, 0.06%)</title><rect x="27.2811%" y="565" width="0.0600%" height="15" fill="rgb(229,13,5)" fg:x="39548" fg:w="87"/><text x="27.5311%" y="575.50"></text></g><g><title>main`egui::ui::Ui::heading (65 samples, 0.04%)</title><rect x="27.2962%" y="549" width="0.0448%" height="15" fill="rgb(244,67,35)" fg:x="39570" fg:w="65"/><text x="27.5462%" y="559.50"></text></g><g><title>main`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (65 samples, 0.04%)</title><rect x="27.2962%" y="533" width="0.0448%" height="15" fill="rgb(221,40,2)" fg:x="39570" fg:w="65"/><text x="27.5462%" y="543.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (99 samples, 0.07%)</title><rect x="27.2735%" y="597" width="0.0683%" height="15" fill="rgb(237,157,21)" fg:x="39537" fg:w="99"/><text x="27.5235%" y="607.50"></text></g><g><title>main`egui_extras::table::TableRow::col (92 samples, 0.06%)</title><rect x="27.2783%" y="581" width="0.0635%" height="15" fill="rgb(222,94,11)" fg:x="39544" fg:w="92"/><text x="27.5283%" y="591.50"></text></g><g><title>main`egui::ui::Ui::scope_dyn (100 samples, 0.07%)</title><rect x="27.2735%" y="613" width="0.0690%" height="15" fill="rgb(249,113,6)" fg:x="39537" fg:w="100"/><text x="27.5235%" y="623.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,845 samples, 1.27%)</title><rect x="26.0732%" y="645" width="1.2727%" height="15" fill="rgb(238,137,36)" fg:x="37797" fg:w="1845"/><text x="26.3232%" y="655.50"></text></g><g><title>main`egui_extras::table::TableBuilder::header (107 samples, 0.07%)</title><rect x="27.2721%" y="629" width="0.0738%" height="15" fill="rgb(210,102,26)" fg:x="39535" fg:w="107"/><text x="27.5221%" y="639.50"></text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,850 samples, 1.28%)</title><rect x="26.0718%" y="661" width="1.2762%" height="15" fill="rgb(218,30,30)" fg:x="37795" fg:w="1850"/><text x="26.3218%" y="671.50"></text></g><g><title>main`egui::containers::frame::Frame::show_dyn (1,853 samples, 1.28%)</title><rect x="26.0718%" y="677" width="1.2782%" height="15" fill="rgb(214,67,26)" fg:x="37795" fg:w="1853"/><text x="26.3218%" y="687.50"></text></g><g><title>main`egui::containers::panel::CentralPanel::show_dyn (1,856 samples, 1.28%)</title><rect x="26.0711%" y="693" width="1.2803%" height="15" fill="rgb(251,9,53)" fg:x="37794" fg:w="1856"/><text x="26.3211%" y="703.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (28 samples, 0.02%)</title><rect x="27.3638%" y="629" width="0.0193%" height="15" fill="rgb(228,204,25)" fg:x="39668" fg:w="28"/><text x="27.6138%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (25 samples, 0.02%)</title><rect x="27.3845%" y="613" width="0.0172%" height="15" fill="rgb(207,153,8)" fg:x="39698" fg:w="25"/><text x="27.6345%" y="623.50"></text></g><g><title>main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (29 samples, 0.02%)</title><rect x="27.3832%" y="629" width="0.0200%" height="15" fill="rgb(242,9,16)" fg:x="39696" fg:w="29"/><text x="27.6332%" y="639.50"></text></g><g><title>AGXMetalG14X`AGX::ContextCommon&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::newCommand (16 samples, 0.01%)</title><rect x="27.4087%" y="565" width="0.0110%" height="15" fill="rgb(217,211,10)" fg:x="39733" fg:w="16"/><text x="27.6587%" y="575.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::beginComputePass (23 samples, 0.02%)</title><rect x="27.4080%" y="581" width="0.0159%" height="15" fill="rgb(219,228,52)" fg:x="39732" fg:w="23"/><text x="27.6580%" y="591.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::blitCDMBuffer (46 samples, 0.03%)</title><rect x="27.4059%" y="597" width="0.0317%" height="15" fill="rgb(231,92,29)" fg:x="39729" fg:w="46"/><text x="27.6559%" y="607.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (49 samples, 0.03%)</title><rect x="27.4059%" y="613" width="0.0338%" height="15" fill="rgb(232,8,23)" fg:x="39729" fg:w="49"/><text x="27.6559%" y="623.50"></text></g><g><title>main`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (21 samples, 0.01%)</title><rect x="27.4411%" y="613" width="0.0145%" height="15" fill="rgb(216,211,34)" fg:x="39780" fg:w="21"/><text x="27.6911%" y="623.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (21 samples, 0.01%)</title><rect x="27.4411%" y="597" width="0.0145%" height="15" fill="rgb(236,151,0)" fg:x="39780" fg:w="21"/><text x="27.6911%" y="607.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (20 samples, 0.01%)</title><rect x="27.4418%" y="581" width="0.0138%" height="15" fill="rgb(209,168,3)" fg:x="39781" fg:w="20"/><text x="27.6918%" y="591.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext initWithCommandBuffer:descriptor:] (18 samples, 0.01%)</title><rect x="27.4618%" y="549" width="0.0124%" height="15" fill="rgb(208,129,28)" fg:x="39810" fg:w="18"/><text x="27.7118%" y="559.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer blitCommandEncoderCommon:] (23 samples, 0.02%)</title><rect x="27.4604%" y="565" width="0.0159%" height="15" fill="rgb(229,78,22)" fg:x="39808" fg:w="23"/><text x="27.7104%" y="575.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (105 samples, 0.07%)</title><rect x="27.4045%" y="629" width="0.0724%" height="15" fill="rgb(228,187,13)" fg:x="39727" fg:w="105"/><text x="27.6545%" y="639.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_buffer (26 samples, 0.02%)</title><rect x="27.4590%" y="613" width="0.0179%" height="15" fill="rgb(240,119,24)" fg:x="39806" fg:w="26"/><text x="27.7090%" y="623.50"></text></g><g><title>main`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (25 samples, 0.02%)</title><rect x="27.4597%" y="597" width="0.0172%" height="15" fill="rgb(209,194,42)" fg:x="39807" fg:w="25"/><text x="27.7097%" y="607.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (25 samples, 0.02%)</title><rect x="27.4597%" y="581" width="0.0172%" height="15" fill="rgb(247,200,46)" fg:x="39807" fg:w="25"/><text x="27.7097%" y="591.50"></text></g><g><title>IOKit`io_connect_method (99 samples, 0.07%)</title><rect x="27.4846%" y="485" width="0.0683%" height="15" fill="rgb(218,76,16)" fg:x="39843" fg:w="99"/><text x="27.7346%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (97 samples, 0.07%)</title><rect x="27.4859%" y="469" width="0.0669%" height="15" fill="rgb(225,21,48)" fg:x="39845" fg:w="97"/><text x="27.7359%" y="479.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (103 samples, 0.07%)</title><rect x="27.4825%" y="517" width="0.0711%" height="15" fill="rgb(239,223,50)" fg:x="39840" fg:w="103"/><text x="27.7325%" y="527.50"></text></g><g><title>IOKit`IOConnectCallMethod (100 samples, 0.07%)</title><rect x="27.4846%" y="501" width="0.0690%" height="15" fill="rgb(244,45,21)" fg:x="39843" fg:w="100"/><text x="27.7346%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (113 samples, 0.08%)</title><rect x="27.4818%" y="533" width="0.0779%" height="15" fill="rgb(232,33,43)" fg:x="39839" fg:w="113"/><text x="27.7318%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (121 samples, 0.08%)</title><rect x="27.4818%" y="549" width="0.0835%" height="15" fill="rgb(209,8,3)" fg:x="39839" fg:w="121"/><text x="27.7318%" y="559.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (135 samples, 0.09%)</title><rect x="27.4818%" y="565" width="0.0931%" height="15" fill="rgb(214,25,53)" fg:x="39839" fg:w="135"/><text x="27.7318%" y="575.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (141 samples, 0.10%)</title><rect x="27.4818%" y="581" width="0.0973%" height="15" fill="rgb(254,186,54)" fg:x="39839" fg:w="141"/><text x="27.7318%" y="591.50"></text></g><g><title>main`wgpu_core::device::queue::prepare_staging_buffer (164 samples, 0.11%)</title><rect x="27.4770%" y="629" width="0.1131%" height="15" fill="rgb(208,174,49)" fg:x="39832" fg:w="164"/><text x="27.7270%" y="639.50"></text></g><g><title>main`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (163 samples, 0.11%)</title><rect x="27.4777%" y="613" width="0.1124%" height="15" fill="rgb(233,191,51)" fg:x="39833" fg:w="163"/><text x="27.7277%" y="623.50"></text></g><g><title>main`objc::rc::autorelease::autoreleasepool (157 samples, 0.11%)</title><rect x="27.4818%" y="597" width="0.1083%" height="15" fill="rgb(222,134,10)" fg:x="39839" fg:w="157"/><text x="27.7318%" y="607.50"></text></g><g><title>main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (329 samples, 0.23%)</title><rect x="27.3638%" y="645" width="0.2270%" height="15" fill="rgb(230,226,20)" fg:x="39668" fg:w="329"/><text x="27.6138%" y="655.50"></text></g><g><title>main`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (330 samples, 0.23%)</title><rect x="27.3638%" y="677" width="0.2276%" height="15" fill="rgb(251,111,25)" fg:x="39668" fg:w="330"/><text x="27.6138%" y="687.50"></text></g><g><title>main`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (330 samples, 0.23%)</title><rect x="27.3638%" y="661" width="0.2276%" height="15" fill="rgb(224,40,46)" fg:x="39668" fg:w="330"/><text x="27.6138%" y="671.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (8,216 samples, 5.67%)</title><rect x="21.9246%" y="709" width="5.6676%" height="15" fill="rgb(236,108,47)" fg:x="31783" fg:w="8216"/><text x="22.1746%" y="719.50">main`&lt;b..</text></g><g><title>main`wgpu::Queue::write_buffer (331 samples, 0.23%)</title><rect x="27.3638%" y="693" width="0.2283%" height="15" fill="rgb(234,93,0)" fg:x="39668" fg:w="331"/><text x="27.6138%" y="703.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (148 samples, 0.10%)</title><rect x="27.5922%" y="709" width="0.1021%" height="15" fill="rgb(224,213,32)" fg:x="39999" fg:w="148"/><text x="27.8422%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (29 samples, 0.02%)</title><rect x="27.7150%" y="693" width="0.0200%" height="15" fill="rgb(251,11,48)" fg:x="40177" fg:w="29"/><text x="27.9650%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (29 samples, 0.02%)</title><rect x="27.7150%" y="677" width="0.0200%" height="15" fill="rgb(236,173,5)" fg:x="40177" fg:w="29"/><text x="27.9650%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (47 samples, 0.03%)</title><rect x="27.7426%" y="677" width="0.0324%" height="15" fill="rgb(230,95,12)" fg:x="40217" fg:w="47"/><text x="27.9926%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (46 samples, 0.03%)</title><rect x="27.7432%" y="661" width="0.0317%" height="15" fill="rgb(232,209,1)" fg:x="40218" fg:w="46"/><text x="27.9932%" y="671.50"></text></g><g><title>main`event_listener::Inner::lock (57 samples, 0.04%)</title><rect x="27.7398%" y="693" width="0.0393%" height="15" fill="rgb(232,6,1)" fg:x="40213" fg:w="57"/><text x="27.9898%" y="703.50"></text></g><g><title>main`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (111 samples, 0.08%)</title><rect x="27.7039%" y="709" width="0.0766%" height="15" fill="rgb(210,224,50)" fg:x="40161" fg:w="111"/><text x="27.9539%" y="719.50"></text></g><g><title>main`concurrent_queue::bounded::Bounded&lt;T&gt;::push (37 samples, 0.03%)</title><rect x="27.8095%" y="693" width="0.0255%" height="15" fill="rgb(228,127,35)" fg:x="40314" fg:w="37"/><text x="28.0595%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (93 samples, 0.06%)</title><rect x="27.8805%" y="677" width="0.0642%" height="15" fill="rgb(245,102,45)" fg:x="40417" fg:w="93"/><text x="28.1305%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (93 samples, 0.06%)</title><rect x="27.8805%" y="661" width="0.0642%" height="15" fill="rgb(214,1,49)" fg:x="40417" fg:w="93"/><text x="28.1305%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (141 samples, 0.10%)</title><rect x="27.9550%" y="661" width="0.0973%" height="15" fill="rgb(226,163,40)" fg:x="40525" fg:w="141"/><text x="28.2050%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (140 samples, 0.10%)</title><rect x="27.9557%" y="645" width="0.0966%" height="15" fill="rgb(239,212,28)" fg:x="40526" fg:w="140"/><text x="28.2057%" y="655.50"></text></g><g><title>main`event_listener::Inner::lock (154 samples, 0.11%)</title><rect x="27.9509%" y="677" width="0.1062%" height="15" fill="rgb(220,20,13)" fg:x="40519" fg:w="154"/><text x="28.2009%" y="687.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (36 samples, 0.02%)</title><rect x="28.0592%" y="661" width="0.0248%" height="15" fill="rgb(210,164,35)" fg:x="40676" fg:w="36"/><text x="28.3092%" y="671.50"></text></g><g><title>main`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (45 samples, 0.03%)</title><rect x="28.0895%" y="629" width="0.0310%" height="15" fill="rgb(248,109,41)" fg:x="40720" fg:w="45"/><text x="28.3395%" y="639.50"></text></g><g><title>main`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (17 samples, 0.01%)</title><rect x="28.1089%" y="613" width="0.0117%" height="15" fill="rgb(238,23,50)" fg:x="40748" fg:w="17"/><text x="28.3589%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (111 samples, 0.08%)</title><rect x="28.1240%" y="597" width="0.0766%" height="15" fill="rgb(211,48,49)" fg:x="40770" fg:w="111"/><text x="28.3740%" y="607.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (174 samples, 0.12%)</title><rect x="28.0854%" y="645" width="0.1200%" height="15" fill="rgb(223,36,21)" fg:x="40714" fg:w="174"/><text x="28.3354%" y="655.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (121 samples, 0.08%)</title><rect x="28.1220%" y="629" width="0.0835%" height="15" fill="rgb(207,123,46)" fg:x="40767" fg:w="121"/><text x="28.3720%" y="639.50"></text></g><g><title>main`parking::Unparker::unpark (120 samples, 0.08%)</title><rect x="28.1227%" y="613" width="0.0828%" height="15" fill="rgb(240,218,32)" fg:x="40768" fg:w="120"/><text x="28.3727%" y="623.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (179 samples, 0.12%)</title><rect x="28.0840%" y="661" width="0.1235%" height="15" fill="rgb(252,5,43)" fg:x="40712" fg:w="179"/><text x="28.3340%" y="671.50"></text></g><g><title>main`event_listener::Event::notify_additional (534 samples, 0.37%)</title><rect x="27.8405%" y="693" width="0.3684%" height="15" fill="rgb(252,84,19)" fg:x="40359" fg:w="534"/><text x="28.0905%" y="703.50"></text></g><g><title>main`event_listener::List::notify_additional (220 samples, 0.15%)</title><rect x="28.0571%" y="677" width="0.1518%" height="15" fill="rgb(243,152,39)" fg:x="40673" fg:w="220"/><text x="28.3071%" y="687.50"></text></g><g><title>main`async_channel::Sender&lt;T&gt;::try_send (618 samples, 0.43%)</title><rect x="27.7846%" y="709" width="0.4263%" height="15" fill="rgb(234,160,15)" fg:x="40278" fg:w="618"/><text x="28.0346%" y="719.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::finish_system_and_handle_dependents (88 samples, 0.06%)</title><rect x="28.2192%" y="709" width="0.0607%" height="15" fill="rgb(237,34,20)" fg:x="40908" fg:w="88"/><text x="28.4692%" y="719.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::signal_dependents (50 samples, 0.03%)</title><rect x="28.2454%" y="693" width="0.0345%" height="15" fill="rgb(229,97,13)" fg:x="40946" fg:w="50"/><text x="28.4954%" y="703.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::rebuild_active_access (62 samples, 0.04%)</title><rect x="28.2799%" y="709" width="0.0428%" height="15" fill="rgb(234,71,50)" fg:x="40996" fg:w="62"/><text x="28.5299%" y="719.50"></text></g><g><title>main`fixedbitset::FixedBitSet::union_with (42 samples, 0.03%)</title><rect x="28.2937%" y="693" width="0.0290%" height="15" fill="rgb(253,155,4)" fg:x="41016" fg:w="42"/><text x="28.5437%" y="703.50"></text></g><g><title>main`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (61 samples, 0.04%)</title><rect x="28.4662%" y="693" width="0.0421%" height="15" fill="rgb(222,185,37)" fg:x="41266" fg:w="61"/><text x="28.7162%" y="703.50"></text></g><g><title>main`bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (24 samples, 0.02%)</title><rect x="28.5138%" y="693" width="0.0166%" height="15" fill="rgb(251,177,13)" fg:x="41335" fg:w="24"/><text x="28.7638%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.02%)</title><rect x="28.5828%" y="661" width="0.0221%" height="15" fill="rgb(250,179,40)" fg:x="41435" fg:w="32"/><text x="28.8328%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (217 samples, 0.15%)</title><rect x="28.6083%" y="645" width="0.1497%" height="15" fill="rgb(242,44,2)" fg:x="41472" fg:w="217"/><text x="28.8583%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (224 samples, 0.15%)</title><rect x="28.6048%" y="661" width="0.1545%" height="15" fill="rgb(216,177,13)" fg:x="41467" fg:w="224"/><text x="28.8548%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (541 samples, 0.37%)</title><rect x="28.7600%" y="661" width="0.3732%" height="15" fill="rgb(216,106,43)" fg:x="41692" fg:w="541"/><text x="29.0100%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (535 samples, 0.37%)</title><rect x="28.7642%" y="645" width="0.3691%" height="15" fill="rgb(216,183,2)" fg:x="41698" fg:w="535"/><text x="29.0142%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (29 samples, 0.02%)</title><rect x="29.1332%" y="661" width="0.0200%" height="15" fill="rgb(249,75,3)" fg:x="42233" fg:w="29"/><text x="29.3832%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (23 samples, 0.02%)</title><rect x="29.1532%" y="661" width="0.0159%" height="15" fill="rgb(219,67,39)" fg:x="42262" fg:w="23"/><text x="29.4032%" y="671.50"></text></g><g><title>main`async_executor::LocalExecutor::schedule (22 samples, 0.02%)</title><rect x="29.1801%" y="661" width="0.0152%" height="15" fill="rgb(253,228,2)" fg:x="42301" fg:w="22"/><text x="29.4301%" y="671.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (177 samples, 0.12%)</title><rect x="29.2057%" y="661" width="0.1221%" height="15" fill="rgb(235,138,27)" fg:x="42338" fg:w="177"/><text x="29.4557%" y="671.50"></text></g><g><title>main`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (93 samples, 0.06%)</title><rect x="29.3285%" y="645" width="0.0642%" height="15" fill="rgb(236,97,51)" fg:x="42516" fg:w="93"/><text x="29.5785%" y="655.50"></text></g><g><title>main`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (33 samples, 0.02%)</title><rect x="29.3698%" y="629" width="0.0228%" height="15" fill="rgb(240,80,30)" fg:x="42576" fg:w="33"/><text x="29.6198%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (74 samples, 0.05%)</title><rect x="29.3940%" y="613" width="0.0510%" height="15" fill="rgb(230,178,19)" fg:x="42611" fg:w="74"/><text x="29.6440%" y="623.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (176 samples, 0.12%)</title><rect x="29.3278%" y="661" width="0.1214%" height="15" fill="rgb(210,190,27)" fg:x="42515" fg:w="176"/><text x="29.5778%" y="671.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (82 samples, 0.06%)</title><rect x="29.3926%" y="645" width="0.0566%" height="15" fill="rgb(222,107,31)" fg:x="42609" fg:w="82"/><text x="29.6426%" y="655.50"></text></g><g><title>main`parking::Unparker::unpark (82 samples, 0.06%)</title><rect x="29.3926%" y="629" width="0.0566%" height="15" fill="rgb(216,127,34)" fg:x="42609" fg:w="82"/><text x="29.6426%" y="639.50"></text></g><g><title>main`async_task::runnable::spawn_unchecked (54 samples, 0.04%)</title><rect x="29.4499%" y="661" width="0.0373%" height="15" fill="rgb(234,116,52)" fg:x="42692" fg:w="54"/><text x="29.6999%" y="671.50"></text></g><g><title>main`async_executor::Executor::spawn (1,392 samples, 0.96%)</title><rect x="28.5393%" y="677" width="0.9602%" height="15" fill="rgb(222,124,15)" fg:x="41372" fg:w="1392"/><text x="28.7893%" y="687.50"></text></g><g><title>main`slab::Slab&lt;T&gt;::insert_at (18 samples, 0.01%)</title><rect x="29.4871%" y="661" width="0.0124%" height="15" fill="rgb(231,179,28)" fg:x="42746" fg:w="18"/><text x="29.7371%" y="671.50"></text></g><g><title>main`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (25 samples, 0.02%)</title><rect x="29.5154%" y="677" width="0.0172%" height="15" fill="rgb(226,93,45)" fg:x="42787" fg:w="25"/><text x="29.7654%" y="687.50"></text></g><g><title>main`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (1,454 samples, 1.00%)</title><rect x="28.5303%" y="693" width="1.0030%" height="15" fill="rgb(215,8,51)" fg:x="41359" fg:w="1454"/><text x="28.7803%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (41 samples, 0.03%)</title><rect x="29.5368%" y="661" width="0.0283%" height="15" fill="rgb(223,106,5)" fg:x="42818" fg:w="41"/><text x="29.7868%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (41 samples, 0.03%)</title><rect x="29.5368%" y="645" width="0.0283%" height="15" fill="rgb(250,191,5)" fg:x="42818" fg:w="41"/><text x="29.7868%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (148 samples, 0.10%)</title><rect x="29.5713%" y="613" width="0.1021%" height="15" fill="rgb(242,132,44)" fg:x="42868" fg:w="148"/><text x="29.8213%" y="623.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (156 samples, 0.11%)</title><rect x="29.5685%" y="661" width="0.1076%" height="15" fill="rgb(251,152,29)" fg:x="42864" fg:w="156"/><text x="29.8185%" y="671.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (152 samples, 0.10%)</title><rect x="29.5713%" y="645" width="0.1049%" height="15" fill="rgb(218,179,5)" fg:x="42868" fg:w="152"/><text x="29.8213%" y="655.50"></text></g><g><title>main`parking::Unparker::unpark (152 samples, 0.10%)</title><rect x="29.5713%" y="629" width="0.1049%" height="15" fill="rgb(227,67,19)" fg:x="42868" fg:w="152"/><text x="29.8213%" y="639.50"></text></g><g><title>main`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_external (211 samples, 0.15%)</title><rect x="29.5333%" y="693" width="0.1456%" height="15" fill="rgb(233,119,31)" fg:x="42813" fg:w="211"/><text x="29.7833%" y="703.50"></text></g><g><title>main`async_executor::Executor::spawn (210 samples, 0.14%)</title><rect x="29.5340%" y="677" width="0.1449%" height="15" fill="rgb(241,120,22)" fg:x="42814" fg:w="210"/><text x="29.7840%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (33 samples, 0.02%)</title><rect x="29.6858%" y="661" width="0.0228%" height="15" fill="rgb(224,102,30)" fg:x="43034" fg:w="33"/><text x="29.9358%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (33 samples, 0.02%)</title><rect x="29.6858%" y="645" width="0.0228%" height="15" fill="rgb(210,164,37)" fg:x="43034" fg:w="33"/><text x="29.9358%" y="655.50"></text></g><g><title>main`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (25 samples, 0.02%)</title><rect x="29.7210%" y="645" width="0.0172%" height="15" fill="rgb(226,191,16)" fg:x="43085" fg:w="25"/><text x="29.9710%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (369 samples, 0.25%)</title><rect x="29.7437%" y="613" width="0.2545%" height="15" fill="rgb(214,40,45)" fg:x="43118" fg:w="369"/><text x="29.9937%" y="623.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (419 samples, 0.29%)</title><rect x="29.7203%" y="661" width="0.2890%" height="15" fill="rgb(244,29,26)" fg:x="43084" fg:w="419"/><text x="29.9703%" y="671.50"></text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (392 samples, 0.27%)</title><rect x="29.7389%" y="645" width="0.2704%" height="15" fill="rgb(216,16,5)" fg:x="43111" fg:w="392"/><text x="29.9889%" y="655.50"></text></g><g><title>main`parking::Unparker::unpark (390 samples, 0.27%)</title><rect x="29.7403%" y="629" width="0.2690%" height="15" fill="rgb(249,76,35)" fg:x="43113" fg:w="390"/><text x="29.9903%" y="639.50"></text></g><g><title>main`async_executor::Executor::spawn (492 samples, 0.34%)</title><rect x="29.6803%" y="677" width="0.3394%" height="15" fill="rgb(207,11,44)" fg:x="43026" fg:w="492"/><text x="29.9303%" y="687.50"></text></g><g><title>main`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_scope (502 samples, 0.35%)</title><rect x="29.6789%" y="693" width="0.3463%" height="15" fill="rgb(228,190,49)" fg:x="43024" fg:w="502"/><text x="29.9289%" y="703.50"></text></g><g><title>main`fixedbitset::FixedBitSet::is_disjoint (51 samples, 0.04%)</title><rect x="30.0259%" y="693" width="0.0352%" height="15" fill="rgb(214,173,12)" fg:x="43527" fg:w="51"/><text x="30.2759%" y="703.50"></text></g><g><title>main`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (2,622 samples, 1.81%)</title><rect x="28.3248%" y="709" width="1.8087%" height="15" fill="rgb(218,26,35)" fg:x="41061" fg:w="2622"/><text x="28.5748%" y="719.50">m..</text></g><g><title>main`fixedbitset::FixedBitSet::union_with (105 samples, 0.07%)</title><rect x="30.0610%" y="693" width="0.0724%" height="15" fill="rgb(220,200,19)" fg:x="43578" fg:w="105"/><text x="30.3110%" y="703.50"></text></g><g><title>main`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (32 samples, 0.02%)</title><rect x="30.1535%" y="709" width="0.0221%" height="15" fill="rgb(239,95,49)" fg:x="43712" fg:w="32"/><text x="30.4035%" y="719.50"></text></g><g><title>main`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="30.1769%" y="709" width="0.0159%" height="15" fill="rgb(235,85,53)" fg:x="43746" fg:w="23"/><text x="30.4269%" y="719.50"></text></g><g><title>main`fixedbitset::FixedBitSet::difference (17 samples, 0.01%)</title><rect x="30.1997%" y="709" width="0.0117%" height="15" fill="rgb(233,133,31)" fg:x="43779" fg:w="17"/><text x="30.4497%" y="719.50"></text></g><g><title>main`fixedbitset::FixedBitSet::is_disjoint (40 samples, 0.03%)</title><rect x="30.2114%" y="709" width="0.0276%" height="15" fill="rgb(218,25,20)" fg:x="43796" fg:w="40"/><text x="30.4614%" y="719.50"></text></g><g><title>main`fixedbitset::FixedBitSet::union_with (21 samples, 0.01%)</title><rect x="30.2390%" y="709" width="0.0145%" height="15" fill="rgb(252,210,38)" fg:x="43836" fg:w="21"/><text x="30.4890%" y="719.50"></text></g><g><title>main`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12,419 samples, 8.57%)</title><rect x="21.6873%" y="725" width="8.5669%" height="15" fill="rgb(242,134,21)" fg:x="31439" fg:w="12419"/><text x="21.9373%" y="735.50">main`&lt;core::..</text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (16 samples, 0.01%)</title><rect x="30.2570%" y="725" width="0.0110%" height="15" fill="rgb(213,28,48)" fg:x="43862" fg:w="16"/><text x="30.5070%" y="735.50"></text></g><g><title>main`core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}&gt;&gt;&gt;::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="30.2721%" y="725" width="0.0103%" height="15" fill="rgb(250,196,2)" fg:x="43884" fg:w="15"/><text x="30.5221%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (209 samples, 0.14%)</title><rect x="30.2873%" y="693" width="0.1442%" height="15" fill="rgb(227,5,17)" fg:x="43906" fg:w="209"/><text x="30.5373%" y="703.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (15,304 samples, 10.56%)</title><rect x="19.8772%" y="741" width="10.5570%" height="15" fill="rgb(221,226,24)" fg:x="28815" fg:w="15304"/><text x="20.1272%" y="751.50">main`async_task..</text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (215 samples, 0.15%)</title><rect x="30.2859%" y="725" width="0.1483%" height="15" fill="rgb(211,5,48)" fg:x="43904" fg:w="215"/><text x="30.5359%" y="735.50"></text></g><g><title>main`parking::Unparker::unpark (214 samples, 0.15%)</title><rect x="30.2866%" y="709" width="0.1476%" height="15" fill="rgb(219,150,6)" fg:x="43905" fg:w="214"/><text x="30.5366%" y="719.50"></text></g><g><title>main`concurrent_queue::ConcurrentQueue&lt;T&gt;::len (114 samples, 0.08%)</title><rect x="30.4342%" y="741" width="0.0786%" height="15" fill="rgb(251,46,16)" fg:x="44119" fg:w="114"/><text x="30.6842%" y="751.50"></text></g><g><title>main`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (141 samples, 0.10%)</title><rect x="30.5129%" y="741" width="0.0973%" height="15" fill="rgb(220,204,40)" fg:x="44233" fg:w="141"/><text x="30.7629%" y="751.50"></text></g><g><title>main`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (105 samples, 0.07%)</title><rect x="30.6108%" y="741" width="0.0724%" height="15" fill="rgb(211,85,2)" fg:x="44375" fg:w="105"/><text x="30.8608%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (947 samples, 0.65%)</title><rect x="30.7102%" y="709" width="0.6533%" height="15" fill="rgb(229,17,7)" fg:x="44519" fg:w="947"/><text x="30.9602%" y="719.50"></text></g><g><title>main`async_executor::Executor::run::_{{closure}} (18,225 samples, 12.57%)</title><rect x="18.8142%" y="757" width="12.5720%" height="15" fill="rgb(239,72,28)" fg:x="27274" fg:w="18225"/><text x="19.0642%" y="767.50">main`async_executor..</text></g><g><title>main`waker_fn::Helper&lt;F&gt;::wake (995 samples, 0.69%)</title><rect x="30.6998%" y="741" width="0.6864%" height="15" fill="rgb(230,47,54)" fg:x="44504" fg:w="995"/><text x="30.9498%" y="751.50"></text></g><g><title>main`parking::Unparker::unpark (991 samples, 0.68%)</title><rect x="30.7026%" y="725" width="0.6836%" height="15" fill="rgb(214,50,8)" fg:x="44508" fg:w="991"/><text x="30.9526%" y="735.50"></text></g><g><title>main`async_executor::steal (43 samples, 0.03%)</title><rect x="31.4000%" y="757" width="0.0297%" height="15" fill="rgb(216,198,43)" fg:x="45519" fg:w="43"/><text x="31.6500%" y="767.50"></text></g><g><title>main`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (41 samples, 0.03%)</title><rect x="31.4297%" y="757" width="0.0283%" height="15" fill="rgb(234,20,35)" fg:x="45562" fg:w="41"/><text x="31.6797%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2,642 samples, 1.82%)</title><rect x="31.5007%" y="741" width="1.8225%" height="15" fill="rgb(254,45,19)" fg:x="45665" fg:w="2642"/><text x="31.7507%" y="751.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (51 samples, 0.04%)</title><rect x="33.3246%" y="741" width="0.0352%" height="15" fill="rgb(219,14,44)" fg:x="48309" fg:w="51"/><text x="33.5746%" y="751.50"></text></g><g><title>main`futures_lite::future::block_on (21,205 samples, 14.63%)</title><rect x="18.7376%" y="773" width="14.6277%" height="15" fill="rgb(217,220,26)" fg:x="27163" fg:w="21205"/><text x="18.9876%" y="783.50">main`futures_lite::fut..</text></g><g><title>main`parking::Inner::park (2,755 samples, 1.90%)</title><rect x="31.4648%" y="757" width="1.9005%" height="15" fill="rgb(213,158,28)" fg:x="45613" fg:w="2755"/><text x="31.7148%" y="767.50">m..</text></g><g><title>libsystem_c.dylib`nanosleep (24 samples, 0.02%)</title><rect x="33.3681%" y="741" width="0.0166%" height="15" fill="rgb(252,51,52)" fg:x="48372" fg:w="24"/><text x="33.6181%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (22 samples, 0.02%)</title><rect x="33.3694%" y="725" width="0.0152%" height="15" fill="rgb(246,89,16)" fg:x="48374" fg:w="22"/><text x="33.6194%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (21 samples, 0.01%)</title><rect x="33.3701%" y="709" width="0.0145%" height="15" fill="rgb(216,158,49)" fg:x="48375" fg:w="21"/><text x="33.6201%" y="719.50"></text></g><g><title>main`gilrs::ff::server::run (41 samples, 0.03%)</title><rect x="33.3653%" y="773" width="0.0283%" height="15" fill="rgb(236,107,19)" fg:x="48368" fg:w="41"/><text x="33.6153%" y="783.50"></text></g><g><title>main`std::thread::sleep (39 samples, 0.03%)</title><rect x="33.3667%" y="757" width="0.0269%" height="15" fill="rgb(228,185,30)" fg:x="48370" fg:w="39"/><text x="33.6167%" y="767.50"></text></g><g><title>main`&lt;f32 as ndarray_stats::maybe_nan::MaybeNan&gt;::try_as_not_nan (79 samples, 0.05%)</title><rect x="33.5826%" y="725" width="0.0545%" height="15" fill="rgb(246,134,8)" fg:x="48683" fg:w="79"/><text x="33.8326%" y="735.50"></text></g><g><title>main`rusty_cde::core::algorithm::metrics::Metrics::calculate_final (607 samples, 0.42%)</title><rect x="33.4025%" y="757" width="0.4187%" height="15" fill="rgb(214,143,50)" fg:x="48422" fg:w="607"/><text x="33.6525%" y="767.50"></text></g><g><title>main`rusty_cde::core::algorithm::metrics::predict_voxeltype (607 samples, 0.42%)</title><rect x="33.4025%" y="741" width="0.4187%" height="15" fill="rgb(228,75,8)" fg:x="48422" fg:w="607"/><text x="33.6525%" y="751.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,D&gt; as ndarray_stats::quantile::QuantileExt&lt;A,S,D&gt;&gt;::max_skipnan (267 samples, 0.18%)</title><rect x="33.6371%" y="725" width="0.1842%" height="15" fill="rgb(207,175,4)" fg:x="48762" fg:w="267"/><text x="33.8871%" y="735.50"></text></g><g><title>main`ndarray::dimension::stride_offset_checked (18,154 samples, 12.52%)</title><rect x="33.8364%" y="741" width="12.5230%" height="15" fill="rgb(205,108,24)" fg:x="49051" fg:w="18154"/><text x="34.0864%" y="751.50">main`ndarray::dimen..</text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_delays_delta (1,711 samples, 1.18%)</title><rect x="46.3671%" y="741" width="1.1803%" height="15" fill="rgb(244,120,49)" fg:x="67216" fg:w="1711"/><text x="46.6171%" y="751.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (435 samples, 0.30%)</title><rect x="47.5501%" y="725" width="0.3001%" height="15" fill="rgb(223,47,38)" fg:x="68931" fg:w="435"/><text x="47.8001%" y="735.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_gains_delta (1,094 samples, 0.75%)</title><rect x="47.5473%" y="741" width="0.7547%" height="15" fill="rgb(229,179,11)" fg:x="68927" fg:w="1094"/><text x="47.7973%" y="751.50"></text></g><g><title>main`ndarray::impl_ops::arithmetic_ops::_&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (655 samples, 0.45%)</title><rect x="47.8502%" y="725" width="0.4518%" height="15" fill="rgb(231,122,1)" fg:x="69366" fg:w="655"/><text x="48.1002%" y="735.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2,PLast),D&gt;::collect_with_partial (649 samples, 0.45%)</title><rect x="47.8543%" y="709" width="0.4477%" height="15" fill="rgb(245,119,9)" fg:x="69372" fg:w="649"/><text x="48.1043%" y="719.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (67 samples, 0.05%)</title><rect x="48.3206%" y="565" width="0.0462%" height="15" fill="rgb(241,163,25)" fg:x="70048" fg:w="67"/><text x="48.5706%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (66 samples, 0.05%)</title><rect x="48.3213%" y="549" width="0.0455%" height="15" fill="rgb(217,214,3)" fg:x="70049" fg:w="66"/><text x="48.5713%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (490 samples, 0.34%)</title><rect x="48.3668%" y="565" width="0.3380%" height="15" fill="rgb(240,86,28)" fg:x="70115" fg:w="490"/><text x="48.6168%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_barrier_wait_end (575 samples, 0.40%)</title><rect x="48.3144%" y="581" width="0.3966%" height="15" fill="rgb(215,47,9)" fg:x="70039" fg:w="575"/><text x="48.5644%" y="591.50"></text></g><g><title>libgomp.1.dylib`gomp_team_start (583 samples, 0.40%)</title><rect x="48.3103%" y="597" width="0.4022%" height="15" fill="rgb(252,25,45)" fg:x="70033" fg:w="583"/><text x="48.5603%" y="607.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_t_kernel_F320 (27 samples, 0.02%)</title><rect x="48.7138%" y="565" width="0.0186%" height="15" fill="rgb(251,164,9)" fg:x="70618" fg:w="27"/><text x="48.9638%" y="575.50"></text></g><g><title>libgomp.1.dylib`GOMP_parallel (620 samples, 0.43%)</title><rect x="48.3055%" y="613" width="0.4277%" height="15" fill="rgb(233,194,0)" fg:x="70026" fg:w="620"/><text x="48.5555%" y="623.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas._omp_fn.1 (30 samples, 0.02%)</title><rect x="48.7124%" y="597" width="0.0207%" height="15" fill="rgb(249,111,24)" fg:x="70616" fg:w="30"/><text x="48.9624%" y="607.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_threads (28 samples, 0.02%)</title><rect x="48.7138%" y="581" width="0.0193%" height="15" fill="rgb(250,223,3)" fg:x="70618" fg:w="28"/><text x="48.9638%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (68 samples, 0.05%)</title><rect x="48.7407%" y="565" width="0.0469%" height="15" fill="rgb(236,178,37)" fg:x="70657" fg:w="68"/><text x="48.9907%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (70 samples, 0.05%)</title><rect x="48.7407%" y="581" width="0.0483%" height="15" fill="rgb(241,158,50)" fg:x="70657" fg:w="70"/><text x="48.9907%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (454 samples, 0.31%)</title><rect x="48.7890%" y="581" width="0.3132%" height="15" fill="rgb(213,121,41)" fg:x="70727" fg:w="454"/><text x="49.0390%" y="591.50"></text></g><g><title>libgomp.1.dylib`gomp_team_barrier_wait_end (542 samples, 0.37%)</title><rect x="48.7338%" y="597" width="0.3739%" height="15" fill="rgb(240,92,3)" fg:x="70647" fg:w="542"/><text x="48.9838%" y="607.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (1,168 samples, 0.81%)</title><rect x="48.3034%" y="725" width="0.8057%" height="15" fill="rgb(205,123,3)" fg:x="70023" fg:w="1168"/><text x="48.5534%" y="735.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (1,168 samples, 0.81%)</title><rect x="48.3034%" y="709" width="0.8057%" height="15" fill="rgb(205,97,47)" fg:x="70023" fg:w="1168"/><text x="48.5534%" y="719.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (1,168 samples, 0.81%)</title><rect x="48.3034%" y="693" width="0.8057%" height="15" fill="rgb(247,152,14)" fg:x="70023" fg:w="1168"/><text x="48.5534%" y="703.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::general_mat_vec_mul_impl (1,168 samples, 0.81%)</title><rect x="48.3034%" y="677" width="0.8057%" height="15" fill="rgb(248,195,53)" fg:x="70023" fg:w="1168"/><text x="48.5534%" y="687.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`cblas_sgemv (1,168 samples, 0.81%)</title><rect x="48.3034%" y="661" width="0.8057%" height="15" fill="rgb(226,201,16)" fg:x="70023" fg:w="1168"/><text x="48.5534%" y="671.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`sgemv_thread_t (1,165 samples, 0.80%)</title><rect x="48.3055%" y="645" width="0.8036%" height="15" fill="rgb(205,98,0)" fg:x="70026" fg:w="1165"/><text x="48.5555%" y="655.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas (1,165 samples, 0.80%)</title><rect x="48.3055%" y="629" width="0.8036%" height="15" fill="rgb(214,191,48)" fg:x="70026" fg:w="1165"/><text x="48.5555%" y="639.50"></text></g><g><title>libgomp.1.dylib`gomp_team_end (545 samples, 0.38%)</title><rect x="48.7331%" y="613" width="0.3760%" height="15" fill="rgb(237,112,39)" fg:x="70646" fg:w="545"/><text x="48.9831%" y="623.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_post_update_residuals (1,175 samples, 0.81%)</title><rect x="48.3020%" y="741" width="0.8105%" height="15" fill="rgb(247,203,27)" fg:x="70021" fg:w="1175"/><text x="48.5520%" y="751.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_residuals (22 samples, 0.02%)</title><rect x="49.1125%" y="741" width="0.0152%" height="15" fill="rgb(235,124,28)" fg:x="71196" fg:w="22"/><text x="49.3625%" y="751.50"></text></g><g><title>main`ndarray::impl_ops::arithmetic_ops::_&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (15 samples, 0.01%)</title><rect x="49.1174%" y="725" width="0.0103%" height="15" fill="rgb(208,207,46)" fg:x="71203" fg:w="15"/><text x="49.3674%" y="735.50"></text></g><g><title>main`ndarray::zip::Zip&lt;(P1,P2,PLast),D&gt;::collect_with_partial (15 samples, 0.01%)</title><rect x="49.1174%" y="709" width="0.0103%" height="15" fill="rgb(234,176,4)" fg:x="71203" fg:w="15"/><text x="49.3674%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (81 samples, 0.06%)</title><rect x="58.2272%" y="549" width="0.0559%" height="15" fill="rgb(230,133,28)" fg:x="84409" fg:w="81"/><text x="58.4772%" y="559.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (84 samples, 0.06%)</title><rect x="58.2272%" y="565" width="0.0579%" height="15" fill="rgb(211,137,40)" fg:x="84409" fg:w="84"/><text x="58.4772%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (465 samples, 0.32%)</title><rect x="58.2851%" y="565" width="0.3208%" height="15" fill="rgb(254,35,13)" fg:x="84493" fg:w="465"/><text x="58.5351%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_barrier_wait_end (569 samples, 0.39%)</title><rect x="58.2182%" y="581" width="0.3925%" height="15" fill="rgb(225,49,51)" fg:x="84396" fg:w="569"/><text x="58.4682%" y="591.50"></text></g><g><title>libgomp.1.dylib`gomp_team_start (581 samples, 0.40%)</title><rect x="58.2141%" y="597" width="0.4008%" height="15" fill="rgb(251,10,15)" fg:x="84390" fg:w="581"/><text x="58.4641%" y="607.50"></text></g><g><title>libgomp.1.dylib`GOMP_parallel (615 samples, 0.42%)</title><rect x="58.2113%" y="613" width="0.4242%" height="15" fill="rgb(228,207,15)" fg:x="84386" fg:w="615"/><text x="58.4613%" y="623.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas._omp_fn.1 (28 samples, 0.02%)</title><rect x="58.6162%" y="597" width="0.0193%" height="15" fill="rgb(241,99,19)" fg:x="84973" fg:w="28"/><text x="58.8662%" y="607.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_threads (27 samples, 0.02%)</title><rect x="58.6169%" y="581" width="0.0186%" height="15" fill="rgb(207,104,49)" fg:x="84974" fg:w="27"/><text x="58.8669%" y="591.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_t_kernel_F320 (27 samples, 0.02%)</title><rect x="58.6169%" y="565" width="0.0186%" height="15" fill="rgb(234,99,18)" fg:x="84974" fg:w="27"/><text x="58.8669%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (60 samples, 0.04%)</title><rect x="58.6445%" y="565" width="0.0414%" height="15" fill="rgb(213,191,49)" fg:x="85014" fg:w="60"/><text x="58.8945%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (61 samples, 0.04%)</title><rect x="58.6445%" y="581" width="0.0421%" height="15" fill="rgb(210,226,19)" fg:x="85014" fg:w="61"/><text x="58.8945%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (533 samples, 0.37%)</title><rect x="58.6866%" y="581" width="0.3677%" height="15" fill="rgb(229,97,18)" fg:x="85075" fg:w="533"/><text x="58.9366%" y="591.50"></text></g><g><title>libgomp.1.dylib`gomp_team_barrier_wait_end (617 samples, 0.43%)</title><rect x="58.6362%" y="597" width="0.4256%" height="15" fill="rgb(211,167,15)" fg:x="85002" fg:w="617"/><text x="58.8862%" y="607.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_system_prediction (14,402 samples, 9.93%)</title><rect x="49.1277%" y="741" width="9.9348%" height="15" fill="rgb(210,169,34)" fg:x="71218" fg:w="14402"/><text x="49.3777%" y="751.50">main`rusty_cde..</text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (1,240 samples, 0.86%)</title><rect x="58.2072%" y="725" width="0.8554%" height="15" fill="rgb(241,121,31)" fg:x="84380" fg:w="1240"/><text x="58.4572%" y="735.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (1,240 samples, 0.86%)</title><rect x="58.2072%" y="709" width="0.8554%" height="15" fill="rgb(232,40,11)" fg:x="84380" fg:w="1240"/><text x="58.4572%" y="719.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (1,240 samples, 0.86%)</title><rect x="58.2072%" y="693" width="0.8554%" height="15" fill="rgb(205,86,26)" fg:x="84380" fg:w="1240"/><text x="58.4572%" y="703.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::general_mat_vec_mul_impl (1,238 samples, 0.85%)</title><rect x="58.2085%" y="677" width="0.8540%" height="15" fill="rgb(231,126,28)" fg:x="84382" fg:w="1238"/><text x="58.4585%" y="687.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`cblas_sgemv (1,238 samples, 0.85%)</title><rect x="58.2085%" y="661" width="0.8540%" height="15" fill="rgb(219,221,18)" fg:x="84382" fg:w="1238"/><text x="58.4585%" y="671.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`sgemv_thread_t (1,234 samples, 0.85%)</title><rect x="58.2113%" y="645" width="0.8512%" height="15" fill="rgb(211,40,0)" fg:x="84386" fg:w="1234"/><text x="58.4613%" y="655.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas (1,234 samples, 0.85%)</title><rect x="58.2113%" y="629" width="0.8512%" height="15" fill="rgb(239,85,43)" fg:x="84386" fg:w="1234"/><text x="58.4613%" y="639.50"></text></g><g><title>libgomp.1.dylib`gomp_team_end (619 samples, 0.43%)</title><rect x="58.6355%" y="613" width="0.4270%" height="15" fill="rgb(231,55,21)" fg:x="85001" fg:w="619"/><text x="58.8855%" y="623.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lscal_kernel_Z1 (22 samples, 0.02%)</title><rect x="59.0743%" y="661" width="0.0152%" height="15" fill="rgb(225,184,43)" fg:x="85637" fg:w="22"/><text x="59.3243%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (75 samples, 0.05%)</title><rect x="59.1032%" y="549" width="0.0517%" height="15" fill="rgb(251,158,41)" fg:x="85679" fg:w="75"/><text x="59.3532%" y="559.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (77 samples, 0.05%)</title><rect x="59.1032%" y="565" width="0.0531%" height="15" fill="rgb(234,159,37)" fg:x="85679" fg:w="77"/><text x="59.3532%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (419 samples, 0.29%)</title><rect x="59.1563%" y="565" width="0.2890%" height="15" fill="rgb(216,204,22)" fg:x="85756" fg:w="419"/><text x="59.4063%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_team_start (509 samples, 0.35%)</title><rect x="59.0963%" y="597" width="0.3511%" height="15" fill="rgb(214,17,3)" fg:x="85669" fg:w="509"/><text x="59.3463%" y="607.50"></text></g><g><title>libgomp.1.dylib`gomp_barrier_wait_end (507 samples, 0.35%)</title><rect x="59.0977%" y="581" width="0.3497%" height="15" fill="rgb(212,111,17)" fg:x="85671" fg:w="507"/><text x="59.3477%" y="591.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_t_kernel_F320 (20 samples, 0.01%)</title><rect x="59.4502%" y="565" width="0.0138%" height="15" fill="rgb(221,157,24)" fg:x="86182" fg:w="20"/><text x="59.7002%" y="575.50"></text></g><g><title>libgomp.1.dylib`GOMP_parallel (543 samples, 0.37%)</title><rect x="59.0922%" y="613" width="0.3746%" height="15" fill="rgb(252,16,13)" fg:x="85663" fg:w="543"/><text x="59.3422%" y="623.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas._omp_fn.1 (27 samples, 0.02%)</title><rect x="59.4481%" y="597" width="0.0186%" height="15" fill="rgb(221,62,2)" fg:x="86179" fg:w="27"/><text x="59.6981%" y="607.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_threads (26 samples, 0.02%)</title><rect x="59.4488%" y="581" width="0.0179%" height="15" fill="rgb(247,87,22)" fg:x="86180" fg:w="26"/><text x="59.6988%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (69 samples, 0.05%)</title><rect x="59.4764%" y="565" width="0.0476%" height="15" fill="rgb(215,73,9)" fg:x="86220" fg:w="69"/><text x="59.7264%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (70 samples, 0.05%)</title><rect x="59.4764%" y="581" width="0.0483%" height="15" fill="rgb(207,175,33)" fg:x="86220" fg:w="70"/><text x="59.7264%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (456 samples, 0.31%)</title><rect x="59.5247%" y="581" width="0.3146%" height="15" fill="rgb(243,129,54)" fg:x="86290" fg:w="456"/><text x="59.7747%" y="591.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (1,116 samples, 0.77%)</title><rect x="59.0736%" y="725" width="0.7698%" height="15" fill="rgb(227,119,45)" fg:x="85636" fg:w="1116"/><text x="59.3236%" y="735.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (1,116 samples, 0.77%)</title><rect x="59.0736%" y="709" width="0.7698%" height="15" fill="rgb(205,109,36)" fg:x="85636" fg:w="1116"/><text x="59.3236%" y="719.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (1,116 samples, 0.77%)</title><rect x="59.0736%" y="693" width="0.7698%" height="15" fill="rgb(205,6,39)" fg:x="85636" fg:w="1116"/><text x="59.3236%" y="703.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::general_mat_vec_mul_impl (1,115 samples, 0.77%)</title><rect x="59.0743%" y="677" width="0.7692%" height="15" fill="rgb(221,32,16)" fg:x="85637" fg:w="1115"/><text x="59.3243%" y="687.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`cblas_sgemv (1,093 samples, 0.75%)</title><rect x="59.0894%" y="661" width="0.7540%" height="15" fill="rgb(228,144,50)" fg:x="85659" fg:w="1093"/><text x="59.3394%" y="671.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`sgemv_thread_t (1,090 samples, 0.75%)</title><rect x="59.0915%" y="645" width="0.7519%" height="15" fill="rgb(229,201,53)" fg:x="85662" fg:w="1090"/><text x="59.3415%" y="655.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas (1,089 samples, 0.75%)</title><rect x="59.0922%" y="629" width="0.7512%" height="15" fill="rgb(249,153,27)" fg:x="85663" fg:w="1089"/><text x="59.3422%" y="639.50"></text></g><g><title>libgomp.1.dylib`gomp_team_end (546 samples, 0.38%)</title><rect x="59.4668%" y="613" width="0.3766%" height="15" fill="rgb(227,106,25)" fg:x="86206" fg:w="546"/><text x="59.7168%" y="623.50"></text></g><g><title>libgomp.1.dylib`gomp_team_barrier_wait_end (543 samples, 0.37%)</title><rect x="59.4688%" y="597" width="0.3746%" height="15" fill="rgb(230,65,29)" fg:x="86209" fg:w="543"/><text x="59.7188%" y="607.50"></text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (68 samples, 0.05%)</title><rect x="59.8434%" y="725" width="0.0469%" height="15" fill="rgb(221,57,46)" fg:x="86752" fg:w="68"/><text x="60.0934%" y="735.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_system_update (1,212 samples, 0.84%)</title><rect x="59.0625%" y="741" width="0.8361%" height="15" fill="rgb(229,161,17)" fg:x="85620" fg:w="1212"/><text x="59.3125%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`madvise (30 samples, 0.02%)</title><rect x="59.9014%" y="709" width="0.0207%" height="15" fill="rgb(222,213,11)" fg:x="86836" fg:w="30"/><text x="60.1514%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (33 samples, 0.02%)</title><rect x="59.9000%" y="725" width="0.0228%" height="15" fill="rgb(235,35,13)" fg:x="86834" fg:w="33"/><text x="60.1500%" y="735.50"></text></g><g><title>main`&lt;f32 as ndarray_stats::maybe_nan::MaybeNan&gt;::try_as_not_nan (2,320 samples, 1.60%)</title><rect x="59.9248%" y="725" width="1.6004%" height="15" fill="rgb(233,158,34)" fg:x="86870" fg:w="2320"/><text x="60.1748%" y="735.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,D&gt; as ndarray_stats::quantile::QuantileExt&lt;A,S,D&gt;&gt;::max_skipnan (3,958 samples, 2.73%)</title><rect x="61.5252%" y="725" width="2.7303%" height="15" fill="rgb(215,151,48)" fg:x="89190" fg:w="3958"/><text x="61.7752%" y="735.50">ma..</text></g><g><title>main`ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (530 samples, 0.37%)</title><rect x="64.2555%" y="725" width="0.3656%" height="15" fill="rgb(229,84,14)" fg:x="93148" fg:w="530"/><text x="64.5055%" y="735.50"></text></g><g><title>main`rusty_cde::core::algorithm::metrics::Metrics::calculate_step (7,471 samples, 5.15%)</title><rect x="59.8986%" y="741" width="5.1537%" height="15" fill="rgb(229,68,14)" fg:x="86832" fg:w="7471"/><text x="60.1486%" y="751.50">main`r..</text></g><g><title>main`ndarray::numeric::impl_numeric::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mean (625 samples, 0.43%)</title><rect x="64.6211%" y="725" width="0.4311%" height="15" fill="rgb(243,106,26)" fg:x="93678" fg:w="625"/><text x="64.8711%" y="735.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lscal_kernel_Z1 (17 samples, 0.01%)</title><rect x="71.5297%" y="661" width="0.0117%" height="15" fill="rgb(206,45,38)" fg:x="103693" fg:w="17"/><text x="71.7797%" y="671.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (60 samples, 0.04%)</title><rect x="71.5559%" y="565" width="0.0414%" height="15" fill="rgb(226,6,15)" fg:x="103731" fg:w="60"/><text x="71.8059%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (60 samples, 0.04%)</title><rect x="71.5559%" y="549" width="0.0414%" height="15" fill="rgb(232,22,54)" fg:x="103731" fg:w="60"/><text x="71.8059%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (467 samples, 0.32%)</title><rect x="71.5973%" y="565" width="0.3221%" height="15" fill="rgb(229,222,32)" fg:x="103791" fg:w="467"/><text x="71.8473%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_barrier_wait_end (538 samples, 0.37%)</title><rect x="71.5504%" y="581" width="0.3711%" height="15" fill="rgb(228,62,29)" fg:x="103723" fg:w="538"/><text x="71.8004%" y="591.50"></text></g><g><title>libgomp.1.dylib`gomp_team_start (546 samples, 0.38%)</title><rect x="71.5462%" y="597" width="0.3766%" height="15" fill="rgb(251,103,34)" fg:x="103717" fg:w="546"/><text x="71.7962%" y="607.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`.Lgemv_n_kernel_F320 (20 samples, 0.01%)</title><rect x="71.9243%" y="565" width="0.0138%" height="15" fill="rgb(233,12,30)" fg:x="104265" fg:w="20"/><text x="72.1743%" y="575.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_threads (26 samples, 0.02%)</title><rect x="71.9236%" y="581" width="0.0179%" height="15" fill="rgb(238,52,0)" fg:x="104264" fg:w="26"/><text x="72.1736%" y="591.50"></text></g><g><title>libgomp.1.dylib`GOMP_parallel (578 samples, 0.40%)</title><rect x="71.5435%" y="613" width="0.3987%" height="15" fill="rgb(223,98,5)" fg:x="103713" fg:w="578"/><text x="71.7935%" y="623.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas._omp_fn.1 (28 samples, 0.02%)</title><rect x="71.9229%" y="597" width="0.0193%" height="15" fill="rgb(228,75,37)" fg:x="104263" fg:w="28"/><text x="72.1729%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (60 samples, 0.04%)</title><rect x="71.9477%" y="565" width="0.0414%" height="15" fill="rgb(205,115,49)" fg:x="104299" fg:w="60"/><text x="72.1977%" y="575.50"></text></g><g><title>libgomp.1.dylib`gomp_sem_wait (62 samples, 0.04%)</title><rect x="71.9477%" y="581" width="0.0428%" height="15" fill="rgb(250,154,43)" fg:x="104299" fg:w="62"/><text x="72.1977%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (427 samples, 0.29%)</title><rect x="71.9905%" y="581" width="0.2946%" height="15" fill="rgb(226,43,29)" fg:x="104361" fg:w="427"/><text x="72.2405%" y="591.50"></text></g><g><title>libgomp.1.dylib`gomp_team_barrier_wait_end (506 samples, 0.35%)</title><rect x="71.9422%" y="597" width="0.3490%" height="15" fill="rgb(249,228,39)" fg:x="104291" fg:w="506"/><text x="72.1922%" y="607.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`cblas_sgemv (1,088 samples, 0.75%)</title><rect x="71.5421%" y="661" width="0.7505%" height="15" fill="rgb(216,79,43)" fg:x="103711" fg:w="1088"/><text x="71.7921%" y="671.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`sgemv_thread_n (1,087 samples, 0.75%)</title><rect x="71.5428%" y="645" width="0.7498%" height="15" fill="rgb(228,95,12)" fg:x="103712" fg:w="1087"/><text x="71.7928%" y="655.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas (1,086 samples, 0.75%)</title><rect x="71.5435%" y="629" width="0.7491%" height="15" fill="rgb(249,221,15)" fg:x="103713" fg:w="1086"/><text x="71.7935%" y="639.50"></text></g><g><title>libgomp.1.dylib`gomp_team_end (508 samples, 0.35%)</title><rect x="71.9422%" y="613" width="0.3504%" height="15" fill="rgb(233,34,13)" fg:x="104291" fg:w="508"/><text x="72.1922%" y="623.50"></text></g><g><title>main`rusty_cde::core::algorithm::refinement::derivation::Derivatives::calculate (10,497 samples, 7.24%)</title><rect x="65.0523%" y="741" width="7.2411%" height="15" fill="rgb(214,103,39)" fg:x="94303" fg:w="10497"/><text x="65.3023%" y="751.50">main`rusty..</text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (1,110 samples, 0.77%)</title><rect x="71.5276%" y="725" width="0.7657%" height="15" fill="rgb(251,126,39)" fg:x="103690" fg:w="1110"/><text x="71.7776%" y="735.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (1,110 samples, 0.77%)</title><rect x="71.5276%" y="709" width="0.7657%" height="15" fill="rgb(214,216,36)" fg:x="103690" fg:w="1110"/><text x="71.7776%" y="719.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (1,110 samples, 0.77%)</title><rect x="71.5276%" y="693" width="0.7657%" height="15" fill="rgb(220,221,8)" fg:x="103690" fg:w="1110"/><text x="71.7776%" y="703.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::general_mat_vec_mul_impl (1,107 samples, 0.76%)</title><rect x="71.5297%" y="677" width="0.7636%" height="15" fill="rgb(240,216,3)" fg:x="103693" fg:w="1107"/><text x="71.7797%" y="687.50"></text></g><g><title>main`rusty_cde::core::algorithm::run_epoch (55,776 samples, 38.48%)</title><rect x="33.8213%" y="757" width="38.4755%" height="15" fill="rgb(232,218,17)" fg:x="49029" fg:w="55776"/><text x="34.0713%" y="767.50">main`rusty_cde::core::algorithm::run_epoch</text></g><g><title>main`rusty_cde::core::model::functional::kalman::Gain::from_model_config (24 samples, 0.02%)</title><rect x="72.3078%" y="693" width="0.0166%" height="15" fill="rgb(229,163,45)" fg:x="104821" fg:w="24"/><text x="72.5578%" y="703.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (19 samples, 0.01%)</title><rect x="72.3112%" y="677" width="0.0131%" height="15" fill="rgb(231,110,42)" fg:x="104826" fg:w="19"/><text x="72.5612%" y="687.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (19 samples, 0.01%)</title><rect x="72.3112%" y="661" width="0.0131%" height="15" fill="rgb(208,170,48)" fg:x="104826" fg:w="19"/><text x="72.5612%" y="671.50"></text></g><g><title> 2]&gt;&gt;&gt;&gt;::dot (19 samples, 0.01%)</title><rect x="72.3112%" y="645" width="0.0131%" height="15" fill="rgb(239,116,25)" fg:x="104826" fg:w="19"/><text x="72.5612%" y="655.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::mat_mul_impl (19 samples, 0.01%)</title><rect x="72.3112%" y="629" width="0.0131%" height="15" fill="rgb(219,200,50)" fg:x="104826" fg:w="19"/><text x="72.5612%" y="639.50"></text></g><g><title>main`rusty_cde::core::data::simulation::Simulation::from_config (43 samples, 0.03%)</title><rect x="72.2968%" y="741" width="0.0297%" height="15" fill="rgb(245,200,0)" fg:x="104805" fg:w="43"/><text x="72.5468%" y="751.50"></text></g><g><title>main`rusty_cde::core::model::Model::from_model_config (43 samples, 0.03%)</title><rect x="72.2968%" y="725" width="0.0297%" height="15" fill="rgb(245,119,33)" fg:x="104805" fg:w="43"/><text x="72.5468%" y="735.50"></text></g><g><title>main`rusty_cde::core::model::functional::FunctionalDescription::from_model_config (43 samples, 0.03%)</title><rect x="72.2968%" y="709" width="0.0297%" height="15" fill="rgb(231,125,12)" fg:x="104805" fg:w="43"/><text x="72.5468%" y="719.50"></text></g><g><title>main`ndarray::dimension::stride_offset_checked (133 samples, 0.09%)</title><rect x="72.3264%" y="725" width="0.0917%" height="15" fill="rgb(216,96,41)" fg:x="104848" fg:w="133"/><text x="72.5764%" y="735.50"></text></g><g><title>main`rusty_cde::core::data::Data::from_simulation_config (342 samples, 0.24%)</title><rect x="72.2968%" y="757" width="0.2359%" height="15" fill="rgb(248,43,45)" fg:x="104805" fg:w="342"/><text x="72.5468%" y="767.50"></text></g><g><title>main`rusty_cde::core::data::simulation::Simulation::run (299 samples, 0.21%)</title><rect x="72.3264%" y="741" width="0.2063%" height="15" fill="rgb(217,222,7)" fg:x="104848" fg:w="299"/><text x="72.5764%" y="751.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_system_prediction (166 samples, 0.11%)</title><rect x="72.4182%" y="725" width="0.1145%" height="15" fill="rgb(233,28,6)" fg:x="104981" fg:w="166"/><text x="72.6682%" y="735.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (15 samples, 0.01%)</title><rect x="72.5223%" y="709" width="0.0103%" height="15" fill="rgb(231,218,15)" fg:x="105132" fg:w="15"/><text x="72.7723%" y="719.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (15 samples, 0.01%)</title><rect x="72.5223%" y="693" width="0.0103%" height="15" fill="rgb(226,171,48)" fg:x="105132" fg:w="15"/><text x="72.7723%" y="703.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (15 samples, 0.01%)</title><rect x="72.5223%" y="677" width="0.0103%" height="15" fill="rgb(235,201,9)" fg:x="105132" fg:w="15"/><text x="72.7723%" y="687.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::general_mat_vec_mul_impl (15 samples, 0.01%)</title><rect x="72.5223%" y="661" width="0.0103%" height="15" fill="rgb(217,80,15)" fg:x="105132" fg:w="15"/><text x="72.7723%" y="671.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`cblas_sgemv (15 samples, 0.01%)</title><rect x="72.5223%" y="645" width="0.0103%" height="15" fill="rgb(219,152,8)" fg:x="105132" fg:w="15"/><text x="72.7723%" y="655.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`sgemv_thread_t (15 samples, 0.01%)</title><rect x="72.5223%" y="629" width="0.0103%" height="15" fill="rgb(243,107,38)" fg:x="105132" fg:w="15"/><text x="72.7723%" y="639.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas (15 samples, 0.01%)</title><rect x="72.5223%" y="613" width="0.0103%" height="15" fill="rgb(231,17,5)" fg:x="105132" fg:w="15"/><text x="72.7723%" y="623.50"></text></g><g><title>main`rusty_cde::core::model::Model::from_model_config (21 samples, 0.01%)</title><rect x="72.5327%" y="757" width="0.0145%" height="15" fill="rgb(209,25,54)" fg:x="105147" fg:w="21"/><text x="72.7827%" y="767.50"></text></g><g><title>main`rusty_cde::core::model::functional::FunctionalDescription::from_model_config (21 samples, 0.01%)</title><rect x="72.5327%" y="741" width="0.0145%" height="15" fill="rgb(219,0,2)" fg:x="105147" fg:w="21"/><text x="72.7827%" y="751.50"></text></g><g><title>main`half::binary16::convert::f16_to_f64_fallback (17 samples, 0.01%)</title><rect x="72.5734%" y="645" width="0.0117%" height="15" fill="rgb(246,9,5)" fg:x="105206" fg:w="17"/><text x="72.8234%" y="655.50"></text></g><g><title>main`half::binary16::convert::f64_to_f16_fallback (26 samples, 0.02%)</title><rect x="72.5851%" y="645" width="0.0179%" height="15" fill="rgb(226,159,4)" fg:x="105223" fg:w="26"/><text x="72.8351%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (13,921 samples, 9.60%)</title><rect x="72.6148%" y="629" width="9.6030%" height="15" fill="rgb(219,175,34)" fg:x="105266" fg:w="13921"/><text x="72.8648%" y="639.50">libsystem_kern..</text></g><g><title>main`std::io::Write::write_all (13,957 samples, 9.63%)</title><rect x="72.6030%" y="645" width="9.6278%" height="15" fill="rgb(236,10,46)" fg:x="105249" fg:w="13957"/><text x="72.8530%" y="655.50">main`std::io::..</text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (14,040 samples, 9.69%)</title><rect x="72.5534%" y="661" width="9.6851%" height="15" fill="rgb(240,211,16)" fg:x="105177" fg:w="14040"/><text x="72.8034%" y="671.50">main`serde::se..</text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (14,066 samples, 9.70%)</title><rect x="72.5472%" y="677" width="9.7030%" height="15" fill="rgb(205,3,43)" fg:x="105168" fg:w="14066"/><text x="72.7972%" y="687.50">main`&lt;ndarray:..</text></g><g><title>main`std::io::Write::write_all (17 samples, 0.01%)</title><rect x="82.2385%" y="661" width="0.0117%" height="15" fill="rgb(245,7,22)" fg:x="119217" fg:w="17"/><text x="82.4885%" y="671.50"></text></g><g><title>main`rusty_cde::core::data::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::data::shapes::ArrayMeasurements&gt;::serialize (14,112 samples, 9.73%)</title><rect x="72.5472%" y="709" width="9.7348%" height="15" fill="rgb(239,132,32)" fg:x="105168" fg:w="14112"/><text x="72.7972%" y="719.50">main`rusty_cde..</text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (14,112 samples, 9.73%)</title><rect x="72.5472%" y="693" width="9.7348%" height="15" fill="rgb(228,202,34)" fg:x="105168" fg:w="14112"/><text x="72.7972%" y="703.50">main`ndarray::..</text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (46 samples, 0.03%)</title><rect x="82.2502%" y="677" width="0.0317%" height="15" fill="rgb(254,200,22)" fg:x="119234" fg:w="46"/><text x="82.5002%" y="687.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (293 samples, 0.20%)</title><rect x="82.2819%" y="677" width="0.2021%" height="15" fill="rgb(219,10,39)" fg:x="119280" fg:w="293"/><text x="82.5319%" y="687.50"></text></g><g><title>main`rusty_cde::core::model::functional::kalman::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::kalman::Gain&gt;::serialize (288 samples, 0.20%)</title><rect x="82.2854%" y="661" width="0.1987%" height="15" fill="rgb(226,210,39)" fg:x="119285" fg:w="288"/><text x="82.5354%" y="671.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (288 samples, 0.20%)</title><rect x="82.2854%" y="645" width="0.1987%" height="15" fill="rgb(208,219,16)" fg:x="119285" fg:w="288"/><text x="82.5354%" y="655.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (288 samples, 0.20%)</title><rect x="82.2854%" y="629" width="0.1987%" height="15" fill="rgb(216,158,51)" fg:x="119285" fg:w="288"/><text x="82.5354%" y="639.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (288 samples, 0.20%)</title><rect x="82.2854%" y="613" width="0.1987%" height="15" fill="rgb(233,14,44)" fg:x="119285" fg:w="288"/><text x="82.5354%" y="623.50"></text></g><g><title>main`std::io::Write::write_all (288 samples, 0.20%)</title><rect x="82.2854%" y="597" width="0.1987%" height="15" fill="rgb(237,97,39)" fg:x="119285" fg:w="288"/><text x="82.5354%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (288 samples, 0.20%)</title><rect x="82.2854%" y="581" width="0.1987%" height="15" fill="rgb(218,198,43)" fg:x="119285" fg:w="288"/><text x="82.5354%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`write (58 samples, 0.04%)</title><rect x="82.4861%" y="581" width="0.0400%" height="15" fill="rgb(231,104,20)" fg:x="119576" fg:w="58"/><text x="82.7361%" y="591.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (60 samples, 0.04%)</title><rect x="82.4854%" y="613" width="0.0414%" height="15" fill="rgb(254,36,13)" fg:x="119575" fg:w="60"/><text x="82.7354%" y="623.50"></text></g><g><title>main`std::io::Write::write_all (59 samples, 0.04%)</title><rect x="82.4861%" y="597" width="0.0407%" height="15" fill="rgb(248,14,50)" fg:x="119576" fg:w="59"/><text x="82.7361%" y="607.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (91 samples, 0.06%)</title><rect x="82.4854%" y="629" width="0.0628%" height="15" fill="rgb(217,107,29)" fg:x="119575" fg:w="91"/><text x="82.7354%" y="639.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (31 samples, 0.02%)</title><rect x="82.5268%" y="613" width="0.0214%" height="15" fill="rgb(251,169,33)" fg:x="119635" fg:w="31"/><text x="82.7768%" y="623.50"></text></g><g><title>main`std::io::Write::write_all (31 samples, 0.02%)</title><rect x="82.5268%" y="597" width="0.0214%" height="15" fill="rgb(217,108,32)" fg:x="119635" fg:w="31"/><text x="82.7768%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (31 samples, 0.02%)</title><rect x="82.5268%" y="581" width="0.0214%" height="15" fill="rgb(219,66,42)" fg:x="119635" fg:w="31"/><text x="82.7768%" y="591.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayDelays&lt;T&gt;&gt;::serialize (92 samples, 0.06%)</title><rect x="82.4854%" y="661" width="0.0635%" height="15" fill="rgb(206,180,7)" fg:x="119575" fg:w="92"/><text x="82.7354%" y="671.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (92 samples, 0.06%)</title><rect x="82.4854%" y="645" width="0.0635%" height="15" fill="rgb(208,226,31)" fg:x="119575" fg:w="92"/><text x="82.7354%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (545 samples, 0.38%)</title><rect x="82.5489%" y="581" width="0.3760%" height="15" fill="rgb(218,26,49)" fg:x="119667" fg:w="545"/><text x="82.7989%" y="591.50"></text></g><g><title>main`std::io::Write::write_all (547 samples, 0.38%)</title><rect x="82.5489%" y="597" width="0.3773%" height="15" fill="rgb(233,197,48)" fg:x="119667" fg:w="547"/><text x="82.7989%" y="607.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (548 samples, 0.38%)</title><rect x="82.5489%" y="613" width="0.3780%" height="15" fill="rgb(252,181,51)" fg:x="119667" fg:w="548"/><text x="82.7989%" y="623.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (549 samples, 0.38%)</title><rect x="82.5489%" y="661" width="0.3787%" height="15" fill="rgb(253,90,19)" fg:x="119667" fg:w="549"/><text x="82.7989%" y="671.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (549 samples, 0.38%)</title><rect x="82.5489%" y="645" width="0.3787%" height="15" fill="rgb(215,171,30)" fg:x="119667" fg:w="549"/><text x="82.7989%" y="655.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (549 samples, 0.38%)</title><rect x="82.5489%" y="629" width="0.3787%" height="15" fill="rgb(214,222,9)" fg:x="119667" fg:w="549"/><text x="82.7989%" y="639.50"></text></g><g><title>main`&lt;&amp;mut ciborium::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_none (183 samples, 0.13%)</title><rect x="82.9276%" y="613" width="0.1262%" height="15" fill="rgb(223,3,22)" fg:x="120216" fg:w="183"/><text x="83.1776%" y="623.50"></text></g><g><title>main`std::io::Write::write_all (183 samples, 0.13%)</title><rect x="82.9276%" y="597" width="0.1262%" height="15" fill="rgb(225,196,46)" fg:x="120216" fg:w="183"/><text x="83.1776%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (182 samples, 0.13%)</title><rect x="82.9283%" y="581" width="0.1255%" height="15" fill="rgb(209,110,37)" fg:x="120217" fg:w="182"/><text x="83.1783%" y="591.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (176 samples, 0.12%)</title><rect x="83.0545%" y="613" width="0.1214%" height="15" fill="rgb(249,89,12)" fg:x="120400" fg:w="176"/><text x="83.3045%" y="623.50"></text></g><g><title>main`std::io::Write::write_all (176 samples, 0.12%)</title><rect x="83.0545%" y="597" width="0.1214%" height="15" fill="rgb(226,27,33)" fg:x="120400" fg:w="176"/><text x="83.3045%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (175 samples, 0.12%)</title><rect x="83.0552%" y="581" width="0.1207%" height="15" fill="rgb(213,82,22)" fg:x="120401" fg:w="175"/><text x="83.3052%" y="591.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::APParameters&gt;::serialize (1,004 samples, 0.69%)</title><rect x="82.4840%" y="677" width="0.6926%" height="15" fill="rgb(248,140,0)" fg:x="119573" fg:w="1004"/><text x="82.7340%" y="687.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayIndicesGains&gt;::serialize (361 samples, 0.25%)</title><rect x="82.9276%" y="661" width="0.2490%" height="15" fill="rgb(228,106,3)" fg:x="120216" fg:w="361"/><text x="83.1776%" y="671.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (361 samples, 0.25%)</title><rect x="82.9276%" y="645" width="0.2490%" height="15" fill="rgb(209,23,37)" fg:x="120216" fg:w="361"/><text x="83.1776%" y="655.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (361 samples, 0.25%)</title><rect x="82.9276%" y="629" width="0.2490%" height="15" fill="rgb(241,93,50)" fg:x="120216" fg:w="361"/><text x="83.1776%" y="639.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (655 samples, 0.45%)</title><rect x="83.1766%" y="677" width="0.4518%" height="15" fill="rgb(253,46,43)" fg:x="120577" fg:w="655"/><text x="83.4266%" y="687.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (655 samples, 0.45%)</title><rect x="83.1766%" y="661" width="0.4518%" height="15" fill="rgb(226,206,43)" fg:x="120577" fg:w="655"/><text x="83.4266%" y="671.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (655 samples, 0.45%)</title><rect x="83.1766%" y="645" width="0.4518%" height="15" fill="rgb(217,54,7)" fg:x="120577" fg:w="655"/><text x="83.4266%" y="655.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (655 samples, 0.45%)</title><rect x="83.1766%" y="629" width="0.4518%" height="15" fill="rgb(223,5,52)" fg:x="120577" fg:w="655"/><text x="83.4266%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (655 samples, 0.45%)</title><rect x="83.1766%" y="613" width="0.4518%" height="15" fill="rgb(206,52,46)" fg:x="120577" fg:w="655"/><text x="83.4266%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (655 samples, 0.45%)</title><rect x="83.1766%" y="597" width="0.4518%" height="15" fill="rgb(253,136,11)" fg:x="120577" fg:w="655"/><text x="83.4266%" y="607.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (218 samples, 0.15%)</title><rect x="83.6340%" y="613" width="0.1504%" height="15" fill="rgb(208,106,33)" fg:x="121240" fg:w="218"/><text x="83.8840%" y="623.50"></text></g><g><title>main`std::io::Write::write_all (217 samples, 0.15%)</title><rect x="83.6347%" y="597" width="0.1497%" height="15" fill="rgb(206,54,4)" fg:x="121241" fg:w="217"/><text x="83.8847%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (216 samples, 0.15%)</title><rect x="83.6354%" y="581" width="0.1490%" height="15" fill="rgb(213,3,15)" fg:x="121242" fg:w="216"/><text x="83.8854%" y="591.50"></text></g><g><title>main`rusty_cde::core::model::functional::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::FunctionalDescription&gt;::serialize (2,180 samples, 1.50%)</title><rect x="82.2819%" y="693" width="1.5038%" height="15" fill="rgb(252,211,39)" fg:x="119280" fg:w="2180"/><text x="82.5319%" y="703.50"></text></g><g><title>main`rusty_cde::core::model::functional::measurement::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::measurement::MeasurementMatrix&gt;::serialize (221 samples, 0.15%)</title><rect x="83.6333%" y="677" width="0.1525%" height="15" fill="rgb(223,6,36)" fg:x="121239" fg:w="221"/><text x="83.8833%" y="687.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (221 samples, 0.15%)</title><rect x="83.6333%" y="661" width="0.1525%" height="15" fill="rgb(252,169,45)" fg:x="121239" fg:w="221"/><text x="83.8833%" y="671.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (221 samples, 0.15%)</title><rect x="83.6333%" y="645" width="0.1525%" height="15" fill="rgb(212,48,26)" fg:x="121239" fg:w="221"/><text x="83.8833%" y="655.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (221 samples, 0.15%)</title><rect x="83.6333%" y="629" width="0.1525%" height="15" fill="rgb(251,102,48)" fg:x="121239" fg:w="221"/><text x="83.8833%" y="639.50"></text></g><g><title>main`rusty_cde::core::data::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::data::Data&gt;::serialize (16,304 samples, 11.25%)</title><rect x="72.5472%" y="741" width="11.2469%" height="15" fill="rgb(243,208,16)" fg:x="105168" fg:w="16304"/><text x="72.7972%" y="751.50">main`rusty_cde::c..</text></g><g><title>main`rusty_cde::core::data::simulation::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::data::simulation::Simulation&gt;::serialize (16,304 samples, 11.25%)</title><rect x="72.5472%" y="725" width="11.2469%" height="15" fill="rgb(219,96,24)" fg:x="105168" fg:w="16304"/><text x="72.7972%" y="735.50">main`rusty_cde::c..</text></g><g><title>main`rusty_cde::core::model::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::Model&gt;::serialize (2,192 samples, 1.51%)</title><rect x="82.2819%" y="709" width="1.5121%" height="15" fill="rgb(219,33,29)" fg:x="119280" fg:w="2192"/><text x="82.5319%" y="719.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayDelays&lt;T&gt;&gt;::serialize (62 samples, 0.04%)</title><rect x="83.8023%" y="693" width="0.0428%" height="15" fill="rgb(223,176,5)" fg:x="121484" fg:w="62"/><text x="84.0523%" y="703.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (62 samples, 0.04%)</title><rect x="83.8023%" y="677" width="0.0428%" height="15" fill="rgb(228,140,14)" fg:x="121484" fg:w="62"/><text x="84.0523%" y="687.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (62 samples, 0.04%)</title><rect x="83.8023%" y="661" width="0.0428%" height="15" fill="rgb(217,179,31)" fg:x="121484" fg:w="62"/><text x="84.0523%" y="671.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (62 samples, 0.04%)</title><rect x="83.8023%" y="645" width="0.0428%" height="15" fill="rgb(230,9,30)" fg:x="121484" fg:w="62"/><text x="84.0523%" y="655.50"></text></g><g><title>main`std::io::Write::write_all (62 samples, 0.04%)</title><rect x="83.8023%" y="629" width="0.0428%" height="15" fill="rgb(230,136,20)" fg:x="121484" fg:w="62"/><text x="84.0523%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`write (62 samples, 0.04%)</title><rect x="83.8023%" y="613" width="0.0428%" height="15" fill="rgb(215,210,22)" fg:x="121484" fg:w="62"/><text x="84.0523%" y="623.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (610 samples, 0.42%)</title><rect x="83.7940%" y="709" width="0.4208%" height="15" fill="rgb(218,43,5)" fg:x="121472" fg:w="610"/><text x="84.0440%" y="719.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (536 samples, 0.37%)</title><rect x="83.8451%" y="693" width="0.3697%" height="15" fill="rgb(216,11,5)" fg:x="121546" fg:w="536"/><text x="84.0951%" y="703.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (536 samples, 0.37%)</title><rect x="83.8451%" y="677" width="0.3697%" height="15" fill="rgb(209,82,29)" fg:x="121546" fg:w="536"/><text x="84.0951%" y="687.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (536 samples, 0.37%)</title><rect x="83.8451%" y="661" width="0.3697%" height="15" fill="rgb(244,115,12)" fg:x="121546" fg:w="536"/><text x="84.0951%" y="671.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (536 samples, 0.37%)</title><rect x="83.8451%" y="645" width="0.3697%" height="15" fill="rgb(222,82,18)" fg:x="121546" fg:w="536"/><text x="84.0951%" y="655.50"></text></g><g><title>main`std::io::Write::write_all (530 samples, 0.37%)</title><rect x="83.8492%" y="629" width="0.3656%" height="15" fill="rgb(249,227,8)" fg:x="121552" fg:w="530"/><text x="84.0992%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`write (529 samples, 0.36%)</title><rect x="83.8499%" y="613" width="0.3649%" height="15" fill="rgb(253,141,45)" fg:x="121553" fg:w="529"/><text x="84.0999%" y="623.50"></text></g><g><title>main`half::binary16::convert::f64_to_f16_fallback (38 samples, 0.03%)</title><rect x="84.2341%" y="645" width="0.0262%" height="15" fill="rgb(234,184,4)" fg:x="122110" fg:w="38"/><text x="84.4841%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (14,216 samples, 9.81%)</title><rect x="84.2700%" y="629" width="9.8065%" height="15" fill="rgb(218,194,23)" fg:x="122162" fg:w="14216"/><text x="84.5200%" y="639.50">libsystem_kern..</text></g><g><title>main`std::io::Write::write_all (14,247 samples, 9.83%)</title><rect x="84.2603%" y="645" width="9.8279%" height="15" fill="rgb(235,66,41)" fg:x="122148" fg:w="14247"/><text x="84.5103%" y="655.50">main`std::io::..</text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (14,318 samples, 9.88%)</title><rect x="84.2210%" y="661" width="9.8769%" height="15" fill="rgb(245,217,1)" fg:x="122091" fg:w="14318"/><text x="84.4710%" y="671.50">main`serde::se..</text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (14,340 samples, 9.89%)</title><rect x="84.2148%" y="677" width="9.8920%" height="15" fill="rgb(229,91,1)" fg:x="122082" fg:w="14340"/><text x="84.4648%" y="687.50">main`&lt;ndarray:..</text></g><g><title>main`rusty_cde::core::data::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::data::shapes::ArrayMeasurements&gt;::serialize (14,372 samples, 9.91%)</title><rect x="84.2148%" y="709" width="9.9141%" height="15" fill="rgb(207,101,30)" fg:x="122082" fg:w="14372"/><text x="84.4648%" y="719.50">main`rusty_cde..</text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (14,372 samples, 9.91%)</title><rect x="84.2148%" y="693" width="9.9141%" height="15" fill="rgb(223,82,49)" fg:x="122082" fg:w="14372"/><text x="84.4648%" y="703.50">main`ndarray::..</text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (32 samples, 0.02%)</title><rect x="94.1069%" y="677" width="0.0221%" height="15" fill="rgb(218,167,17)" fg:x="136422" fg:w="32"/><text x="94.3569%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`write (1,859 samples, 1.28%)</title><rect x="94.1331%" y="629" width="1.2824%" height="15" fill="rgb(208,103,14)" fg:x="136460" fg:w="1859"/><text x="94.3831%" y="639.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (1,868 samples, 1.29%)</title><rect x="94.1289%" y="661" width="1.2886%" height="15" fill="rgb(238,20,8)" fg:x="136454" fg:w="1868"/><text x="94.3789%" y="671.50"></text></g><g><title>main`std::io::Write::write_all (1,863 samples, 1.29%)</title><rect x="94.1324%" y="645" width="1.2851%" height="15" fill="rgb(218,80,54)" fg:x="136459" fg:w="1863"/><text x="94.3824%" y="655.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (1,871 samples, 1.29%)</title><rect x="94.1289%" y="677" width="1.2907%" height="15" fill="rgb(240,144,17)" fg:x="136454" fg:w="1871"/><text x="94.3789%" y="687.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::algorithm::estimation::Estimations&gt;::serialize (16,864 samples, 11.63%)</title><rect x="83.7940%" y="725" width="11.6332%" height="15" fill="rgb(245,27,50)" fg:x="121472" fg:w="16864"/><text x="84.0440%" y="735.50">main`rusty_cde::c..</text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (1,882 samples, 1.30%)</title><rect x="94.1289%" y="709" width="1.2982%" height="15" fill="rgb(251,51,7)" fg:x="136454" fg:w="1882"/><text x="94.3789%" y="719.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (1,882 samples, 1.30%)</title><rect x="94.1289%" y="693" width="1.2982%" height="15" fill="rgb(245,217,29)" fg:x="136454" fg:w="1882"/><text x="94.3789%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`write (518 samples, 0.36%)</title><rect x="95.4279%" y="629" width="0.3573%" height="15" fill="rgb(221,176,29)" fg:x="138337" fg:w="518"/><text x="95.6779%" y="639.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (520 samples, 0.36%)</title><rect x="95.4272%" y="661" width="0.3587%" height="15" fill="rgb(212,180,24)" fg:x="138336" fg:w="520"/><text x="95.6772%" y="671.50"></text></g><g><title>main`std::io::Write::write_all (519 samples, 0.36%)</title><rect x="95.4279%" y="645" width="0.3580%" height="15" fill="rgb(254,24,2)" fg:x="138337" fg:w="519"/><text x="95.6779%" y="655.50"></text></g><g><title>main`rusty_cde::core::algorithm::metrics::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::algorithm::metrics::Metrics&gt;::serialize (522 samples, 0.36%)</title><rect x="95.4272%" y="725" width="0.3601%" height="15" fill="rgb(230,100,2)" fg:x="138336" fg:w="522"/><text x="95.6772%" y="735.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (522 samples, 0.36%)</title><rect x="95.4272%" y="709" width="0.3601%" height="15" fill="rgb(219,142,25)" fg:x="138336" fg:w="522"/><text x="95.6772%" y="719.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (522 samples, 0.36%)</title><rect x="95.4272%" y="693" width="0.3601%" height="15" fill="rgb(240,73,43)" fg:x="138336" fg:w="522"/><text x="95.6772%" y="703.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (522 samples, 0.36%)</title><rect x="95.4272%" y="677" width="0.3601%" height="15" fill="rgb(214,114,15)" fg:x="138336" fg:w="522"/><text x="95.6772%" y="687.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (60 samples, 0.04%)</title><rect x="95.7962%" y="677" width="0.0414%" height="15" fill="rgb(207,130,4)" fg:x="138871" fg:w="60"/><text x="96.0462%" y="687.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (59 samples, 0.04%)</title><rect x="95.7969%" y="661" width="0.0407%" height="15" fill="rgb(221,25,40)" fg:x="138872" fg:w="59"/><text x="96.0469%" y="671.50"></text></g><g><title>main`std::io::Write::write_all (58 samples, 0.04%)</title><rect x="95.7976%" y="645" width="0.0400%" height="15" fill="rgb(241,184,7)" fg:x="138873" fg:w="58"/><text x="96.0476%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (58 samples, 0.04%)</title><rect x="95.7976%" y="629" width="0.0400%" height="15" fill="rgb(235,159,4)" fg:x="138873" fg:w="58"/><text x="96.0476%" y="639.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayDelays&lt;T&gt;&gt;::serialize (61 samples, 0.04%)</title><rect x="95.7962%" y="709" width="0.0421%" height="15" fill="rgb(214,87,48)" fg:x="138871" fg:w="61"/><text x="96.0462%" y="719.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (61 samples, 0.04%)</title><rect x="95.7962%" y="693" width="0.0421%" height="15" fill="rgb(246,198,24)" fg:x="138871" fg:w="61"/><text x="96.0462%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`write (1,626 samples, 1.12%)</title><rect x="95.8445%" y="629" width="1.1217%" height="15" fill="rgb(209,66,40)" fg:x="138941" fg:w="1626"/><text x="96.0945%" y="639.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (1,634 samples, 1.13%)</title><rect x="95.8397%" y="661" width="1.1272%" height="15" fill="rgb(233,147,39)" fg:x="138934" fg:w="1634"/><text x="96.0897%" y="671.50"></text></g><g><title>main`std::io::Write::write_all (1,628 samples, 1.12%)</title><rect x="95.8438%" y="645" width="1.1230%" height="15" fill="rgb(231,145,52)" fg:x="138940" fg:w="1628"/><text x="96.0938%" y="655.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (1,637 samples, 1.13%)</title><rect x="95.8383%" y="677" width="1.1292%" height="15" fill="rgb(206,20,26)" fg:x="138932" fg:w="1637"/><text x="96.0883%" y="687.50"></text></g><g><title>main`rusty_cde::core::algorithm::refinement::derivation::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::algorithm::refinement::derivation::Derivatives&gt;::serialize (1,715 samples, 1.18%)</title><rect x="95.7873%" y="725" width="1.1830%" height="15" fill="rgb(238,220,4)" fg:x="138858" fg:w="1715"/><text x="96.0373%" y="735.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (1,641 samples, 1.13%)</title><rect x="95.8383%" y="709" width="1.1320%" height="15" fill="rgb(252,195,42)" fg:x="138932" fg:w="1641"/><text x="96.0883%" y="719.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (1,641 samples, 1.13%)</title><rect x="95.8383%" y="693" width="1.1320%" height="15" fill="rgb(209,10,6)" fg:x="138932" fg:w="1641"/><text x="96.0883%" y="703.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (222 samples, 0.15%)</title><rect x="96.9703%" y="693" width="0.1531%" height="15" fill="rgb(229,3,52)" fg:x="140573" fg:w="222"/><text x="97.2203%" y="703.50"></text></g><g><title>main`rusty_cde::core::model::functional::kalman::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::kalman::Gain&gt;::serialize (217 samples, 0.15%)</title><rect x="96.9738%" y="677" width="0.1497%" height="15" fill="rgb(253,49,37)" fg:x="140578" fg:w="217"/><text x="97.2238%" y="687.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (217 samples, 0.15%)</title><rect x="96.9738%" y="661" width="0.1497%" height="15" fill="rgb(240,103,49)" fg:x="140578" fg:w="217"/><text x="97.2238%" y="671.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (217 samples, 0.15%)</title><rect x="96.9738%" y="645" width="0.1497%" height="15" fill="rgb(250,182,30)" fg:x="140578" fg:w="217"/><text x="97.2238%" y="655.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (217 samples, 0.15%)</title><rect x="96.9738%" y="629" width="0.1497%" height="15" fill="rgb(248,8,30)" fg:x="140578" fg:w="217"/><text x="97.2238%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (216 samples, 0.15%)</title><rect x="96.9744%" y="613" width="0.1490%" height="15" fill="rgb(237,120,30)" fg:x="140579" fg:w="216"/><text x="97.2244%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (215 samples, 0.15%)</title><rect x="96.9751%" y="597" width="0.1483%" height="15" fill="rgb(221,146,34)" fg:x="140580" fg:w="215"/><text x="97.2251%" y="607.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (61 samples, 0.04%)</title><rect x="97.1255%" y="629" width="0.0421%" height="15" fill="rgb(242,55,13)" fg:x="140798" fg:w="61"/><text x="97.3755%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (60 samples, 0.04%)</title><rect x="97.1262%" y="613" width="0.0414%" height="15" fill="rgb(242,112,31)" fg:x="140799" fg:w="60"/><text x="97.3762%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (59 samples, 0.04%)</title><rect x="97.1269%" y="597" width="0.0407%" height="15" fill="rgb(249,192,27)" fg:x="140800" fg:w="59"/><text x="97.3769%" y="607.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayDelays&lt;T&gt;&gt;::serialize (91 samples, 0.06%)</title><rect x="97.1255%" y="677" width="0.0628%" height="15" fill="rgb(208,204,44)" fg:x="140798" fg:w="91"/><text x="97.3755%" y="687.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (91 samples, 0.06%)</title><rect x="97.1255%" y="661" width="0.0628%" height="15" fill="rgb(208,93,54)" fg:x="140798" fg:w="91"/><text x="97.3755%" y="671.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (91 samples, 0.06%)</title><rect x="97.1255%" y="645" width="0.0628%" height="15" fill="rgb(242,1,31)" fg:x="140798" fg:w="91"/><text x="97.3755%" y="655.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (30 samples, 0.02%)</title><rect x="97.1676%" y="629" width="0.0207%" height="15" fill="rgb(241,83,25)" fg:x="140859" fg:w="30"/><text x="97.4176%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (30 samples, 0.02%)</title><rect x="97.1676%" y="613" width="0.0207%" height="15" fill="rgb(205,169,50)" fg:x="140859" fg:w="30"/><text x="97.4176%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (30 samples, 0.02%)</title><rect x="97.1676%" y="597" width="0.0207%" height="15" fill="rgb(239,186,37)" fg:x="140859" fg:w="30"/><text x="97.4176%" y="607.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (550 samples, 0.38%)</title><rect x="97.1883%" y="677" width="0.3794%" height="15" fill="rgb(205,221,10)" fg:x="140889" fg:w="550"/><text x="97.4383%" y="687.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (550 samples, 0.38%)</title><rect x="97.1883%" y="661" width="0.3794%" height="15" fill="rgb(218,196,15)" fg:x="140889" fg:w="550"/><text x="97.4383%" y="671.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (550 samples, 0.38%)</title><rect x="97.1883%" y="645" width="0.3794%" height="15" fill="rgb(218,196,35)" fg:x="140889" fg:w="550"/><text x="97.4383%" y="655.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (550 samples, 0.38%)</title><rect x="97.1883%" y="629" width="0.3794%" height="15" fill="rgb(233,63,24)" fg:x="140889" fg:w="550"/><text x="97.4383%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (547 samples, 0.38%)</title><rect x="97.1904%" y="613" width="0.3773%" height="15" fill="rgb(225,8,4)" fg:x="140892" fg:w="547"/><text x="97.4404%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (547 samples, 0.38%)</title><rect x="97.1904%" y="597" width="0.3773%" height="15" fill="rgb(234,105,35)" fg:x="140892" fg:w="547"/><text x="97.4404%" y="607.50"></text></g><g><title>main`&lt;&amp;mut ciborium::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_none (171 samples, 0.12%)</title><rect x="97.5677%" y="629" width="0.1180%" height="15" fill="rgb(236,21,32)" fg:x="141439" fg:w="171"/><text x="97.8177%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (170 samples, 0.12%)</title><rect x="97.5684%" y="613" width="0.1173%" height="15" fill="rgb(228,109,6)" fg:x="141440" fg:w="170"/><text x="97.8184%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (170 samples, 0.12%)</title><rect x="97.5684%" y="597" width="0.1173%" height="15" fill="rgb(229,215,31)" fg:x="141440" fg:w="170"/><text x="97.8184%" y="607.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (191 samples, 0.13%)</title><rect x="97.6863%" y="629" width="0.1318%" height="15" fill="rgb(221,52,54)" fg:x="141611" fg:w="191"/><text x="97.9363%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (190 samples, 0.13%)</title><rect x="97.6870%" y="613" width="0.1311%" height="15" fill="rgb(252,129,43)" fg:x="141612" fg:w="190"/><text x="97.9370%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (190 samples, 0.13%)</title><rect x="97.6870%" y="597" width="0.1311%" height="15" fill="rgb(248,183,27)" fg:x="141612" fg:w="190"/><text x="97.9370%" y="607.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::APParameters&gt;::serialize (1,008 samples, 0.70%)</title><rect x="97.1234%" y="693" width="0.6953%" height="15" fill="rgb(250,0,22)" fg:x="140795" fg:w="1008"/><text x="97.3734%" y="703.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayIndicesGains&gt;::serialize (364 samples, 0.25%)</title><rect x="97.5677%" y="677" width="0.2511%" height="15" fill="rgb(213,166,10)" fg:x="141439" fg:w="364"/><text x="97.8177%" y="687.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (364 samples, 0.25%)</title><rect x="97.5677%" y="661" width="0.2511%" height="15" fill="rgb(207,163,36)" fg:x="141439" fg:w="364"/><text x="97.8177%" y="671.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (364 samples, 0.25%)</title><rect x="97.5677%" y="645" width="0.2511%" height="15" fill="rgb(208,122,22)" fg:x="141439" fg:w="364"/><text x="97.8177%" y="655.50"></text></g><g><title>main`std::io::Write::write_all (545 samples, 0.38%)</title><rect x="97.8202%" y="629" width="0.3760%" height="15" fill="rgb(207,104,49)" fg:x="141805" fg:w="545"/><text x="98.0702%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`write (544 samples, 0.38%)</title><rect x="97.8209%" y="613" width="0.3753%" height="15" fill="rgb(248,211,50)" fg:x="141806" fg:w="544"/><text x="98.0709%" y="623.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (548 samples, 0.38%)</title><rect x="97.8188%" y="661" width="0.3780%" height="15" fill="rgb(217,13,45)" fg:x="141803" fg:w="548"/><text x="98.0688%" y="671.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (547 samples, 0.38%)</title><rect x="97.8195%" y="645" width="0.3773%" height="15" fill="rgb(211,216,49)" fg:x="141804" fg:w="547"/><text x="98.0695%" y="655.50"></text></g><g><title>main`rusty_cde::core::model::functional::allpass::shapes::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::allpass::shapes::ArrayGains&lt;T&gt;&gt;::serialize (552 samples, 0.38%)</title><rect x="97.8188%" y="693" width="0.3808%" height="15" fill="rgb(221,58,53)" fg:x="141803" fg:w="552"/><text x="98.0688%" y="703.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (552 samples, 0.38%)</title><rect x="97.8188%" y="677" width="0.3808%" height="15" fill="rgb(220,112,41)" fg:x="141803" fg:w="552"/><text x="98.0688%" y="687.50"></text></g><g><title>main`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (222 samples, 0.15%)</title><rect x="98.2044%" y="629" width="0.1531%" height="15" fill="rgb(236,38,28)" fg:x="142362" fg:w="222"/><text x="98.4544%" y="639.50"></text></g><g><title>main`std::io::Write::write_all (220 samples, 0.15%)</title><rect x="98.2058%" y="613" width="0.1518%" height="15" fill="rgb(227,195,22)" fg:x="142364" fg:w="220"/><text x="98.4558%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (220 samples, 0.15%)</title><rect x="98.2058%" y="597" width="0.1518%" height="15" fill="rgb(214,55,33)" fg:x="142364" fg:w="220"/><text x="98.4558%" y="607.50"></text></g><g><title>main`rusty_cde::core::model::functional::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::FunctionalDescription&gt;::serialize (2,012 samples, 1.39%)</title><rect x="96.9703%" y="709" width="1.3879%" height="15" fill="rgb(248,80,13)" fg:x="140573" fg:w="2012"/><text x="97.2203%" y="719.50"></text></g><g><title>main`rusty_cde::core::model::functional::measurement::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::functional::measurement::MeasurementMatrix&gt;::serialize (223 samples, 0.15%)</title><rect x="98.2044%" y="693" width="0.1538%" height="15" fill="rgb(238,52,6)" fg:x="142362" fg:w="223"/><text x="98.4544%" y="703.50"></text></g><g><title>main`&lt;ciborium::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (223 samples, 0.15%)</title><rect x="98.2044%" y="677" width="0.1538%" height="15" fill="rgb(224,198,47)" fg:x="142362" fg:w="223"/><text x="98.4544%" y="687.50"></text></g><g><title>main`ndarray::array_serde::_&lt;impl serde::ser::Serialize for ndarray::ArrayBase&lt;S,D&gt;&gt;::serialize (223 samples, 0.15%)</title><rect x="98.2044%" y="661" width="0.1538%" height="15" fill="rgb(233,171,20)" fg:x="142362" fg:w="223"/><text x="98.4544%" y="671.50"></text></g><g><title>main`&lt;ndarray::array_serde::Sequence&lt;A,D&gt; as serde::ser::Serialize&gt;::serialize (223 samples, 0.15%)</title><rect x="98.2044%" y="645" width="0.1538%" height="15" fill="rgb(241,30,25)" fg:x="142362" fg:w="223"/><text x="98.4544%" y="655.50"></text></g><g><title>main`rusty_cde::core::scenario::run (94,185 samples, 64.97%)</title><rect x="33.3956%" y="773" width="64.9709%" height="15" fill="rgb(207,171,38)" fg:x="48412" fg:w="94185"/><text x="33.6456%" y="783.50">main`rusty_cde::core::scenario::run</text></g><g><title>main`rusty_cde::core::scenario::Scenario::save (37,429 samples, 25.82%)</title><rect x="72.5472%" y="757" width="25.8193%" height="15" fill="rgb(234,70,1)" fg:x="105168" fg:w="37429"/><text x="72.7972%" y="767.50">main`rusty_cde::core::scenario::Scenario:..</text></g><g><title>main`rusty_cde::core::scenario::results::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::scenario::results::Results&gt;::serialize (21,125 samples, 14.57%)</title><rect x="83.7940%" y="741" width="14.5725%" height="15" fill="rgb(232,178,18)" fg:x="121472" fg:w="21125"/><text x="84.0440%" y="751.50">main`rusty_cde::core::..</text></g><g><title>main`rusty_cde::core::model::_::_&lt;impl serde::ser::Serialize for rusty_cde::core::model::Model&gt;::serialize (2,024 samples, 1.40%)</title><rect x="96.9703%" y="725" width="1.3962%" height="15" fill="rgb(241,78,40)" fg:x="140573" fg:w="2024"/><text x="97.2203%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (135,151 samples, 93.23%)</title><rect x="5.1371%" y="853" width="93.2301%" height="15" fill="rgb(222,35,25)" fg:x="7447" fg:w="135151"/><text x="5.3871%" y="863.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (135,151 samples, 93.23%)</title><rect x="5.1371%" y="837" width="93.2301%" height="15" fill="rgb(207,92,16)" fg:x="7447" fg:w="135151"/><text x="5.3871%" y="847.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>main`std::sys::unix::thread::Thread::new::thread_start (122,096 samples, 84.22%)</title><rect x="14.1427%" y="821" width="84.2245%" height="15" fill="rgb(216,59,51)" fg:x="20502" fg:w="122096"/><text x="14.3927%" y="831.50">main`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>main`core::ops::function::FnOnce::call_once{{vtable.shim}} (122,096 samples, 84.22%)</title><rect x="14.1427%" y="805" width="84.2245%" height="15" fill="rgb(213,80,28)" fg:x="20502" fg:w="122096"/><text x="14.3927%" y="815.50">main`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>main`std::sys_common::backtrace::__rust_begin_short_backtrace (122,092 samples, 84.22%)</title><rect x="14.1455%" y="789" width="84.2217%" height="15" fill="rgb(220,93,7)" fg:x="20506" fg:w="122092"/><text x="14.3955%" y="799.50">main`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>main`ndarray::dimension::stride_offset_checked (1,069 samples, 0.74%)</title><rect x="98.3679%" y="805" width="0.7374%" height="15" fill="rgb(225,24,44)" fg:x="142599" fg:w="1069"/><text x="98.6179%" y="815.50"></text></g><g><title>libgomp.1.dylib`gomp_team_start (37 samples, 0.03%)</title><rect x="99.9345%" y="661" width="0.0255%" height="15" fill="rgb(243,74,40)" fg:x="144870" fg:w="37"/><text x="100.1845%" y="671.50"></text></g><g><title>libgomp.1.dylib`gomp_barrier_wait_end (36 samples, 0.02%)</title><rect x="99.9352%" y="645" width="0.0248%" height="15" fill="rgb(228,39,7)" fg:x="144871" fg:w="36"/><text x="100.1852%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (30 samples, 0.02%)</title><rect x="99.9393%" y="629" width="0.0207%" height="15" fill="rgb(227,79,8)" fg:x="144877" fg:w="30"/><text x="100.1893%" y="639.50"></text></g><g><title>libgomp.1.dylib`GOMP_parallel (43 samples, 0.03%)</title><rect x="99.9345%" y="677" width="0.0297%" height="15" fill="rgb(236,58,11)" fg:x="144870" fg:w="43"/><text x="100.1845%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (41 samples, 0.03%)</title><rect x="99.9710%" y="645" width="0.0283%" height="15" fill="rgb(249,63,35)" fg:x="144923" fg:w="41"/><text x="100.2210%" y="655.50"></text></g><g><title>all (144,965 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(252,114,16)" fg:x="0" fg:w="144965"/><text x="0.2500%" y="879.50"></text></g><g><title>main`rusty_cde::core::scenario::run (2,367 samples, 1.63%)</title><rect x="98.3672%" y="853" width="1.6328%" height="15" fill="rgb(254,151,24)" fg:x="142598" fg:w="2367"/><text x="98.6172%" y="863.50"></text></g><g><title>main`rusty_cde::core::data::Data::from_simulation_config (2,367 samples, 1.63%)</title><rect x="98.3672%" y="837" width="1.6328%" height="15" fill="rgb(253,54,39)" fg:x="142598" fg:w="2367"/><text x="98.6172%" y="847.50"></text></g><g><title>main`rusty_cde::core::data::simulation::Simulation::run (2,366 samples, 1.63%)</title><rect x="98.3679%" y="821" width="1.6321%" height="15" fill="rgb(243,25,45)" fg:x="142599" fg:w="2366"/><text x="98.6179%" y="831.50"></text></g><g><title>main`rusty_cde::core::algorithm::estimation::calculate_system_prediction (1,297 samples, 0.89%)</title><rect x="99.1053%" y="805" width="0.8947%" height="15" fill="rgb(234,134,9)" fg:x="143668" fg:w="1297"/><text x="99.3553%" y="815.50"></text></g><g><title>main`&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize (95 samples, 0.07%)</title><rect x="99.9345%" y="789" width="0.0655%" height="15" fill="rgb(227,166,31)" fg:x="144870" fg:w="95"/><text x="100.1845%" y="799.50"></text></g><g><title> 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize (95 samples, 0.07%)</title><rect x="99.9345%" y="773" width="0.0655%" height="15" fill="rgb(245,143,41)" fg:x="144870" fg:w="95"/><text x="100.1845%" y="783.50"></text></g><g><title> 1]&gt;&gt;&gt;&gt;::dot (95 samples, 0.07%)</title><rect x="99.9345%" y="757" width="0.0655%" height="15" fill="rgb(238,181,32)" fg:x="144870" fg:w="95"/><text x="100.1845%" y="767.50"></text></g><g><title>main`ndarray::linalg::impl_linalg::general_mat_vec_mul_impl (95 samples, 0.07%)</title><rect x="99.9345%" y="741" width="0.0655%" height="15" fill="rgb(224,113,18)" fg:x="144870" fg:w="95"/><text x="100.1845%" y="751.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`cblas_sgemv (95 samples, 0.07%)</title><rect x="99.9345%" y="725" width="0.0655%" height="15" fill="rgb(240,229,28)" fg:x="144870" fg:w="95"/><text x="100.1845%" y="735.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`sgemv_thread_t (95 samples, 0.07%)</title><rect x="99.9345%" y="709" width="0.0655%" height="15" fill="rgb(250,185,3)" fg:x="144870" fg:w="95"/><text x="100.1845%" y="719.50"></text></g><g><title>libopenblasp-r0.3.23.dylib`exec_blas (95 samples, 0.07%)</title><rect x="99.9345%" y="693" width="0.0655%" height="15" fill="rgb(212,59,25)" fg:x="144870" fg:w="95"/><text x="100.1845%" y="703.50"></text></g><g><title>libgomp.1.dylib`gomp_team_end (52 samples, 0.04%)</title><rect x="99.9641%" y="677" width="0.0359%" height="15" fill="rgb(221,87,20)" fg:x="144913" fg:w="52"/><text x="100.2141%" y="687.50"></text></g><g><title>libgomp.1.dylib`gomp_team_barrier_wait_end (51 samples, 0.04%)</title><rect x="99.9648%" y="661" width="0.0352%" height="15" fill="rgb(213,74,28)" fg:x="144914" fg:w="51"/><text x="100.2148%" y="671.50"></text></g></svg></svg>